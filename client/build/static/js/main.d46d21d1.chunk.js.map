{"version":3,"sources":["reportWebVitals.js","redux/constants/user.js","redux/actions/user.js","redux/constants/category.js","redux/actions/category.js","redux/constants/pet.js","redux/actions/pet.js","redux/constants/brand.js","components/PrivateRoute.jsx","components/Navbar.jsx","components/Footer.jsx","screens/HomeScreen.jsx","components/MainSlider.jsx","screens/shop/Product.jsx","redux/constants/product.js","redux/actions/product.js","screens/shop/ShopScreen.jsx","screens/shop/ProductScreen.jsx","screens/services/Service.jsx","redux/constants/service.js","redux/actions/service.js","screens/services/ServicesScreen.jsx","helpers/daysHandler.js","screens/services/ServiceScreen.jsx","screens/AboutScreen.jsx","screens/ContactScreen.jsx","redux/constants/directory.js","redux/actions/directory.js","components/Ratings.jsx","helpers/convertStars.js","screens/directory/DirectoriesScreen.jsx","redux/constants/inquiry.js","helpers/initialValues.js","helpers/validationSchemas.js","helpers/convertTime.js","components/Review.jsx","components/ReviewGraph.jsx","components/InputFields.jsx","screens/directory/DirectoryProfileScreen.jsx","redux/actions/inquiry.js","screens/auth/LoginScreen.jsx","screens/auth/RegisterScreen.jsx","screens/auth/RegisterMemberScreen.jsx","screens/auth/VerifyAccountScreen.jsx","screens/auth/ForgotPasswordScreen.jsx","screens/auth/ResetPasswordScreen.jsx","screens/AccountScreen.jsx","screens/profile/ProfileDetails.jsx","screens/profile/UpdatePassword.jsx","screens/profile/UpdateCustomerProfile.jsx","helpers/handleSubmit.js","screens/profile/UpdateClientProfile.jsx","screens/profile/AdditionalDetails.jsx","screens/profile/ProfileScreen.jsx","screens/dashboards/products/AddProduct.jsx","screens/dashboards/products/ViewProduct.jsx","screens/dashboards/products/EditProduct.jsx","screens/dashboards/products/RemoveProduct.jsx","screens/dashboards/products/ProductCard.jsx","screens/dashboards/products/ProductDashboard.jsx","screens/dashboards/services/AddService.jsx","screens/dashboards/services/ViewService.jsx","screens/dashboards/services/EditService.jsx","screens/dashboards/services/RemoveService.jsx","screens/dashboards/services/ServiceCard.jsx","screens/dashboards/services/ServiceDashboard.jsx","screens/dashboards/admin/users/AddUser.jsx","screens/dashboards/admin/users/VerifyUser.jsx","screens/dashboards/admin/users/EditUser.jsx","screens/dashboards/admin/users/RemoveUser.jsx","screens/dashboards/admin/users/UsersDashboard.jsx","screens/dashboards/admin/directories/AddDirectory.jsx","screens/dashboards/admin/directories/ApproveDirectory.jsx","screens/dashboards/admin/directories/EditDirectory.jsx","screens/dashboards/admin/directories/RemoveDirectory.jsx","screens/dashboards/admin/directories/DirectoriesDashboard.jsx","screens/dashboards/admin/products/AddProduct.jsx","screens/dashboards/admin/products/ApproveProduct.jsx","screens/dashboards/admin/products/EditProduct.jsx","screens/dashboards/admin/products/RemoveProduct.jsx","screens/dashboards/admin/products/ProductsDashboard.jsx","screens/dashboards/admin/services/AddService.jsx","screens/dashboards/admin/services/ApproveService.jsx","screens/dashboards/admin/services/EditService.jsx","screens/dashboards/admin/services/RemoveService.jsx","screens/dashboards/admin/services/ServicesDashboard.jsx","screens/dashboards/admin/categories/AddCategory.jsx","screens/dashboards/admin/categories/EditCategory.jsx","screens/dashboards/admin/categories/RemoveCategory.jsx","screens/dashboards/admin/categories/CategoriesDashboard.jsx","screens/dashboards/admin/pets/AddPet.jsx","screens/dashboards/admin/pets/EditPet.jsx","screens/dashboards/admin/pets/RemovePet.jsx","screens/dashboards/admin/pets/PetsDashboard.jsx","screens/dashboards/admin/brands/AddBrand.jsx","redux/actions/brand.js","screens/dashboards/admin/brands/EditBrand.jsx","screens/dashboards/admin/brands/RemoveBrand.jsx","screens/dashboards/admin/brands/BrandsDashboard.jsx","screens/dashboards/admin/AdminDashboard.jsx","App.js","redux/store.js","redux/reducers/user.js","redux/reducers/product.js","redux/reducers/service.js","redux/reducers/directory.js","redux/reducers/category.js","redux/reducers/pet.js","redux/reducers/brand.js","redux/reducers/inquiry.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAIL","VERIFY_REQUEST","VERIFY_SUCCESS","VERIFY_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAIL","LOAD_REQUEST","LOAD_SUCCESS","LOAD_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_RESET","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","GET_USERS_REQUEST","GET_USERS_SUCCESS","GET_USERS_FAIL","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAIL","ADD_USER_REQUEST","ADD_USER_SUCCESS","ADD_USER_FAIL","ADD_USER_RESET","EDIT_USER_REQUEST","EDIT_USER_SUCCESS","EDIT_USER_FAIL","EDIT_USER_RESET","VERIFY_USER_REQUEST","VERIFY_USER_SUCCESS","VERIFY_USER_FAIL","REMOVE_USER_REQUEST","REMOVE_USER_SUCCESS","REMOVE_USER_FAIL","REMOVE_USER_RESET","CLEAR_ERRORS","register","user","dispatch","a","type","actionTypes","axios","post","data","payload","response","error","updateProfile","put","clearErrors","GET_CATEGORIES_REQUEST","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","GET_DIRECTORY_CATEGORIES_REQUEST","GET_DIRECTORY_CATEGORIES_SUCCESS","GET_DIRECTORY_CATEGORIES_FAIL","GET_PRODUCT_CATEGORIES_REQUEST","GET_PRODUCT_CATEGORIES_SUCCESS","GET_PRODUCT_CATEGORIES_FAIL","GET_SERVICE_CATEGORIES_REQUEST","GET_SERVICE_CATEGORIES_SUCCESS","GET_SERVICE_CATEGORIES_FAIL","GET_CATEGORY_REQUEST","GET_CATEGORY_SUCCESS","GET_CATEGORY_FAIL","ADD_CATEGORY_REQUEST","ADD_CATEGORY_SUCCESS","ADD_CATEGORY_FAIL","ADD_CATEGORY_RESET","EDIT_CATEGORY_REQUEST","EDIT_CATEGORY_SUCCESS","EDIT_CATEGORY_FAIL","EDIT_CATEGORY_RESET","REMOVE_CATEGORY_REQUEST","REMOVE_CATEGORY_SUCCESS","REMOVE_CATEGORY_FAIL","REMOVE_CATEGORY_RESET","getProductCategories","get","categories","GET_PETS_REQUEST","GET_PETS_SUCCESS","GET_PETS_FAIL","GET_PET_REQUEST","GET_PET_SUCCESS","GET_PET_FAIL","ADD_PET_REQUEST","ADD_PET_SUCCESS","ADD_PET_FAIL","ADD_PET_RESET","EDIT_PET_REQUEST","EDIT_PET_SUCCESS","EDIT_PET_FAIL","EDIT_PET_RESET","REMOVE_PET_REQUEST","REMOVE_PET_SUCCESS","REMOVE_PET_FAIL","REMOVE_PET_RESET","getPets","pets","GET_BRANDS_REQUEST","GET_BRANDS_SUCCESS","GET_BRANDS_FAIL","GET_BRAND_REQUEST","GET_BRAND_SUCCESS","GET_BRAND_FAIL","ADD_BRAND_REQUEST","ADD_BRAND_SUCCESS","ADD_BRAND_FAIL","ADD_BRAND_RESET","EDIT_BRAND_REQUEST","EDIT_BRAND_SUCCESS","EDIT_BRAND_FAIL","EDIT_BRAND_RESET","REMOVE_BRAND_REQUEST","REMOVE_BRAND_SUCCESS","REMOVE_BRAND_FAIL","REMOVE_BRAND_RESET","PrivateRoute","isAdmin","Component","component","rest","useSelector","state","loading","isAuthenticated","render","props","role","to","PetohubNavbar","useDispatch","useState","menuOpen","setMenuOpen","width","undefined","height","size","setSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","menuToggleHandler","p","scrollTo","className","href","target","rel","src","alt","onClick","name","defaults","headers","common","localStorage","removeItem","process","Footer","Container","Row","Col","lg","sm","xs","fluid","Date","getFullYear","HomeScreen","placeholder","md","style","wordWrap","MainSlider","loop","modules","Autoplay","Navigation","Pagination","spaceBetween","autoplay","delay","disableOnInteraction","navigation","pagination","clickable","dynamicBullets","Product","product","date","createdAt","day","getUTCDate","month","getUTCMonth","year","getUTCFullYear","added","_id","backgroundImage","productImages","backgroundSize","backgroundRepeat","backgroundPosition","category","price","GET_PRODUCTS_REQUEST","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_PRODUCT_REQUEST","GET_PRODUCT_SUCCESS","GET_PRODUCT_FAIL","GET_OWN_PRODUCTS_REQUEST","GET_OWN_PRODUCTS_SUCCESS","GET_OWN_PRODUCTS_FAIL","GET_OWN_PRODUCT_REQUEST","GET_OWN_PRODUCT_SUCCESS","GET_OWN_PRODUCT_FAIL","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAIL","ADD_PRODUCT_RESET","EDIT_PRODUCT_REQUEST","EDIT_PRODUCT_SUCCESS","EDIT_PRODUCT_FAIL","EDIT_PRODUCT_RESET","REMOVE_PRODUCT_REQUEST","REMOVE_PRODUCT_SUCCESS","REMOVE_PRODUCT_FAIL","REMOVE_PRODUCT_RESET","GET_ALL_PRODUCTS_REQUEST","GET_ALL_PRODUCTS_SUCCESS","GET_ALL_PRODUCTS_FAIL","GET_ANY_PRODUCT_REQUEST","GET_ANY_PRODUCT_SUCCESS","GET_ANY_PRODUCT_FAIL","APPROVE_PRODUCT_REQUEST","APPROVE_PRODUCT_SUCCESS","APPROVE_PRODUCT_FAIL","addProduct","removeProduct","id","delete","editProduct","CheckBox","label","Form","Group","Check","ShopScreen","products","productCategories","pet","min","max","priceRange","setPriceRange","showFilter","setShowFilter","listener","x","map","index","step","onInput","e","value","length","ProductScreen","match","params","productId","image","fontSize","description","petType","join","weight","link","pathname","Button","Service","service","serviceImages","GET_SERVICES_REQUEST","GET_SERVICES_SUCCESS","GET_SERVICES_FAIL","GET_SERVICE_REQUEST","GET_SERVICE_SUCCESS","GET_SERVICE_FAIL","GET_OWN_SERVICES_REQUEST","GET_OWN_SERVICES_SUCCESS","GET_OWN_SERVICES_FAIL","GET_OWN_SERVICE_REQUEST","GET_OWN_SERVICE_SUCCESS","GET_OWN_SERVICE_FAIL","ADD_SERVICE_REQUEST","ADD_SERVICE_SUCCESS","ADD_SERVICE_FAIL","ADD_SERVICE_RESET","EDIT_SERVICE_REQUEST","EDIT_SERVICE_SUCCESS","EDIT_SERVICE_FAIL","EDIT_SERVICE_RESET","REMOVE_SERVICE_REQUEST","REMOVE_SERVICE_SUCCESS","REMOVE_SERVICE_FAIL","REMOVE_SERVICE_RESET","GET_ALL_SERVICES_REQUEST","GET_ALL_SERVICES_SUCCESS","GET_ALL_SERVICES_FAIL","GET_ANY_SERVICE_REQUEST","GET_ANY_SERVICE_SUCCESS","GET_ANY_SERVICE_FAIL","APPROVE_SERVICE_REQUEST","APPROVE_SERVICE_SUCCESS","APPROVE_SERVICE_FAIL","addService","removeService","editService","ServicesScreen","services","serviceCategories","arrayToBinary","array","days","d","includes","reverse","reduce","res","binaryToArray","binary","boolArray","push","filter","_","ServiceScreen","serviceId","timings","from","address","AboutScreen","ContactScreen","GET_DIRECTORIES_REQUEST","GET_DIRECTORIES_SUCCESS","GET_DIRECTORIES_FAIL","GET_DIRECTORY_REQUEST","GET_DIRECTORY_SUCCESS","GET_DIRECTORY_FAIL","GET_DIRECTORY_PRODUCTS_REQUEST","GET_DIRECTORY_PRODUCTS_SUCCESS","GET_DIRECTORY_PRODUCTS_FAIL","GET_DIRECTORY_SERVICES_REQUEST","GET_DIRECTORY_SERVICES_SUCCESS","GET_DIRECTORY_SERVICES_FAIL","REVIEW_DIRECTORY_REQUEST","REVIEW_DIRECTORY_SUCCESS","REVIEW_DIRECTORY_FAIL","REMOVE_DIRECTORY_REVIEW_REQUEST","REMOVE_DIRECTORY_REVIEW_SUCCESS","REMOVE_DIRECTORY_REVIEW_FAIL","GET_ALL_DIRECTORIES_REQUEST","GET_ALL_DIRECTORIES_SUCCESS","GET_ALL_DIRECTORIES_FAIL","GET_ANY_DIRECTORY_REQUEST","GET_ANY_DIRECTORY_SUCCESS","GET_ANY_DIRECTORY_FAIL","ADD_DIRECTORY_REQUEST","ADD_DIRECTORY_SUCCESS","ADD_DIRECTORY_FAIL","ADD_DIRECTORY_RESET","EDIT_DIRECTORY_REQUEST","EDIT_DIRECTORY_SUCCESS","EDIT_DIRECTORY_FAIL","EDIT_DIRECTORY_RESET","APPROVE_DIRECTORY_REQUEST","APPROVE_DIRECTORY_SUCCESS","APPROVE_DIRECTORY_FAIL","REMOVE_DIRECTORY_REQUEST","REMOVE_DIRECTORY_SUCCESS","REMOVE_DIRECTORY_FAIL","REMOVE_DIRECTORY_RESET","editDirectory","directory","Ratings","rating","num","n","Math","round","convertStars","val","display","DirectoryCard","diffTime","abs","diffDays","ceil","Card","username","Img","variant","directoryImages","Body","Title","storeName","averageRating","Text","pincode","DirectoriesScreen","directories","directoryCategories","Select","defaultValue","states","ADD_INQUIRY_REQUEST","ADD_INQUIRY_SUCCESS","ADD_INQUIRY_FAIL","GET_OWN_INQUIRIES_REQUEST","GET_OWN_INQUIRIES_SUCCESS","GET_OWN_INQUIRIES_FAIL","GET_OWN_INQUIRY_REQUEST","GET_OWN_INQUIRY_SUCCESS","GET_OWN_INQUIRY_FAIL","GET_INQUIRIES_REQUEST","GET_INQUIRIES_SUCCESS","GET_INQUIRIES_FAIL","GET_INQUIRY_REQUEST","GET_INQUIRY_SUCCESS","GET_INQUIRY_FAIL","EDIT_INQUIRY_REQUEST","EDIT_INQUIRY_SUCCESS","EDIT_INQUIRY_FAIL","REMOVE_INQUIRY_REQUEST","REMOVE_INQUIRY_SUCCESS","REMOVE_INQUIRY_FAIL","customerRegistration","email","password","confirmPassword","terms","clientRegistration","number","city","directoryAdditional","website","tagline","features","gallery","details","JSON","parse","stringify","location","faq","directoryUpdate","clientUpdate","profileImage","_product","seller","countInStock","breedType","affiliateLinks","brand","isVeg","ageRange","productImagesUpload","_service","nameOfIncharge","numberOfIncharge","directoryInquiry","message","directoryReview","subject","comment","Yup","required","oneOf","directoryRegistration","of","title","content","matches","lat","lng","question","answer","concat","positive","productLink","productProvider","productPrice","convertTime","time","getDate","getMonth","hours","getHours","isPM","minutes","getMinutes","seconds","getSeconds","Review","review","reviewer","ReviewGraph","ratings","total","average","Object","keys","key","maxWidth","TextField","useField","field","meta","Label","htmlFor","Control","isValid","touched","isInvalid","Feedback","checked","CheckBoxOptions","options","opt","as","SelectField","classes","FormButton","FieldArrayInput","rows","TextArrayField","remove","preventDefault","TextArrayOfObjectsField","fieldType","colSize","assign","Array","k","TimingsField","tConvert","timeString","H","substr","ampm","BannerInfo","BannerButtons","DirectoryProfileScreen","directoryLoading","inquiry","inquiryLoading","success","loadDirectoryProducts","loadDirectoryServices","existingReview","reviews","toString","slidesPerView","feature","initialValues","dirInqInitialValues","validationSchema","dirInqValidationSchema","onSubmit","values","handleSubmit","disabled","breakpoints","Tabs","defaultActiveKey","Tab","eventKey","dirRevInitialValues","dirRevValidationSchema","Accordion","Item","Header","timing","qa","LoginScreen","history","useHistory","setItem","token","noValidate","Alert","RegisterScreen","emailSent","FirstStep","next","firstValidation","SecondStep","prev","secondValidation","ThirdStep","RegisterMemberScreen","setData","setStep","submit","nextStep","newData","final","prevStep","steps","VerifyAccountScreen","verifyToken","flexDirection","alignItems","justifyContent","isVerified","exact","Nav","Link","ForgotPasswordScreen","forgotPassword","ResetPasswordScreen","resetPassword","resetToken","AccountScreen","ProfileDetails","UpdatePassword","profile","passwordChangeValidate","oldPassword","newPassword","confirmNewPassword","passwords","isUpdatedPassword","UpdateCustomerProfile","customerProfileChangeData","customerProfileChangeValidate","fd","FormData","append","setFieldValue","errors","onChange","currentTarget","files","tooltip","isUpdatedProfile","detailsJSON","timingsJSON","faqJSON","locationJSON","filesLength","i","newProduct","set","updateProduct","sizeJSON","ageRangeJSON","affiliateLinksJSON","newService","updateService","daysBinary","UpdateClientProfile","ImageCard","show","setShow","handleClose","Modal","onHide","closeButton","splice","AdditionalDetails","spaceLeft","setErrors","multiple","editor","ClassicEditor","getData","ProfileScreen","isApproved","Content","Pane","AddProduct","isAdded","noValidation","ViewProduct","_productImages","EditProduct","isUpdated","RemoveProduct","ProductCard","viewDialog","setViewDialog","editDialog","setEditDialog","removeDialog","setRemoveDialog","background","substring","ProductDashboard","addDialog","setAddDialog","AddService","ViewService","arr","byte","_serviceImages","EditService","allDays","RemoveService","ServiceCard","slice","ServiceDashboard","AddUser","admin","VerifyUser","userId","EditUser","editUser","RemoveUser","UserRow","currentUser","verifyDialog","setVerifyDialog","cursor","navigator","clipboard","writeText","verifiedAt","updatedAt","UsersDashboard","users","searchValue","setSearchValue","searchKey","setSearchKey","Table","responsive","toLowerCase","AddDirectory","ApproveDirectory","directoryId","EditDirectory","RemoveDirectory","DirectoryRow","approveDialog","setApproveDialog","approvedAt","DirectoriesDashboard","brands","fieldProps","ApproveProduct","ProductRow","minWidth","ProductsDashboard","ApproveService","ServiceRow","ServicesDashboard","AddCategory","EditCategory","categoryId","editCategory","RemoveCategory","CategoryRow","docs","doc","CategoriesDashboard","AddPet","breeds","EditPet","petId","editPet","RemovePet","PetRow","PetsDashboard","AddBrand","logo","sellers","images","EditBrand","brandId","editBrand","RemoveBrand","BrandRow","BrandsDashboard","AdminDashboard","App","getItem","path","reducer","combineReducers","action","removeIndex","findIndex","isRemoved","editIndex","reviewLoading","inquiries","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d46d21d1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*\r\n * Public actions\r\n */\r\n\r\n// POST /api/user/login\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\n\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAIL = \"LOGOUT_FAIL\";\r\n\r\n// POST /api/user/register\r\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\n\r\n// GET /api/user/verify/:verificationToken\r\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\r\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\r\nexport const VERIFY_FAIL = \"VERIFY_FAIL\";\r\n\r\n// POST /api/user/forgotpassword\r\nexport const FORGOT_PASSWORD_REQUEST = \"FORGOT_PASSWORD_REQUEST\";\r\nexport const FORGOT_PASSWORD_SUCCESS = \"FORGOT_PASSWORD_SUCCESS\";\r\nexport const FORGOT_PASSWORD_FAIL = \"FORGOT_PASSWORD_FAIL\";\r\n\r\n// PUT /api/user/resetpassword/:resetToken\r\nexport const RESET_PASSWORD_REQUEST = \"RESET_PASSWORD_REQUEST\";\r\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\";\r\nexport const RESET_PASSWORD_FAIL = \"RESET_PASSWORD_FAIL\";\r\n\r\n/*\r\n * Private actions\r\n */\r\n\r\n// GET /api/user/me\r\nexport const LOAD_REQUEST = \"LOAD_REQUEST\";\r\nexport const LOAD_SUCCESS = \"LOAD_SUCCESS\";\r\nexport const LOAD_FAIL = \"LOAD_FAIL\";\r\n\r\n// PUT /api/user/updateprofile\r\nexport const UPDATE_PROFILE_REQUEST = \"UPDATE_PROFILE_REQUEST\";\r\nexport const UPDATE_PROFILE_SUCCESS = \"UPDATE_PROFILE_SUCCESS\";\r\nexport const UPDATE_PROFILE_RESET = \"UPDATE_PROFILE_RESET\";\r\nexport const UPDATE_PROFILE_FAIL = \"UPDATE_PROFILE_FAIL\";\r\n\r\n// PUT /api/user/updatepassword\r\nexport const UPDATE_PASSWORD_REQUEST = \"UPDATE_PASSWORD_REQUEST\";\r\nexport const UPDATE_PASSWORD_SUCCESS = \"UPDATE_PASSWORD_SUCCESS\";\r\nexport const UPDATE_PASSWORD_RESET = \"UPDATE_PASSWORD_RESET\";\r\nexport const UPDATE_PASSWORD_FAIL = \"UPDATE_PASSWORD_FAIL\";\r\n\r\n/*\r\n * Admin actions\r\n */\r\n\r\n// GET /api/user\r\nexport const GET_USERS_REQUEST = \"GET_USERS_REQUEST\";\r\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\r\nexport const GET_USERS_FAIL = \"GET_USERS_FAIL\";\r\n\r\n// GET /api/user/:id\r\nexport const GET_USER_REQUEST = \"GET_USER_REQUEST\";\r\nexport const GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\r\nexport const GET_USER_FAIL = \"GET_USER_FAIL\";\r\n\r\n// POST /api/user/add\r\nexport const ADD_USER_REQUEST = \"ADD_USER_REQUEST\";\r\nexport const ADD_USER_SUCCESS = \"ADD_USER_SUCCESS\";\r\nexport const ADD_USER_FAIL = \"ADD_USER_FAIL\";\r\nexport const ADD_USER_RESET = \"ADD_USER_RESET\";\r\n\r\n// PUT /api/user/edit/:id\r\nexport const EDIT_USER_REQUEST = \"EDIT_USER_REQUEST\";\r\nexport const EDIT_USER_SUCCESS = \"EDIT_USER_SUCCESS\";\r\nexport const EDIT_USER_FAIL = \"EDIT_USER_FAIL\";\r\nexport const EDIT_USER_RESET = \"EDIT_USER_RESET\";\r\n\r\n// PUT /api/user/verifyaccount/:id\r\nexport const VERIFY_USER_REQUEST = \"VERIFY_USER_REQUEST\";\r\nexport const VERIFY_USER_SUCCESS = \"VERIFY_USER_SUCCESS\";\r\nexport const VERIFY_USER_FAIL = \"VERIFY_USER_FAIL\";\r\n\r\n// DEL /api/user/remove/:id\r\nexport const REMOVE_USER_REQUEST = \"REMOVE_USER_REQUEST\";\r\nexport const REMOVE_USER_SUCCESS = \"REMOVE_USER_SUCCESS\";\r\nexport const REMOVE_USER_FAIL = \"REMOVE_USER_FAIL\";\r\nexport const REMOVE_USER_RESET = \"REMOVE_USER_RESET\";\r\n\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import * as actionTypes from \"../constants/user\";\r\nimport axios from \"axios\";\r\n\r\n// POST /api/user/login\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.LOGIN_REQUEST });\r\n    const { data } = await axios.post(\"/api/user/login\", { email, password });\r\n    localStorage.setItem(process.env.REACT_APP_TOKEN_NAME, data.token);\r\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${data.token}`;\r\n    dispatch({ type: actionTypes.LOGIN_SUCCESS, payload: data.user });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.LOGIN_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  try {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n    localStorage.removeItem(process.env.REACT_APP_TOKEN_NAME);\r\n    dispatch({ type: actionTypes.LOGOUT_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.LOGOUT_FAIL, payload: \"Logout failed\" });\r\n  }\r\n};\r\n\r\n// POST /api/user/register\r\nexport const register = (user) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.REGISTER_REQUEST });\r\n    const { data } = await axios.post(\"/api/user/register\", user);\r\n    dispatch({ type: actionTypes.REGISTER_SUCCESS, payload: data.data });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.REGISTER_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/user/verify/:verificationToken\r\nexport const verify = (token) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.VERIFY_REQUEST });\r\n    const { data } = await axios.get(`/api/user/verify/${token}`);\r\n    localStorage.setItem(process.env.REACT_APP_TOKEN_NAME, data.token);\r\n    dispatch({ type: actionTypes.VERIFY_SUCCESS, payload: data.user });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.VERIFY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// POST /api/user/forgotpassword\r\nexport const forgotPassword = (email) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.FORGOT_PASSWORD_REQUEST });\r\n    const { data } = await axios.post(\"/api/user/forgotpassword\", { email });\r\n    dispatch({ type: actionTypes.FORGOT_PASSWORD_SUCCESS, payload: data.success });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.FORGOT_PASSWORD_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/user/resetpassword/:resetToken\r\nexport const resetPassword = (token, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.RESET_PASSWORD_REQUEST });\r\n    const { data } = await axios.put(`/api/user/resetpassword/${token}`, { password });\r\n    dispatch({ type: actionTypes.RESET_PASSWORD_SUCCESS, payload: data.success });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.RESET_PASSWORD_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/user/me\r\nexport const loadUser = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.LOAD_REQUEST });\r\n    const token = localStorage.getItem(process.env.REACT_APP_TOKEN_NAME);\r\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n    const { data } = await axios.get(\"/api/user/me\");\r\n    dispatch({ type: actionTypes.LOAD_SUCCESS, payload: data.user });\r\n  } catch (error) {\r\n    localStorage.removeItem(process.env.REACT_APP_TOKEN_NAME);\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n    dispatch({ type: actionTypes.LOAD_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/user/updateprofile\r\nexport const updateProfile = (user) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.UPDATE_PROFILE_REQUEST });\r\n    const { data } = await axios.put(\"/api/user/updateprofile\", user);\r\n    dispatch({ type: actionTypes.UPDATE_PROFILE_SUCCESS, payload: data.user });\r\n    dispatch({ type: actionTypes.LOAD_SUCCESS, payload: data.user });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.UPDATE_PROFILE_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/user/updatepassword\r\nexport const updatePassword = (passwords) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.UPDATE_PASSWORD_REQUEST });\r\n    const { data } = await axios.put(\"/api/user/updatepassword\", passwords);\r\n    localStorage.setItem(process.env.REACT_APP_TOKEN_NAME, data.token);\r\n    dispatch({ type: actionTypes.UPDATE_PASSWORD_SUCCESS, payload: data.user });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.UPDATE_PASSWORD_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n/*\r\n * Admin Routes\r\n */\r\n\r\n// GET /api/user\r\nexport const getUsers = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_USERS_REQUEST });\r\n    const { data } = await axios.get(\"/api/user\");\r\n    dispatch({ type: actionTypes.GET_USERS_SUCCESS, payload: data.users });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_USERS_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/user/:id\r\nexport const getUser = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_USER_REQUEST });\r\n    const { data } = await axios.get(`/api/user/${id}`);\r\n    dispatch({ type: actionTypes.GET_USER_SUCCESS, payload: data.user });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_USER_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// POST /api/user/add\r\nexport const addUser = (user) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.ADD_USER_REQUEST });\r\n    const { data } = await axios.post(`/api/user/add`, user);\r\n    dispatch({ type: actionTypes.ADD_USER_SUCCESS, payload: data.user });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.ADD_USER_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/user/edit/:id\r\nexport const editUser = (user, id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.EDIT_USER_REQUEST });\r\n    const { data } = await axios.put(`/api/user/edit/${id}`, user);\r\n    dispatch({ type: actionTypes.EDIT_USER_SUCCESS, payload: data.user });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.EDIT_USER_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/user/verifyaccount/:id\r\nexport const verifyUser = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.VERIFY_USER_REQUEST });\r\n    const { data } = await axios.put(`/api/user/verifyaccount/${id}`);\r\n    dispatch({ type: actionTypes.VERIFY_USER_SUCCESS, payload: data.user });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.VERIFY_USER_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// DEL /api/user/remove/:id\r\nexport const removeUser = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.REMOVE_USER_REQUEST });\r\n    const { data } = await axios.delete(`/api/user/remove/${id}`);\r\n    dispatch({ type: actionTypes.REMOVE_USER_SUCCESS, payload: data.user });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.REMOVE_USER_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// Clearing Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.CLEAR_ERRORS });\r\n};\r\n\r\nexport const addUserReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.ADD_USER_RESET });\r\n};\r\n\r\nexport const editUserReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.EDIT_USER_RESET });\r\n};\r\n\r\nexport const removeUserReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.REMOVE_USER_RESET });\r\n};\r\n","/*\r\n * Public Actions\r\n */\r\n\r\n// GET /api/category\r\nexport const GET_CATEGORIES_REQUEST = \"GET_CATEGORIES_REQUEST\";\r\nexport const GET_CATEGORIES_SUCCESS = \"GET_CATEGORIES_SUCCESS\";\r\nexport const GET_CATEGORIES_FAIL = \"GET_CATEGORIES_FAIL\";\r\n\r\n// GET /api/category/directory\r\nexport const GET_DIRECTORY_CATEGORIES_REQUEST = \"GET_DIRECTORY_CATEGORIES_REQUEST\";\r\nexport const GET_DIRECTORY_CATEGORIES_SUCCESS = \"GET_DIRECTORY_CATEGORIES_SUCCESS\";\r\nexport const GET_DIRECTORY_CATEGORIES_FAIL = \"GET_DIRECTORY_CATEGORIES_FAIL\";\r\n\r\n// GET /api/category/product\r\nexport const GET_PRODUCT_CATEGORIES_REQUEST = \"GET_PRODUCT_CATEGORIES_REQUEST\";\r\nexport const GET_PRODUCT_CATEGORIES_SUCCESS = \"GET_PRODUCT_CATEGORIES_SUCCESS\";\r\nexport const GET_PRODUCT_CATEGORIES_FAIL = \"GET_PRODUCT_CATEGORIES_FAIL\";\r\n\r\n// GET /api/category/service\r\nexport const GET_SERVICE_CATEGORIES_REQUEST = \"GET_SERVICE_CATEGORIES_REQUEST\";\r\nexport const GET_SERVICE_CATEGORIES_SUCCESS = \"GET_SERVICE_CATEGORIES_SUCCESS\";\r\nexport const GET_SERVICE_CATEGORIES_FAIL = \"GET_SERVICE_CATEGORIES_FAIL\";\r\n\r\n// GET /api/category/:id\r\nexport const GET_CATEGORY_REQUEST = \"GET_CATEGORY_REQUEST\";\r\nexport const GET_CATEGORY_SUCCESS = \"GET_CATEGORY_SUCCESS\";\r\nexport const GET_CATEGORY_FAIL = \"GET_CATEGORY_FAIL\";\r\n\r\n/*\r\n * Admin actions\r\n */\r\n\r\n// POST /api/category/add\r\nexport const ADD_CATEGORY_REQUEST = \"ADD_CATEGORY_REQUEST\";\r\nexport const ADD_CATEGORY_SUCCESS = \"ADD_CATEGORY_SUCCESS\";\r\nexport const ADD_CATEGORY_FAIL = \"ADD_CATEGORY_FAIL\";\r\nexport const ADD_CATEGORY_RESET = \"ADD_CATEGORY_RESET\";\r\n\r\n// PUT /api/category/edit/:id\r\nexport const EDIT_CATEGORY_REQUEST = \"EDIT_CATEGORY_REQUEST\";\r\nexport const EDIT_CATEGORY_SUCCESS = \"EDIT_CATEGORY_SUCCESS\";\r\nexport const EDIT_CATEGORY_FAIL = \"EDIT_CATEGORY_FAIL\";\r\nexport const EDIT_CATEGORY_RESET = \"EDIT_CATEGORY_RESET\";\r\n\r\n// DEL /api/category/remove/:id\r\nexport const REMOVE_CATEGORY_REQUEST = \"REMOVE_CATEGORY_REQUEST\";\r\nexport const REMOVE_CATEGORY_SUCCESS = \"REMOVE_CATEGORY_SUCCESS\";\r\nexport const REMOVE_CATEGORY_FAIL = \"REMOVE_CATEGORY_FAIL\";\r\nexport const REMOVE_CATEGORY_RESET = \"REMOVE_CATEGORY_RESET\";\r\n\r\n// Clear errors\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import * as actionTypes from \"../constants/category\";\r\nimport axios from \"axios\";\r\n\r\n// GET /api/category/\r\nexport const getCategories = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_CATEGORIES_REQUEST });\r\n    const { data } = await axios.get(\"/api/category\");\r\n    dispatch({ type: actionTypes.GET_CATEGORIES_SUCCESS, payload: data.categories });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_CATEGORIES_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/category/directory\r\nexport const getDirectoryCategories = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_DIRECTORY_CATEGORIES_REQUEST });\r\n    const { data } = await axios.get(\"/api/category/directory\");\r\n    dispatch({ type: actionTypes.GET_DIRECTORY_CATEGORIES_SUCCESS, payload: data.categories });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_DIRECTORY_CATEGORIES_FAIL,\r\n      payload: error.response.data.error,\r\n    });\r\n  }\r\n};\r\n\r\n// GET /api/category/product\r\nexport const getProductCategories = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCT_CATEGORIES_REQUEST });\r\n    const { data } = await axios.get(\"/api/category/product\");\r\n    dispatch({ type: actionTypes.GET_PRODUCT_CATEGORIES_SUCCESS, payload: data.categories });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_CATEGORIES_FAIL,\r\n      payload: error.response.data.error,\r\n    });\r\n  }\r\n};\r\n\r\n// GET /api/category/service\r\nexport const getServiceCategories = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_SERVICE_CATEGORIES_REQUEST });\r\n    const { data } = await axios.get(\"/api/category/service\");\r\n    dispatch({ type: actionTypes.GET_SERVICE_CATEGORIES_SUCCESS, payload: data.categories });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_SERVICE_CATEGORIES_FAIL,\r\n      payload: error.response.data.error,\r\n    });\r\n  }\r\n};\r\n\r\n// GET /api/category/:id\r\nexport const getCategory = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_CATEGORY_REQUEST });\r\n    const { data } = await axios.get(`/api/category/${id}`);\r\n    dispatch({ type: actionTypes.GET_CATEGORY_SUCCESS, payload: data.category });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_CATEGORY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n/*\r\n * Admin routes\r\n */\r\n\r\n// POST /api/category/add\r\nexport const addCategory = (category) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.ADD_CATEGORY_REQUEST });\r\n    const { data } = await axios.post(\"/api/category/add\", category);\r\n    dispatch({ type: actionTypes.ADD_CATEGORY_SUCCESS, payload: data.category });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.ADD_CATEGORY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/category/edit/:id\r\nexport const editCategory = (category, id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.EDIT_CATEGORY_REQUEST });\r\n    const { data } = await axios.put(`/api/category/edit/${id}`, category);\r\n    dispatch({ type: actionTypes.EDIT_CATEGORY_SUCCESS, payload: data.category });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.EDIT_CATEGORY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// DEL /api/category/remove/:id\r\nexport const removeCategory = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.REMOVE_CATEGORY_REQUEST });\r\n    const { data } = await axios.delete(`/api/category/remove/${id}`);\r\n    dispatch({ type: actionTypes.REMOVE_CATEGORY_SUCCESS, payload: data.category });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.REMOVE_CATEGORY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.CLEAR_ERRORS });\r\n};\r\n\r\nexport const editCategoryReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.EDIT_CATEGORY_RESET });\r\n};\r\n\r\nexport const addCategoryReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.ADD_CATEGORY_RESET });\r\n};\r\n\r\nexport const removeCategoryReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.REMOVE_CATEGORY_RESET });\r\n};\r\n","/*\r\n * Public Actions\r\n */\r\n\r\n// GET /api/pet\r\nexport const GET_PETS_REQUEST = \"GET_PETS_REQUEST\";\r\nexport const GET_PETS_SUCCESS = \"GET_PETS_SUCCESS\";\r\nexport const GET_PETS_FAIL = \"GET_PETS_FAIL\";\r\n\r\n// GET /api/pet/:id\r\nexport const GET_PET_REQUEST = \"GET_PET_REQUEST\";\r\nexport const GET_PET_SUCCESS = \"GET_PET_SUCCESS\";\r\nexport const GET_PET_FAIL = \"GET_PET_FAIL\";\r\n\r\n/*\r\n * Admin actions\r\n */\r\n\r\n// POST /api/pet/add\r\nexport const ADD_PET_REQUEST = \"ADD_PET_REQUEST\";\r\nexport const ADD_PET_SUCCESS = \"ADD_PET_SUCCESS\";\r\nexport const ADD_PET_FAIL = \"ADD_PET_FAIL\";\r\nexport const ADD_PET_RESET = \"ADD_PET_RESET\";\r\n\r\n// PUT /api/pet/edit/:id\r\nexport const EDIT_PET_REQUEST = \"EDIT_PET_REQUEST\";\r\nexport const EDIT_PET_SUCCESS = \"EDIT_PET_SUCCESS\";\r\nexport const EDIT_PET_FAIL = \"EDIT_PET_FAIL\";\r\nexport const EDIT_PET_RESET = \"EDIT_PET_RESET\";\r\n\r\n// DEL /api/pet/remove/:id\r\nexport const REMOVE_PET_REQUEST = \"REMOVE_PET_REQUEST\";\r\nexport const REMOVE_PET_SUCCESS = \"REMOVE_PET_SUCCESS\";\r\nexport const REMOVE_PET_FAIL = \"REMOVE_PET_FAIL\";\r\nexport const REMOVE_PET_RESET = \"REMOVE_PET_RESET\";\r\n\r\n// Clear errors\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import * as actionTypes from \"../constants/pet\";\r\nimport axios from \"axios\";\r\n\r\n// GET /api/pet/\r\nexport const getPets = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PETS_REQUEST });\r\n    const { data } = await axios.get(\"/api/pet\");\r\n    dispatch({ type: actionTypes.GET_PETS_SUCCESS, payload: data.pets });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_PETS_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/pet/:id\r\nexport const getPet = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PET_REQUEST });\r\n    const { data } = await axios.get(`/api/pet/${id}`);\r\n    dispatch({ type: actionTypes.GET_PET_SUCCESS, payload: data.pet });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_PET_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n/*\r\n * Admin routes\r\n */\r\n\r\n// POST /api/pet/add\r\nexport const addPet = (pet) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.ADD_PET_REQUEST });\r\n    const { data } = await axios.post(\"/api/pet/add\", pet);\r\n    dispatch({ type: actionTypes.ADD_PET_SUCCESS, payload: data.pet });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.ADD_PET_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/pet/edit/:id\r\nexport const editPet = (pet, id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.EDIT_PET_REQUEST });\r\n    const { data } = await axios.put(`/api/pet/edit/${id}`, pet);\r\n    dispatch({ type: actionTypes.EDIT_PET_SUCCESS, payload: data.pet });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.EDIT_PET_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// DEL /api/pet/remove/:id\r\nexport const removePet = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.REMOVE_PET_REQUEST });\r\n    const { data } = await axios.delete(`/api/pet/remove/${id}`);\r\n    dispatch({ type: actionTypes.REMOVE_PET_SUCCESS, payload: data.pet });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.REMOVE_PET_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.CLEAR_ERRORS });\r\n};\r\n\r\nexport const editPetReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.EDIT_PET_RESET });\r\n};\r\n\r\nexport const addPetReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.ADD_PET_RESET });\r\n};\r\n\r\nexport const removePetReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.REMOVE_PET_RESET });\r\n};\r\n","/*\r\n * Public Actions\r\n */\r\n\r\n// GET /api/brand\r\nexport const GET_BRANDS_REQUEST = \"GET_BRANDS_REQUEST\";\r\nexport const GET_BRANDS_SUCCESS = \"GET_BRANDS_SUCCESS\";\r\nexport const GET_BRANDS_FAIL = \"GET_BRANDS_FAIL\";\r\n\r\n// GET /api/brand/:id\r\nexport const GET_BRAND_REQUEST = \"GET_BRAND_REQUEST\";\r\nexport const GET_BRAND_SUCCESS = \"GET_BRAND_SUCCESS\";\r\nexport const GET_BRAND_FAIL = \"GET_BRAND_FAIL\";\r\n\r\n/*\r\n * Admin actions\r\n */\r\n\r\n// POST /api/brand/add\r\nexport const ADD_BRAND_REQUEST = \"ADD_BRAND_REQUEST\";\r\nexport const ADD_BRAND_SUCCESS = \"ADD_BRAND_SUCCESS\";\r\nexport const ADD_BRAND_FAIL = \"ADD_BRAND_FAIL\";\r\nexport const ADD_BRAND_RESET = \"ADD_BRAND_RESET\";\r\n\r\n// PUT /api/brand/edit/:id\r\nexport const EDIT_BRAND_REQUEST = \"EDIT_BRAND_REQUEST\";\r\nexport const EDIT_BRAND_SUCCESS = \"EDIT_BRAND_SUCCESS\";\r\nexport const EDIT_BRAND_FAIL = \"EDIT_BRAND_FAIL\";\r\nexport const EDIT_BRAND_RESET = \"EDIT_BRAND_RESET\";\r\n\r\n// DEL /api/brand/remove/:id\r\nexport const REMOVE_BRAND_REQUEST = \"REMOVE_BRAND_REQUEST\";\r\nexport const REMOVE_BRAND_SUCCESS = \"REMOVE_BRAND_SUCCESS\";\r\nexport const REMOVE_BRAND_FAIL = \"REMOVE_BRAND_FAIL\";\r\nexport const REMOVE_BRAND_RESET = \"REMOVE_BRAND_RESET\";\r\n\r\n// Clear errors\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ isAdmin, component: Component, ...rest }) => {\r\n  const { loading, isAuthenticated, user } = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <>\r\n      {!loading && (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => {\r\n            if (!isAuthenticated) return <Redirect to=\"/\" />;\r\n            if (isAdmin && user.role !== \"Admin\") return <Redirect to=\"/\" />;\r\n            return <Component {...props} />;\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","// Libraries\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./Navbar.css\";\r\n\r\n// Actions\r\nimport { logout } from \"../redux/actions/user\";\r\nimport {\r\n  FaBoxOpen,\r\n  FaCogs,\r\n  FaFirstAid,\r\n  FaGlobe,\r\n  FaHandHoldingHeart,\r\n  FaHome,\r\n  FaMapPin,\r\n  FaPowerOff,\r\n  FaSignInAlt,\r\n  FaStore,\r\n  FaUserAlt,\r\n  FaUserPlus,\r\n  FaBars,\r\n  FaTimes,\r\n  FaInstagram,\r\n  FaFacebook,\r\n  FaPinterest,\r\n  FaLinkedin,\r\n} from \"react-icons/fa\";\r\n\r\nconst PetohubNavbar = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [size, setSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    };\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (size.width > 768 && menuOpen) setMenuOpen(false);\r\n  }, [size.width, menuOpen]);\r\n\r\n  const menuToggleHandler = () => {\r\n    setMenuOpen((p) => !p);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header-bar d-md-flex justify-content-around text-center align-items-center py-2\">\r\n        <div className=\"d-block px-1 d-sm-inline\">\r\n          <span>\r\n            Ph:\r\n            <a href=\"tel:7011923045\"> +91 7011923045 </a>\r\n          </span>\r\n        </div>\r\n        <div className=\"d-block px-1 d-sm-inline\">\r\n          <span>\r\n            Email:\r\n            <a href=\"mailto:info@petohub.com\"> info@petohub.com</a>\r\n          </span>\r\n        </div>\r\n        <div className=\"d-block px-1 d-md-inline\">\r\n          <span>Follow us</span>\r\n          <a href=\"https://www.instagram.com\" target=\"_blank\" rel=\"noreferrer\">\r\n            <FaInstagram size={23} />\r\n          </a>\r\n          <a href=\"https://www.facebook.com\" target=\"_blank\" rel=\"noreferrer\">\r\n            <FaFacebook size={23} />\r\n          </a>\r\n          <a href=\"https://www.pinterest.com\" target=\"_blank\" rel=\"noreferrer\">\r\n            <FaPinterest size={23} />\r\n          </a>\r\n          <a href=\"https://www.linkedin.com\" target=\"_blank\" rel=\"noreferrer\">\r\n            <FaLinkedin size={23} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <header className=\"header sticky-top\">\r\n        <div className=\"header-content\">\r\n          <Link to=\"/\" className=\"header-content-logo\">\r\n            <img src=\"/assets/logo/Petohub-Logo-Wide.png\" alt=\"\" width=\"150px\" height=\"50px\" />\r\n          </Link>\r\n          <nav className={`header-content-nav ${menuOpen && size.width < 768 ? \"isMenu\" : \"\"}`}>\r\n            <div className=\"nav-link-container\">\r\n              <Link to=\"/\" className=\"header-nav-link\" onClick={menuToggleHandler}>\r\n                <FaHome /> Home\r\n              </Link>\r\n              <Link to=\"/shop\" className=\"header-nav-link\" onClick={menuToggleHandler}>\r\n                <FaStore /> Shop\r\n              </Link>\r\n              <Link to=\"/about\" className=\"header-nav-link\" onClick={menuToggleHandler}>\r\n                <FaHandHoldingHeart /> About\r\n              </Link>\r\n              <Link to=\"/about\" className=\"header-nav-link\" onClick={menuToggleHandler}>\r\n                <FaGlobe /> Contact\r\n              </Link>\r\n              {user.isAuthenticated && user.user.role === \"Admin\" && (\r\n                <>\r\n                  <Link to=\"/services\" className=\"header-nav-link\" onClick={menuToggleHandler}>\r\n                    <FaFirstAid /> Services\r\n                  </Link>\r\n                  <Link to=\"/directories\" className=\"header-nav-link\" onClick={menuToggleHandler}>\r\n                    <FaMapPin /> Directories\r\n                  </Link>\r\n                  <Link to=\"/admin\" className=\"header-nav-link\" onClick={menuToggleHandler}>\r\n                    <FaCogs /> Dashboard\r\n                  </Link>\r\n                </>\r\n              )}\r\n              {user.isAuthenticated ? (\r\n                <>\r\n                  <Link to=\"/account\" className=\"header-nav-link\" onClick={menuToggleHandler}>\r\n                    <FaUserAlt /> {user.user.name}\r\n                  </Link>\r\n                  <Link\r\n                    to=\"/\"\r\n                    className=\"header-nav-link\"\r\n                    onClick={() => dispatch(logout()) && setMenuOpen((p) => !p)}\r\n                  >\r\n                    <FaPowerOff /> Sign Out\r\n                  </Link>\r\n                  {user.user.role === \"Client\" && (\r\n                    <>\r\n                      <Link\r\n                        to=\"/account/products\"\r\n                        className=\"header-nav-link\"\r\n                        onClick={menuToggleHandler}\r\n                      >\r\n                        <FaBoxOpen /> Your Products\r\n                      </Link>\r\n                      <Link\r\n                        to=\"/account/services\"\r\n                        className=\"header-nav-link\"\r\n                        onClick={menuToggleHandler}\r\n                      >\r\n                        <FaFirstAid /> Your Services\r\n                      </Link>\r\n                    </>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Link to=\"/register\" className=\"header-nav-link\" onClick={menuToggleHandler}>\r\n                    <FaUserPlus /> Sign Up\r\n                  </Link>\r\n                  <Link to=\"/login\" className=\"header-nav-link\" onClick={menuToggleHandler}>\r\n                    <FaSignInAlt /> Sign In\r\n                  </Link>\r\n                </>\r\n              )}\r\n            </div>\r\n          </nav>\r\n          <div className=\"header-content-toggle\">\r\n            {!menuOpen ? (\r\n              <FaBars onClick={() => setMenuOpen((p) => !p)} />\r\n            ) : (\r\n              <FaTimes onClick={() => setMenuOpen((p) => !p)} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PetohubNavbar;\r\n","import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaTwitter, FaFacebook, FaInstagram } from \"react-icons/fa\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"bg-secondary py-1 text-light sticky-bottom\">\r\n      <Container>\r\n        <Row className=\"footer-section text-center text-light pt-3\">\r\n          <Col lg={3} sm={6} xs={12} className=\"footer-first px-2\">\r\n            <div className=\"footer-img-container mx-auto\">\r\n              <img src=\"assets/logo/Petohub-Logo-Wide.png\" alt=\"\" width=\"160px\" />\r\n            </div>\r\n            <div className=\"py-2\">\r\n              <i className=\"fas fa-home\"></i>\r\n              <p> Mukhram Garden, Tilak Nagar, New Delhi, 110018</p>\r\n            </div>\r\n            <div className=\"py-2\">\r\n              <i className=\"fas fa-envelope\"></i>\r\n              <p> petohubofficial@gmail.com</p>\r\n            </div>\r\n            <div className=\"py-2\">\r\n              <i className=\"fas fa-phone\"></i>\r\n              <p> +91 9999999999</p>\r\n            </div>\r\n          </Col>\r\n          <Col lg={3} sm={6} xs={12}>\r\n            <div className=\"quick-links\">\r\n              <h4>Quick Links</h4>\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">About Us</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/\">Services</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/\">Shop</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/\">NGOs</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/\">Contact Us</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </Col>\r\n          <Col lg={3} sm={6} xs={12}>\r\n            <div className=\"information\">\r\n              <h4>Information</h4>\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">Privacy Policy</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/\">Terms of Use</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/\">Disclaimer</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/\">FAQ</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/\">Help Center</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </Col>\r\n          <Col lg={3} sm={6} xs={12} className=\"pb-2\">\r\n            <h4>Catch us on Social Media</h4>\r\n            <div className=\"social-links\">\r\n              <div className=\"facebook\">\r\n                <Link to=\"/\">\r\n                  <FaFacebook />\r\n                  <p> Facebook</p>\r\n                </Link>\r\n              </div>\r\n              <div className=\"twitter\">\r\n                <Link to=\"/\">\r\n                  <FaTwitter />\r\n                  <p> Twitter</p>\r\n                </Link>\r\n              </div>\r\n              <div className=\"instagram\">\r\n                <Link to=\"/\">\r\n                  <FaInstagram />\r\n                  <p> Instagram</p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container fluid className=\"text-center\">\r\n        <span>Copyright &copy; {new Date().getFullYear()} Petohub. All rights reserved</span>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { Container, Row, Col } from \"react-bootstrap\";\r\nimport {\r\n  FaBuilding,\r\n  FaDollarSign,\r\n  FaPhone,\r\n  FaHeadset,\r\n  FaSearch,\r\n  FaShippingFast,\r\n  FaEnvelopeOpenText,\r\n} from \"react-icons/fa\";\r\nimport \"./HomeScreen.css\";\r\n\r\nconst HomeScreen = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"landing\">\r\n        <img src=\"/assets/images/veterinary-care.jpg\" alt=\"Cat looking\" />\r\n        <div className=\"content\">\r\n          <h1 className=\"pb-4\">Welcome to Petohub</h1>\r\n          <h2 className=\"pb-4\">BEST PET LOVERS COMMUNITY</h2>\r\n          <div className=\"search-wrap\">\r\n            <div className=\"search-box mx-auto\">\r\n              <input type=\"text\" className=\"input\" placeholder=\"What are you looking for?\" />\r\n              <div className=\"search-button px-3\">\r\n                <FaSearch size={23} /> <span> Search</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Container>\r\n        <Row className=\"my-4\">\r\n          <Col xs={12} md={6} className=\"our-company-section\">\r\n            <h3>Our Company</h3>\r\n            <p>\r\n              We provide specialised and personalised care catered for your and your pet's needs in\r\n              a fast and reliable manner.\r\n            </p>\r\n            <p>\r\n              You can choose from various top brands and professionals to give your pets the care\r\n              they deserve. Our company aims to make sure that your pet is taken care of in the best\r\n              possible way.\r\n            </p>\r\n            <Row className=\"text-center mt-2\">\r\n              <Col xs={12} sm={6} className=\"px-3\">\r\n                <FaBuilding />\r\n                <h5 className=\"my-3\">Our Office</h5>\r\n                <p>Mukhram Garden, Tilak Nagar, New Delhi, 110018</p>\r\n              </Col>\r\n              <Col xs={12} sm={6} className=\"px-3\">\r\n                <FaPhone />\r\n                <h5 className=\"my-3\">Our Contact</h5>\r\n                <p style={{ wordWrap: \"break-word\" }}>\r\n                  (+91) 7011923045 <br /> petohubofficial@gmail.com\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xs={12} md={6} className=\"px-4 our-company-images\">\r\n            <Row className=\"text-center\">\r\n              <Col>\r\n                <img src=\"assets/images/our-company-1.jpg\" alt=\"\" />\r\n              </Col>\r\n              <Col>\r\n                <img src=\"assets/images/our-company-2.jpg\" alt=\"\" />\r\n              </Col>\r\n              <Col>\r\n                <img src=\"assets/images/our-company-3.jpg\" alt=\"\" />\r\n              </Col>\r\n              <Col>\r\n                <img src=\"assets/images/our-company-4.jpg\" alt=\"\" />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <section className=\"about-section py-2\">\r\n        <Container className=\"d-flex align-items-center justify-content-center flex-column\">\r\n          <h3>About Us</h3>\r\n          <h2>Why choose us?</h2>\r\n          <Row>\r\n            <Col sm={12} md={6}>\r\n              <div className=\"about-section-image py-2\">\r\n                <img src=\"/assets/images/about-section.png\" alt=\"\" />\r\n              </div>\r\n            </Col>\r\n            <Col sm={12} md={6}>\r\n              <div className=\"about-section-content py-2\">\r\n                <h4>Best products in the country</h4>\r\n                <p>\r\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolore, sequi corrupti\r\n                  corporis quaerat voluptatem ipsam neque labore modi autem, saepe numquam quod\r\n                  reprehenderit rem? Tempora aut soluta odio corporis nihil!\r\n                </p>\r\n                <p>\r\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam, nemo. Sit porro\r\n                  illo eos cumque deleniti iste alias, eum natus.\r\n                </p>\r\n                <div className=\"d-flex justify-content-between text-center\">\r\n                  <div className=\"icons\">\r\n                    <FaShippingFast />\r\n                    <span>Free delivery</span>\r\n                  </div>\r\n                  <div className=\"icons\">\r\n                    <FaDollarSign />\r\n                    <span>Easy payments</span>\r\n                  </div>\r\n                  <div className=\"icons\">\r\n                    <FaHeadset />\r\n                    <span>24/7 Service</span>\r\n                  </div>\r\n                </div>\r\n                <button className=\"about-button my-2\">Learn more</button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n      <section className=\"newsletter\">\r\n        <img src=\"/assets/images/newsletter.jpg\" alt=\"Dog looking\" />\r\n        <Container className=\"content\">\r\n          <h3>Subscribe For New Features</h3>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus sed aliquam quibusdam\r\n            neque magni magnam est laborum doloribus, facere dolores.\r\n          </p>\r\n          <div className=\"search-wrap\">\r\n            <div className=\"search-box mx-auto\">\r\n              <input type=\"text\" className=\"input\" placeholder=\"Enter your email\" />\r\n              <div className=\"search-button px-3\">\r\n                <FaEnvelopeOpenText size={23} /> <span> Subscribe</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","// Dependencies\r\nimport { Link } from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react\";\r\nimport { Navigation, Pagination, Autoplay } from \"swiper\";\r\n\r\n// Modules\r\nimport \"swiper/modules/navigation/navigation.scss\";\r\nimport \"swiper/modules/pagination/pagination.scss\";\r\n\r\n// Custom CSS\r\nimport \"./MainSlider.css\";\r\n\r\nconst MainSlider = () => {\r\n  return (\r\n    <Swiper\r\n      loop\r\n      modules={[Autoplay, Navigation, Pagination]}\r\n      spaceBetween={30}\r\n      autoplay={{ delay: 2500, disableOnInteraction: false }}\r\n      navigation\r\n      pagination={{ clickable: true, dynamicBullets: true }}\r\n      className=\"main-swiper\"\r\n    >\r\n      <SwiperSlide>\r\n        <div className=\"content\">\r\n          <p className=\"display-6\">AMAZING VALUE</p>\r\n          <p className=\"lead\">\r\n            There are multiple offers and discounts running all the time so make sure to keep an eye\r\n            on all the amazing offers so you don't miss out on anything for your pets.\r\n          </p>\r\n          <Link to=\"/shop\" className=\"btn btn-primary btn-lg\">\r\n            Check Now\r\n          </Link>\r\n        </div>\r\n        <div className=\"image\">\r\n          <img src=\"/assets/images/shop-3.png\" alt=\"\" />\r\n        </div>\r\n      </SwiperSlide>\r\n      <SwiperSlide>\r\n        <div className=\"content\">\r\n          <p className=\"display-6\">BEST QUALITY PRODUCTS</p>\r\n          <p className=\"lead\">\r\n            Get assured quality on the best products for your beloved companion. Browse through a\r\n            variety of options and variations based on your pet with reasonable prices.\r\n          </p>\r\n          <Link to=\"/shop\" className=\"btn btn-primary btn-lg\">\r\n            Order Now\r\n          </Link>\r\n        </div>\r\n        <div className=\"image\">\r\n          <img src=\"/assets/images/shop-1.png\" alt=\"\" />\r\n        </div>\r\n      </SwiperSlide>\r\n      <SwiperSlide>\r\n        <div className=\"content\">\r\n          <p className=\"display-6\">TOP RATED PRODUCTS</p>\r\n          <p className=\"lead\">\r\n            All of our products are rated by the community itself so that you can be assure of the\r\n            quality of the product for your pet. A high standard is maintained by our top analysts\r\n            and reviewers\r\n          </p>\r\n          <Link to=\"/shop\" className=\"btn btn-primary btn-lg\">\r\n            Browse Now\r\n          </Link>\r\n        </div>\r\n        <div className=\"image\">\r\n          <img src=\"/assets/images/shop-2.png\" alt=\"\" />\r\n        </div>\r\n      </SwiperSlide>\r\n    </Swiper>\r\n  );\r\n};\r\n\r\nexport default MainSlider;\r\n","import { FaInfoCircle, FaShoppingCart, FaStar, FaStarHalfAlt, FaTag } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Product = ({ product }) => {\r\n  const date = new Date(product.createdAt);\r\n  const day = date.getUTCDate();\r\n  const month = date.getUTCMonth();\r\n  const year = date.getUTCFullYear();\r\n\r\n  const added = `${day}/${month}/${year}`;\r\n\r\n  return (\r\n    <div className=\"product-item py-2 px-1\">\r\n      <Link to={`/shop/${product._id}`}>\r\n        <div\r\n          className=\"product-img\"\r\n          style={{\r\n            backgroundImage: `url(${\r\n              product.productImages[0] || \"/assets/placeholders/product.png\"\r\n            })`,\r\n            backgroundSize: \"contain\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            height: \"250px\",\r\n          }}\r\n        ></div>\r\n      </Link>\r\n      <div className=\"product-details py-3\">\r\n        <Link to={`/shop/${product._id}`}>\r\n          <h4>{product.name}</h4>\r\n        </Link>\r\n        <div className=\"category\">\r\n          <FaTag className=\"text-primary\" /> {product.category}\r\n        </div>\r\n        <div className=\"ratings\">\r\n          <FaStar />\r\n          <FaStar />\r\n          <FaStar />\r\n          <FaStar />\r\n          <FaStarHalfAlt />\r\n        </div>\r\n        <div className=\"price\">₹{product.price}</div>\r\n        <div className=\"added\">Added on: {added}</div>\r\n        <div className=\"d-flex justify-content-around\">\r\n          <div className=\"product-button my-2\">\r\n            <Link to={`/shop/${product._id}`} className=\"btn btn-primary btn-sm\">\r\n              <FaInfoCircle /> More Details\r\n            </Link>\r\n          </div>\r\n          <div className=\"product-button my-2\">\r\n            <button className=\"btn btn-primary btn-sm\">\r\n              <FaShoppingCart /> Add to Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","/*\r\n * Public Actions\r\n */\r\n\r\n// GET /api/product\r\nexport const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\";\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\r\nexport const GET_PRODUCTS_FAIL = \"GET_PRODUCTS_FAIL\";\r\n\r\n// GET /api/product/:id\r\nexport const GET_PRODUCT_REQUEST = \"GET_PRODUCT_REQUEST\";\r\nexport const GET_PRODUCT_SUCCESS = \"GET_PRODUCT_SUCCESS\";\r\nexport const GET_PRODUCT_FAIL = \"GET_PRODUCT_FAIL\";\r\n\r\n/*\r\n * Client Actions\r\n */\r\n\r\n// GET /api/product/own\r\nexport const GET_OWN_PRODUCTS_REQUEST = \"GET_OWN_PRODUCTS_REQUEST\";\r\nexport const GET_OWN_PRODUCTS_SUCCESS = \"GET_OWN_PRODUCTS_SUCCESS\";\r\nexport const GET_OWN_PRODUCTS_FAIL = \"GET_OWN_PRODUCTS_FAIL\";\r\n\r\n// GET /api/product/own/:id\r\nexport const GET_OWN_PRODUCT_REQUEST = \"GET_OWN_PRODUCT_REQUEST\";\r\nexport const GET_OWN_PRODUCT_SUCCESS = \"GET_OWN_PRODUCT_SUCCESS\";\r\nexport const GET_OWN_PRODUCT_FAIL = \"GET_OWN_PRODUCT_FAIL\";\r\n\r\n// POST /api/product/add\r\nexport const ADD_PRODUCT_REQUEST = \"ADD_PRODUCT_REQUEST\";\r\nexport const ADD_PRODUCT_SUCCESS = \"ADD_PRODUCT_SUCCESS\";\r\nexport const ADD_PRODUCT_FAIL = \"ADD_PRODUCT_FAIL\";\r\nexport const ADD_PRODUCT_RESET = \"ADD_PRODUCT_RESET\";\r\n\r\n// PUT /api/product/edit/:id\r\nexport const EDIT_PRODUCT_REQUEST = \"EDIT_PRODUCT_REQUEST\";\r\nexport const EDIT_PRODUCT_SUCCESS = \"EDIT_PRODUCT_SUCCESS\";\r\nexport const EDIT_PRODUCT_FAIL = \"EDIT_PRODUCT_FAIL\";\r\nexport const EDIT_PRODUCT_RESET = \"EDIT_PRODUCT_RESET\";\r\n\r\n// DEL /api/product/remove/:id\r\nexport const REMOVE_PRODUCT_REQUEST = \"REMOVE_PRODUCT_REQUEST\";\r\nexport const REMOVE_PRODUCT_SUCCESS = \"REMOVE_PRODUCT_SUCCESS\";\r\nexport const REMOVE_PRODUCT_FAIL = \"REMOVE_PRODUCT_FAIL\";\r\nexport const REMOVE_PRODUCT_RESET = \"REMOVE_PRODUCT_RESET\";\r\n\r\n/*\r\n * Admin actions\r\n */\r\n\r\n// GET /api/product/all\r\nexport const GET_ALL_PRODUCTS_REQUEST = \"GET_ALL_PRODUCTS_REQUEST\";\r\nexport const GET_ALL_PRODUCTS_SUCCESS = \"GET_ALL_PRODUCTS_SUCCESS\";\r\nexport const GET_ALL_PRODUCTS_FAIL = \"GET_ALL_PRODUCTS_FAIL\";\r\n\r\n// GET /api/product/any/:id\r\nexport const GET_ANY_PRODUCT_REQUEST = \"GET_ANY_PRODUCT_REQUEST\";\r\nexport const GET_ANY_PRODUCT_SUCCESS = \"GET_ANY_PRODUCT_SUCCESS\";\r\nexport const GET_ANY_PRODUCT_FAIL = \"GET_ANY_PRODUCT_FAIL\";\r\n\r\n// PUT /api/product/approve/:id\r\nexport const APPROVE_PRODUCT_REQUEST = \"APPROVE_PRODUCT_REQUEST\";\r\nexport const APPROVE_PRODUCT_SUCCESS = \"APPROVE_PRODUCT_SUCCESS\";\r\nexport const APPROVE_PRODUCT_FAIL = \"APPROVE_PRODUCT_FAIL\";\r\n\r\n// Clear errors\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import * as actionTypes from \"../constants/product\";\r\nimport axios from \"axios\";\r\n\r\n// GET /api/product/\r\nexport const getProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\r\n    const { data } = await axios.get(\"/api/product\");\r\n    dispatch({ type: actionTypes.GET_PRODUCTS_SUCCESS, payload: data.products });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_PRODUCTS_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/product/:id\r\nexport const getProduct = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCT_REQUEST });\r\n    const { data } = await axios.get(`/api/product/${id}`);\r\n    dispatch({ type: actionTypes.GET_PRODUCT_SUCCESS, payload: data.product });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_PRODUCT_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n/*\r\n * Client routes\r\n */\r\n\r\n// GET /api/product/own\r\nexport const getOwnProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_OWN_PRODUCTS_REQUEST });\r\n    const { data } = await axios.get(\"/api/product/own\");\r\n    dispatch({ type: actionTypes.GET_OWN_PRODUCTS_SUCCESS, payload: data.products });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_OWN_PRODUCTS_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/product/own/:id\r\nexport const getOwnProduct = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_OWN_PRODUCT_REQUEST });\r\n    const { data } = await axios.get(`/api/product/own/${id}`);\r\n    dispatch({ type: actionTypes.GET_OWN_PRODUCT_SUCCESS, payload: data.product });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_OWN_PRODUCT_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// POST /api/product/add\r\nexport const addProduct = (product) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.ADD_PRODUCT_REQUEST });\r\n    const { data } = await axios.post(\"/api/product/add/\", product);\r\n    dispatch({ type: actionTypes.ADD_PRODUCT_SUCCESS, payload: data.product });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.ADD_PRODUCT_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// DEL /api/product/remove/:id\r\nexport const removeProduct = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.REMOVE_PRODUCT_REQUEST });\r\n    const { data } = await axios.delete(`/api/product/remove/${id}`);\r\n    dispatch({ type: actionTypes.REMOVE_PRODUCT_SUCCESS, payload: data.product });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.REMOVE_PRODUCT_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/product/edit/:id\r\nexport const editProduct = (product, id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.EDIT_PRODUCT_REQUEST });\r\n    const { data } = await axios.put(`/api/product/edit/${id}`, product);\r\n    dispatch({ type: actionTypes.EDIT_PRODUCT_SUCCESS, payload: data.product });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.EDIT_PRODUCT_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n/*\r\n * Admin specific routes\r\n */\r\n\r\n// GET /api/product/all\r\nexport const getAllProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_ALL_PRODUCTS_REQUEST });\r\n    const { data } = await axios.get(\"/api/product/all\");\r\n    dispatch({ type: actionTypes.GET_ALL_PRODUCTS_SUCCESS, payload: data.products });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_ALL_PRODUCTS_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/product/any/:id\r\nexport const getAnyProduct = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_ANY_PRODUCT_REQUEST });\r\n    const { data } = await axios.get(`/api/product/any/${id}`);\r\n    dispatch({ type: actionTypes.GET_ANY_PRODUCT_SUCCESS, payload: data.product });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_ANY_PRODUCT_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/product/approve\r\nexport const approveProduct = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.APPROVE_PRODUCT_REQUEST });\r\n    const { data } = await axios.put(`/api/product/approve/${id}`);\r\n    dispatch({ type: actionTypes.APPROVE_PRODUCT_SUCCESS, payload: data.product });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.APPROVE_PRODUCT_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.CLEAR_ERRORS });\r\n};\r\n\r\nexport const editProductReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.EDIT_PRODUCT_RESET });\r\n};\r\n\r\nexport const addProductReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.ADD_PRODUCT_RESET });\r\n};\r\n\r\nexport const removeProductReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.REMOVE_PRODUCT_RESET });\r\n};\r\n","// Dependencies\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\r\nimport { FaFilter } from \"react-icons/fa\";\r\n\r\n// Components\r\nimport MainSlider from \"components/MainSlider.jsx\";\r\nimport Product from \"./Product.jsx\";\r\n\r\n// Actions\r\nimport { getProducts } from \"redux/actions/product\";\r\nimport { getProductCategories } from \"redux/actions/category\";\r\nimport { getPets } from \"redux/actions/pet\";\r\n\r\n// Custom CSS\r\nimport \"./ShopScreen.css\";\r\n\r\n// Checkbox helper component\r\nconst CheckBox = ({ label }) => (\r\n  <Form.Group>\r\n    <Form.Check type=\"checkbox\" label={label}></Form.Check>\r\n  </Form.Group>\r\n);\r\n\r\nconst ShopScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, products } = useSelector((state) => state.product);\r\n  const { productCategories } = useSelector((state) => state.category);\r\n  const { pets } = useSelector((state) => state.pet);\r\n\r\n  const [priceRange, setPriceRange] = useState({ min: 0, max: 0 });\r\n  const [showFilter, setShowFilter] = useState(window.innerWidth > 768);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n    dispatch(getProductCategories());\r\n    dispatch(getPets());\r\n    const handleResize = () => setShowFilter(window.innerWidth > 768);\r\n    const listener = window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", listener);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <MainSlider />\r\n      <Container fluid>\r\n        <div className=\"shop-screen py-2\">\r\n          <div\r\n            className=\"collapse-button text-end text-primary\"\r\n            onClick={() => {\r\n              setShowFilter((x) => !x);\r\n            }}\r\n          >\r\n            <FaFilter /> Add Filters\r\n          </div>\r\n          <div className={`filters ${showFilter ? \"d-block\" : \"d-none\"}`}>\r\n            <div className=\"category-section\">\r\n              <h4>Filter by Category</h4>\r\n              {productCategories?.map((category, index) => (\r\n                <CheckBox label={category.name} key={index} />\r\n              ))}\r\n            </div>\r\n            <div className=\"pettype-section\">\r\n              <h4>Filter by Pet</h4>\r\n              {pets?.map((pet, index) => (\r\n                <CheckBox label={pet.name} key={index} />\r\n              ))}\r\n            </div>\r\n            <div className=\"sort-section\">\r\n              <h4>Sort By</h4>\r\n              <CheckBox label=\"Newest\" />\r\n              <CheckBox label=\"Best Selling\" />\r\n              <CheckBox label=\"Price: High to Low\" />\r\n              <CheckBox label=\"Price: Low to High\" />\r\n            </div>\r\n            <div className=\"price-range\">\r\n              <h4>Price Range</h4>\r\n              <p>Minimum: {priceRange.min}</p>\r\n              <input\r\n                type=\"range\"\r\n                name=\"pricerange\"\r\n                className=\"form-range\"\r\n                min=\"0\"\r\n                max=\"20000\"\r\n                step=\"50\"\r\n                onInput={(e) =>\r\n                  setPriceRange((x) => {\r\n                    return {\r\n                      ...x,\r\n                      min: e.target.value,\r\n                    };\r\n                  })\r\n                }\r\n              />\r\n              <p>Maximum: {priceRange.max}</p>\r\n              <input\r\n                type=\"range\"\r\n                name=\"pricerange\"\r\n                className=\"form-range\"\r\n                min=\"0\"\r\n                max=\"20000\"\r\n                step=\"50\"\r\n                onInput={(e) =>\r\n                  setPriceRange((x) => {\r\n                    return {\r\n                      ...x,\r\n                      max: e.target.value,\r\n                    };\r\n                  })\r\n                }\r\n              />\r\n              <button className=\"btn btn-primary\">Apply Filters</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"products\">\r\n            {loading ? (\r\n              <h3>Loading</h3>\r\n            ) : products.length > 0 ? (\r\n              <Row>\r\n                {products.map((product, index) => (\r\n                  <Col sm={12} md={6} lg={4} key={index}>\r\n                    <Product product={product} />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            ) : (\r\n              <h3>No products to show</h3>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShopScreen;\r\n","// Dependencies\r\nimport { useEffect } from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FaCreditCard, FaShoppingBag, FaStar, FaStarHalfAlt } from \"react-icons/fa\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react\";\r\nimport { Navigation, Pagination } from \"swiper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Actions\r\nimport { getProduct } from \"redux/actions/product\";\r\n\r\nconst ProductScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, product } = useSelector((state) => state.product);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProduct(match.params.productId));\r\n  }, [dispatch, match.params.productId]);\r\n\r\n  return (\r\n    <Container className=\"py-3 mt-3\">\r\n      {loading ? (\r\n        <h3>Loading</h3>\r\n      ) : (\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            {product.productImages?.length > 0 ? (\r\n              <Swiper\r\n                loop\r\n                modules={[Navigation, Pagination]}\r\n                pagination={{ clickable: true, dynamicBullets: true }}\r\n                navigation\r\n              >\r\n                {product.productImages?.map((image, index) => (\r\n                  <SwiperSlide\r\n                    style={{ height: \"450px\" }}\r\n                    className=\"d-flex justify-content-center align-items-center\"\r\n                    key={index}\r\n                  >\r\n                    <img src={image} key={index} width=\"300px\" alt=\"\" className=\"my-auto\" />\r\n                  </SwiperSlide>\r\n                ))}\r\n              </Swiper>\r\n            ) : (\r\n              <img src=\"/assets/placeholders/product.png\" alt=\"Product\" />\r\n            )}\r\n          </Col>\r\n          <Col xs={12} md={6} className=\"pt-3\">\r\n            <h2>{product.name}</h2>\r\n            <div className=\"ratings text-primary\">\r\n              <FaStar />\r\n              <FaStar />\r\n              <FaStar />\r\n              <FaStar />\r\n              <FaStarHalfAlt />\r\n            </div>\r\n            <p style={{ fontSize: \"1.3rem\" }}>Price: ₹{product.price}</p>\r\n            <h4>Product Details</h4>\r\n            <p>{product.description}</p>\r\n            <p>Category: {product.category}</p>\r\n            <p>Suitable for: {product.petType?.join(\", \")}</p>\r\n            <p>Weighs: {product.weight} grams</p>\r\n            <p>\r\n              Dimensions: {product.size?.length}cm x {product.size?.height}cm x{\" \"}\r\n              {product.size?.width}cm\r\n            </p>\r\n            {product.link && (\r\n              <div className=\"d-flex justify-content-around\">\r\n                <Link to={{ pathname: product.link }} target=\"_blank\" className=\"btn btn-primary\">\r\n                  <FaCreditCard /> Buy Now\r\n                </Link>\r\n                <Button>\r\n                  <FaShoppingBag /> Add to Cart\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import { FaInfoCircle, FaShoppingCart, FaStar, FaStarHalfAlt, FaTag } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Service = ({ service }) => {\r\n  const date = new Date(service.createdAt);\r\n  const day = date.getUTCDate();\r\n  const month = date.getUTCMonth();\r\n  const year = date.getUTCFullYear();\r\n\r\n  const added = `${day}/${month}/${year}`;\r\n\r\n  return (\r\n    <div className=\"service-item py-2 px-1\">\r\n      <Link to={`/shop/${service._id}`}>\r\n        <div\r\n          className=\"service-img\"\r\n          style={{\r\n            backgroundImage: `url(${\r\n              service.serviceImages?.[0] || \"/assets/placeholders/service.png\"\r\n            })`,\r\n            backgroundSize: \"contain\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            height: \"250px\",\r\n          }}\r\n        ></div>\r\n      </Link>\r\n      <div className=\"service-details py-3\">\r\n        <Link to={`/services/${service._id}`}>\r\n          <h4>{service.name}</h4>\r\n        </Link>\r\n        <div className=\"category\">\r\n          <FaTag className=\"text-primary\" /> {service.category}\r\n        </div>\r\n        <div className=\"ratings\">\r\n          <FaStar />\r\n          <FaStar />\r\n          <FaStar />\r\n          <FaStar />\r\n          <FaStarHalfAlt />\r\n        </div>\r\n        <div className=\"price\">₹{service.price}</div>\r\n        <div className=\"added\">Added on: {added}</div>\r\n        <div className=\"d-flex justify-content-around\">\r\n          <div className=\"service-button my-2\">\r\n            <Link to={`/services/${service._id}`} className=\"btn btn-primary btn-sm\">\r\n              <FaInfoCircle /> More Details\r\n            </Link>\r\n          </div>\r\n          <div className=\"service-button my-2\">\r\n            <button className=\"btn btn-primary btn-sm\">\r\n              <FaShoppingCart /> Add to Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Service;\r\n","/*\r\n * Public Actions\r\n */\r\n\r\n// GET /api/service\r\nexport const GET_SERVICES_REQUEST = \"GET_SERVICES_REQUEST\";\r\nexport const GET_SERVICES_SUCCESS = \"GET_SERVICES_SUCCESS\";\r\nexport const GET_SERVICES_FAIL = \"GET_SERVICES_FAIL\";\r\n\r\n// GET /api/service/:id\r\nexport const GET_SERVICE_REQUEST = \"GET_SERVICE_REQUEST\";\r\nexport const GET_SERVICE_SUCCESS = \"GET_SERVICE_SUCCESS\";\r\nexport const GET_SERVICE_FAIL = \"GET_SERVICE_FAIL\";\r\n\r\n/*\r\n * Client Actions\r\n */\r\n\r\n// GET /api/service/own\r\nexport const GET_OWN_SERVICES_REQUEST = \"GET_OWN_SERVICES_REQUEST\";\r\nexport const GET_OWN_SERVICES_SUCCESS = \"GET_OWN_SERVICES_SUCCESS\";\r\nexport const GET_OWN_SERVICES_FAIL = \"GET_OWN_SERVICES_FAIL\";\r\n\r\n// GET /api/service/own/:id\r\nexport const GET_OWN_SERVICE_REQUEST = \"GET_OWN_SERVICE_REQUEST\";\r\nexport const GET_OWN_SERVICE_SUCCESS = \"GET_OWN_SERVICE_SUCCESS\";\r\nexport const GET_OWN_SERVICE_FAIL = \"GET_OWN_SERVICE_FAIL\";\r\n\r\n// POST /api/service/add\r\nexport const ADD_SERVICE_REQUEST = \"ADD_SERVICE_REQUEST\";\r\nexport const ADD_SERVICE_SUCCESS = \"ADD_SERVICE_SUCCESS\";\r\nexport const ADD_SERVICE_FAIL = \"ADD_SERVICE_FAIL\";\r\nexport const ADD_SERVICE_RESET = \"ADD_SERVICE_RESET\";\r\n\r\n// PUT /api/service/edit/:id\r\nexport const EDIT_SERVICE_REQUEST = \"EDIT_SERVICE_REQUEST\";\r\nexport const EDIT_SERVICE_SUCCESS = \"EDIT_SERVICE_SUCCESS\";\r\nexport const EDIT_SERVICE_FAIL = \"EDIT_SERVICE_FAIL\";\r\nexport const EDIT_SERVICE_RESET = \"EDIT_SERVICE_RESET\";\r\n\r\n// DEL /api/service/remove/:id\r\nexport const REMOVE_SERVICE_REQUEST = \"REMOVE_SERVICE_REQUEST\";\r\nexport const REMOVE_SERVICE_SUCCESS = \"REMOVE_SERVICE_SUCCESS\";\r\nexport const REMOVE_SERVICE_FAIL = \"REMOVE_SERVICE_FAIL\";\r\nexport const REMOVE_SERVICE_RESET = \"REMOVE_SERVICE_RESET\";\r\n\r\n/*\r\n * Admin actions\r\n */\r\n\r\n// GET /api/service/all\r\nexport const GET_ALL_SERVICES_REQUEST = \"GET_ALL_SERVICES_REQUEST\";\r\nexport const GET_ALL_SERVICES_SUCCESS = \"GET_ALL_SERVICES_SUCCESS\";\r\nexport const GET_ALL_SERVICES_FAIL = \"GET_ALL_SERVICES_FAIL\";\r\n\r\n// GET /api/service/any/:id\r\nexport const GET_ANY_SERVICE_REQUEST = \"GET_ANY_SERVICE_REQUEST\";\r\nexport const GET_ANY_SERVICE_SUCCESS = \"GET_ANY_SERVICE_SUCCESS\";\r\nexport const GET_ANY_SERVICE_FAIL = \"GET_ANY_SERVICE_FAIL\";\r\n\r\n// PUT /api/service/approve/:id\r\nexport const APPROVE_SERVICE_REQUEST = \"APPROVE_SERVICE_REQUEST\";\r\nexport const APPROVE_SERVICE_SUCCESS = \"APPROVE_SERVICE_SUCCESS\";\r\nexport const APPROVE_SERVICE_FAIL = \"APPROVE_SERVICE_FAIL\";\r\n\r\n// Clear errors\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import * as actionTypes from \"../constants/service\";\r\nimport axios from \"axios\";\r\n\r\n// GET /api/service/\r\nexport const getServices = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_SERVICES_REQUEST });\r\n    const { data } = await axios.get(\"/api/service\");\r\n    dispatch({ type: actionTypes.GET_SERVICES_SUCCESS, payload: data.services });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_SERVICES_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/service/:id\r\nexport const getService = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_SERVICE_REQUEST });\r\n    const { data } = await axios.get(`/api/service/${id}`);\r\n    dispatch({ type: actionTypes.GET_SERVICE_SUCCESS, payload: data.service });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_SERVICE_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n/*\r\n * Client routes\r\n */\r\n\r\n// GET /api/service/own\r\nexport const getOwnServices = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_OWN_SERVICES_REQUEST });\r\n    const { data } = await axios.get(\"/api/service/own\");\r\n    dispatch({ type: actionTypes.GET_OWN_SERVICES_SUCCESS, payload: data.services });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_OWN_SERVICES_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/service/own/:id\r\nexport const getOwnService = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_OWN_SERVICE_REQUEST });\r\n    const { data } = await axios.get(`/api/service/own/${id}`);\r\n    dispatch({ type: actionTypes.GET_OWN_SERVICE_SUCCESS, payload: data.service });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_OWN_SERVICE_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// POST /api/service/add\r\nexport const addService = (service) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.ADD_SERVICE_REQUEST });\r\n    const { data } = await axios.post(\"/api/service/add/\", service);\r\n    dispatch({ type: actionTypes.ADD_SERVICE_SUCCESS, payload: data.service });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.ADD_SERVICE_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// DEL /api/service/remove/:id\r\nexport const removeService = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.REMOVE_SERVICE_REQUEST });\r\n    const { data } = await axios.delete(`/api/service/remove/${id}`);\r\n    dispatch({ type: actionTypes.REMOVE_SERVICE_SUCCESS, payload: data.service });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.REMOVE_SERVICE_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/service/edit/:id\r\nexport const editService = (service, id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.EDIT_SERVICE_REQUEST });\r\n    const { data } = await axios.put(`/api/service/edit/${id}`, service);\r\n    dispatch({ type: actionTypes.EDIT_SERVICE_SUCCESS, payload: data.service });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.EDIT_SERVICE_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n/*\r\n * Admin specific routes\r\n */\r\n\r\n// GET /api/service/all\r\nexport const getAllServices = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_ALL_SERVICES_REQUEST });\r\n    const { data } = await axios.get(\"/api/service/all\");\r\n    dispatch({ type: actionTypes.GET_ALL_SERVICES_SUCCESS, payload: data.services });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_ALL_SERVICES_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/service/any/:id\r\nexport const getAnyService = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_ANY_SERVICE_REQUEST });\r\n    const { data } = await axios.get(`/api/service/any/${id}`);\r\n    dispatch({ type: actionTypes.GET_ANY_SERVICE_SUCCESS, payload: data.service });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_ANY_SERVICE_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/service/approve\r\nexport const approveService = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.APPROVE_SERVICE_REQUEST });\r\n    const { data } = await axios.put(`/api/service/approve/${id}`);\r\n    dispatch({ type: actionTypes.APPROVE_SERVICE_SUCCESS, payload: data.service });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.APPROVE_SERVICE_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.CLEAR_ERRORS });\r\n};\r\n\r\nexport const editServiceReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.EDIT_SERVICE_RESET });\r\n};\r\n\r\nexport const addServiceReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.ADD_SERVICE_RESET });\r\n};\r\n\r\nexport const removeServiceReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.REMOVE_SERVICE_RESET });\r\n};\r\n","// Dependencies\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\r\nimport { FaFilter } from \"react-icons/fa\";\r\n\r\n// Components\r\nimport MainSlider from \"components/MainSlider.jsx\";\r\nimport Service from \"./Service.jsx\";\r\n\r\n// Actions\r\nimport { getServices } from \"redux/actions/service\";\r\n\r\n// Custom CSS\r\nimport \"./ServicesScreen.css\";\r\n\r\n// Checkbox helper component\r\nconst CheckBox = ({ label }) => (\r\n  <Form.Group>\r\n    <Form.Check type=\"checkbox\" label={label}></Form.Check>\r\n  </Form.Group>\r\n);\r\n\r\nconst ServicesScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, services } = useSelector((state) => state.service);\r\n  const { serviceCategories } = useSelector((state) => state.category);\r\n  const { pets } = useSelector((state) => state.pet);\r\n\r\n  const [priceRange, setPriceRange] = useState({ min: 0, max: 0 });\r\n  const [showFilter, setShowFilter] = useState(window.innerWidth > 768);\r\n\r\n  useEffect(() => {\r\n    dispatch(getServices());\r\n    const handleResize = () => setShowFilter(window.innerWidth > 768);\r\n    const listener = window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", listener);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <MainSlider />\r\n      <Container fluid>\r\n        <div className=\"shop-screen py-2\">\r\n          <div\r\n            className=\"collapse-button text-end text-primary\"\r\n            onClick={() => {\r\n              setShowFilter((x) => !x);\r\n            }}\r\n          >\r\n            <FaFilter /> Add Filters\r\n          </div>\r\n          <div className={`filters ${showFilter ? \"d-block\" : \"d-none\"}`}>\r\n            <div className=\"category-section\">\r\n              <h4>Filter by Category</h4>\r\n              {serviceCategories.map((category, index) => (\r\n                <CheckBox label={category.name} key={index} />\r\n              ))}\r\n            </div>\r\n            <div className=\"pettype-section\">\r\n              <h4>Filter by Pet</h4>\r\n              {pets.map((pet, index) => (\r\n                <CheckBox label={pet.name} key={index} />\r\n              ))}\r\n            </div>\r\n            <div className=\"sort-section\">\r\n              <h4>Sort By</h4>\r\n              <CheckBox label=\"Newest\" />\r\n              <CheckBox label=\"Best Selling\" />\r\n              <CheckBox label=\"Price: High to Low\" />\r\n              <CheckBox label=\"Price: Low to High\" />\r\n            </div>\r\n            <div className=\"price-range\">\r\n              <h4>Price Range</h4>\r\n              <p>Minimum: {priceRange.min}</p>\r\n              <input\r\n                type=\"range\"\r\n                name=\"pricerange\"\r\n                className=\"form-range\"\r\n                min=\"0\"\r\n                max=\"20000\"\r\n                step=\"50\"\r\n                onInput={(e) =>\r\n                  setPriceRange((x) => {\r\n                    return {\r\n                      ...x,\r\n                      min: e.target.value,\r\n                    };\r\n                  })\r\n                }\r\n              />\r\n              <p>Maximum: {priceRange.max}</p>\r\n              <input\r\n                type=\"range\"\r\n                name=\"pricerange\"\r\n                className=\"form-range\"\r\n                min=\"0\"\r\n                max=\"20000\"\r\n                step=\"50\"\r\n                onInput={(e) =>\r\n                  setPriceRange((x) => {\r\n                    return {\r\n                      ...x,\r\n                      max: e.target.value,\r\n                    };\r\n                  })\r\n                }\r\n              />\r\n              <button className=\"btn btn-primary\">Apply Filters</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"services\">\r\n            {loading ? (\r\n              <h3>Loading</h3>\r\n            ) : services.length > 0 ? (\r\n              <Row>\r\n                {services.map((service, index) => (\r\n                  <Col sm={12} md={6} lg={4} key={index}>\r\n                    <Service service={service} />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            ) : (\r\n              <h3>No services to show</h3>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServicesScreen;\r\n","import { days } from \"config.json\";\r\n\r\n/*\r\n * This function takes an array containing days of the week\r\n * and returns a compact 8 bit integer for easy storage\r\n * Mon = 1, Tue = 2, .... Sat = 32, Sun = 64\r\n * @param an array containing strings representing days of the week\r\n * @return an 8 bit integer representing the strings\r\n */\r\n\r\nexport const arrayToBinary = (array) => {\r\n  const boolArray = days.map((d) => array.includes(d)).reverse();\r\n  const binary = boolArray.reduce((res, x) => (res << 1) | x);\r\n  return binary;\r\n};\r\n\r\n/*\r\n * This function takes an 8 bit integer made by arrayToBinary()\r\n * and returns an array containing strings of days of the week in human readable format\r\n * Mon = 1, Tue = 2, .... Sat = 32, Sun = 64\r\n * @param an 8 bit integer representing the strings\r\n * @return an array containing strings representing days of the week\r\n */\r\n\r\nexport const binaryToArray = (binary) => {\r\n  let boolArray = [];\r\n  while (binary) {\r\n    boolArray.push((binary & 1) === 1);\r\n    binary >>= 1;\r\n  }\r\n  const array = days.filter((_, index) => boolArray[index]);\r\n  return array;\r\n};\r\n","// Dependencies\r\nimport { useEffect } from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FaCreditCard, FaShoppingBag, FaStar, FaStarHalfAlt } from \"react-icons/fa\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react\";\r\nimport { Navigation, Pagination } from \"swiper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Actions\r\nimport { getService } from \"redux/actions/service\";\r\n\r\n// Helpers\r\nimport { binaryToArray } from \"helpers/daysHandler\";\r\n\r\nconst ServiceScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, service } = useSelector((state) => state.service);\r\n\r\n  useEffect(() => {\r\n    dispatch(getService(match.params.serviceId));\r\n  }, [dispatch, match.params.serviceId]);\r\n\r\n  return (\r\n    <Container className=\"py-3 mt-3\">\r\n      {loading ? (\r\n        <h3>Loading</h3>\r\n      ) : (\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            {service.serviceImages?.length > 0 ? (\r\n              <Swiper\r\n                loop\r\n                modules={[Navigation, Pagination]}\r\n                pagination={{ clickable: true, dynamicBullets: true }}\r\n                navigation\r\n              >\r\n                {service.serviceImages?.map((image, index) => (\r\n                  <SwiperSlide\r\n                    style={{ height: \"450px\" }}\r\n                    className=\"d-flex justify-content-center align-items-center\"\r\n                    key={index}\r\n                  >\r\n                    <img src={image} key={index} width=\"300px\" alt=\"\" className=\"my-auto\" />\r\n                  </SwiperSlide>\r\n                ))}\r\n              </Swiper>\r\n            ) : (\r\n              <img src=\"/assets/placeholders/service.png\" alt=\"Service\" />\r\n            )}\r\n          </Col>\r\n          <Col xs={12} md={6} className=\"pt-3\">\r\n            <h2>{service.name}</h2>\r\n            <div className=\"ratings text-primary\">\r\n              <FaStar />\r\n              <FaStar />\r\n              <FaStar />\r\n              <FaStar />\r\n              <FaStarHalfAlt />\r\n            </div>\r\n            <p style={{ fontSize: \"1.3rem\" }}>Price: ₹{service.price}</p>\r\n            <h4>Service Details</h4>\r\n            <p>{service.description}</p>\r\n            <p>Category: {service.category}</p>\r\n            <p>Suitable for: {service.petType?.join(\", \")}</p>\r\n            <p>\r\n              Timings: {service.timings?.from} to {service.timings?.to}\r\n            </p>\r\n            <p>Days: {binaryToArray(service.days).join(\", \")}</p>\r\n            {service.address && <p>Address: {service.address}</p>}\r\n            {service.link && (\r\n              <div className=\"d-flex justify-content-around\">\r\n                <Link to={{ pathname: service.link }} target=\"_blank\" className=\"btn btn-primary\">\r\n                  <FaCreditCard /> Buy Now\r\n                </Link>\r\n                <Button>\r\n                  <FaShoppingBag /> Add to Cart\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ServiceScreen;\r\n","import MainSlider from \"components/MainSlider\";\r\n\r\nconst AboutScreen = () => {\r\n  return <MainSlider />;\r\n};\r\n\r\nexport default AboutScreen;\r\n","import MainSlider from \"components/MainSlider\";\r\n\r\nconst ContactScreen = () => {\r\n  return <MainSlider />;\r\n};\r\n\r\nexport default ContactScreen;\r\n","// GET /api/directory\r\nexport const GET_DIRECTORIES_REQUEST = \"GET_DIRECTORIES_REQUEST\";\r\nexport const GET_DIRECTORIES_SUCCESS = \"GET_DIRECTORIES_SUCCESS\";\r\nexport const GET_DIRECTORIES_FAIL = \"GET_DIRECTORIES_FAIL\";\r\n\r\n// GET /api/directory/:username\r\nexport const GET_DIRECTORY_REQUEST = \"GET_DIRECTORY_REQUEST\";\r\nexport const GET_DIRECTORY_SUCCESS = \"GET_DIRECTORY_SUCCESS\";\r\nexport const GET_DIRECTORY_FAIL = \"GET_DIRECTORY_FAIL\";\r\n\r\n// GET /api/directory/products/:id\r\nexport const GET_DIRECTORY_PRODUCTS_REQUEST = \"GET_DIRECTORY_PRODUCTS_REQUEST\";\r\nexport const GET_DIRECTORY_PRODUCTS_SUCCESS = \"GET_DIRECTORY_PRODUCTS_SUCCESS\";\r\nexport const GET_DIRECTORY_PRODUCTS_FAIL = \"GET_DIRECTORY_PRODUCTS_FAIL\";\r\n\r\n// GET /api/directory/services/:id\r\nexport const GET_DIRECTORY_SERVICES_REQUEST = \"GET_DIRECTORY_SERVICES_REQUEST\";\r\nexport const GET_DIRECTORY_SERVICES_SUCCESS = \"GET_DIRECTORY_SERVICES_SUCCESS\";\r\nexport const GET_DIRECTORY_SERVICES_FAIL = \"GET_DIRECTORY_SERVICES_FAIL\";\r\n\r\n// POST /api/directory/review/:username\r\nexport const REVIEW_DIRECTORY_REQUEST = \"REVIEW_DIRECTORY_REQUEST\";\r\nexport const REVIEW_DIRECTORY_SUCCESS = \"REVIEW_DIRECTORY_SUCCESS\";\r\nexport const REVIEW_DIRECTORY_FAIL = \"REVIEW_DIRECTORY_FAIL\";\r\n\r\n// DEL /api/directory/review/remove/:username\r\nexport const REMOVE_DIRECTORY_REVIEW_REQUEST = \"REMOVE_DIRECTORY_REVIEW_REQUEST\";\r\nexport const REMOVE_DIRECTORY_REVIEW_SUCCESS = \"REMOVE_DIRECTORY_REVIEW_SUCCESS\";\r\nexport const REMOVE_DIRECTORY_REVIEW_FAIL = \"REMOVE_DIRECTORY_REVIEW_FAIL\";\r\n\r\n/*\r\n * Admin actions\r\n */\r\n\r\n// GET /api/directory/all\r\nexport const GET_ALL_DIRECTORIES_REQUEST = \"GET_ALL_DIRECTORIES_REQUEST\";\r\nexport const GET_ALL_DIRECTORIES_SUCCESS = \"GET_ALL_DIRECTORIES_SUCCESS\";\r\nexport const GET_ALL_DIRECTORIES_FAIL = \"GET_ALL_DIRECTORIES_FAIL\";\r\n\r\n// GET /api/directory/any/:id\r\nexport const GET_ANY_DIRECTORY_REQUEST = \"GET_ANY_DIRECTORY_REQUEST\";\r\nexport const GET_ANY_DIRECTORY_SUCCESS = \"GET_ANY_DIRECTORY_SUCCESS\";\r\nexport const GET_ANY_DIRECTORY_FAIL = \"GET_ANY_DIRECTORY_FAIL\";\r\n\r\n// POST /api/directory/add\r\nexport const ADD_DIRECTORY_REQUEST = \"ADD_DIRECTORY_REQUEST\";\r\nexport const ADD_DIRECTORY_SUCCESS = \"ADD_DIRECTORY_SUCCESS\";\r\nexport const ADD_DIRECTORY_FAIL = \"ADD_DIRECTORY_FAIL\";\r\nexport const ADD_DIRECTORY_RESET = \"ADD_DIRECTORY_RESET\";\r\n\r\n// PUT /api/directory/edit/:id\r\nexport const EDIT_DIRECTORY_REQUEST = \"EDIT_DIRECTORY_REQUEST\";\r\nexport const EDIT_DIRECTORY_SUCCESS = \"EDIT_DIRECTORY_SUCCESS\";\r\nexport const EDIT_DIRECTORY_FAIL = \"EDIT_DIRECTORY_FAIL\";\r\nexport const EDIT_DIRECTORY_RESET = \"EDIT_DIRECTORY_RESET\";\r\n\r\n// PUT /api/directory/approve/:id\r\nexport const APPROVE_DIRECTORY_REQUEST = \"APPROVE_DIRECTORY_REQUEST\";\r\nexport const APPROVE_DIRECTORY_SUCCESS = \"APPROVE_DIRECTORY_SUCCESS\";\r\nexport const APPROVE_DIRECTORY_FAIL = \"APPROVE_DIRECTORY_FAIL\";\r\n\r\n// DEL /api/directory/remove/:id\r\nexport const REMOVE_DIRECTORY_REQUEST = \"REMOVE_DIRECTORY_REQUEST\";\r\nexport const REMOVE_DIRECTORY_SUCCESS = \"REMOVE_DIRECTORY_SUCCESS\";\r\nexport const REMOVE_DIRECTORY_FAIL = \"REMOVE_DIRECTORY_FAIL\";\r\nexport const REMOVE_DIRECTORY_RESET = \"REMOVE_DIRECTORY_RESET\";\r\n\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import * as actionTypes from \"../constants/directory\";\r\nimport axios from \"axios\";\r\n\r\n// GET /api/directory\r\nexport const loadDirectories = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_DIRECTORIES_REQUEST });\r\n    const { data } = await axios.get(\"/api/directory\");\r\n    dispatch({ type: actionTypes.GET_DIRECTORIES_SUCCESS, payload: data.directories });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_DIRECTORIES_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/directory/:username\r\nexport const loadDirectory = (username) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_DIRECTORY_REQUEST });\r\n    const { data } = await axios.get(`/api/directory/${username}`);\r\n    dispatch({ type: actionTypes.GET_DIRECTORY_SUCCESS, payload: data.directory });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_DIRECTORY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// POST /api/directory/review/:username\r\nexport const reviewDirectory = (review, username) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.REVIEW_DIRECTORY_REQUEST });\r\n    const { data } = await axios.post(`/api/directory/review/${username}`, review);\r\n    dispatch({ type: actionTypes.REVIEW_DIRECTORY_SUCCESS, payload: data.review });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.REVIEW_DIRECTORY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// DEL /api/directory/review/remove/:username\r\nexport const removeReview = (username) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.REMOVE_DIRECTORY_REVIEW_REQUEST });\r\n    const { data } = await axios.delete(`/api/directory/review/remove/${username}`);\r\n    dispatch({ type: actionTypes.REMOVE_DIRECTORY_REVIEW_SUCCESS, payload: data.review });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.REMOVE_DIRECTORY_REVIEW_FAIL,\r\n      payload: error.response.data.error,\r\n    });\r\n  }\r\n};\r\n\r\n// GET /api/directory/products/:username\r\nexport const loadDirectoryProducts = (username) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_DIRECTORY_PRODUCTS_REQUEST });\r\n    const { data } = await axios.get(`/api/directory/products/${username}`);\r\n    dispatch({ type: actionTypes.GET_DIRECTORY_PRODUCTS_SUCCESS, payload: data.products });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_DIRECTORY_PRODUCTS_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/directory/services/:username\r\nexport const loadDirectoryServices = (username) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_DIRECTORY_SERVICES_REQUEST });\r\n    const { data } = await axios.get(`/api/directory/services/${username}`);\r\n    dispatch({ type: actionTypes.GET_DIRECTORY_SERVICES_SUCCESS, payload: data.services });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_DIRECTORY_SERVICES_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n/*\r\n * Admin Routes\r\n */\r\n\r\n// GET /api/directory/all\r\nexport const getAllDirectories = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_ALL_DIRECTORIES_REQUEST });\r\n    const { data } = await axios.get(\"/api/directory/all\");\r\n    dispatch({ type: actionTypes.GET_ALL_DIRECTORIES_SUCCESS, payload: data.directories });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_ALL_DIRECTORIES_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/directory/any/:id\r\nexport const getAnyDirectory = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_ANY_DIRECTORY_REQUEST });\r\n    const { data } = await axios.get(`/api/directory/${id}`);\r\n    dispatch({ type: actionTypes.GET_ANY_DIRECTORY_SUCCESS, payload: data.directory });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_ANY_DIRECTORY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// POST /api/directory/add\r\nexport const addDirectory = (directory) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.ADD_DIRECTORY_REQUEST });\r\n    const { data } = await axios.post(`/api/directory/add`, directory);\r\n    dispatch({ type: actionTypes.ADD_DIRECTORY_SUCCESS, payload: data.directory });\r\n    // In case a user ref is added\r\n    if (data.user) dispatch({ type: \"EDIT_USER_SUCCESS\", payload: data.user });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.ADD_DIRECTORY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/directory/edit/:id\r\nexport const editDirectory = (directory, id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.EDIT_DIRECTORY_REQUEST });\r\n    const { data } = await axios.put(`/api/directory/edit/${id}`, directory);\r\n    dispatch({ type: actionTypes.EDIT_DIRECTORY_SUCCESS, payload: data.directory });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.EDIT_DIRECTORY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/directory/approve/:id\r\nexport const approveDirectory = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.APPROVE_DIRECTORY_REQUEST });\r\n    const { data } = await axios.put(`/api/directory/approve/${id}`);\r\n    dispatch({ type: actionTypes.APPROVE_DIRECTORY_SUCCESS, payload: data.directory });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.APPROVE_DIRECTORY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// DEL /api/directory/remove/:id\r\nexport const removeDirectory = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.REMOVE_DIRECTORY_REQUEST });\r\n    const { data } = await axios.delete(`/api/directory/remove/${id}`);\r\n    dispatch({ type: actionTypes.REMOVE_DIRECTORY_SUCCESS, payload: data.directory });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.REMOVE_DIRECTORY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.CLEAR_ERRORS });\r\n};\r\n\r\nexport const addDirectoryReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.ADD_DIRECTORY_RESET });\r\n};\r\n\r\nexport const editDirectoryReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.EDIT_DIRECTORY_RESET });\r\n};\r\n\r\nexport const removeDirectoryReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.REMOVE_DIRECTORY_RESET });\r\n};\r\n","import convertStars from \"helpers/convertStars\";\r\nimport { FaStar, FaStarHalfAlt } from \"react-icons/fa\";\r\n\r\nconst Ratings = ({ rating, size, ...props }) => {\r\n  const array = convertStars(rating);\r\n  return (\r\n    <div {...props}>\r\n      {array.map((val, index) => (\r\n        <div key={index} style={{ display: \"inline\" }}>\r\n          {val === \"FULL\" ? (\r\n            <FaStar className=\"text-primary\" size={size} />\r\n          ) : val === \"HALF\" ? (\r\n            <FaStarHalfAlt className=\"text-primary\" size={size} />\r\n          ) : (\r\n            <FaStar className=\"text-secondary\" size={size} />\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ratings;\r\n","/*\r\n * Function to convert a floating number to an array of strings representing the number\r\n * @param any floating point number\r\n * @return a array of string representing each star\r\n */\r\n\r\nexport default function convertStars(num = 0) {\r\n  // Rounding the number to the nearest half or .5th\r\n  let n = Math.round(num * 2) / 2;\r\n\r\n  // Making an array of stars\r\n  const array = [];\r\n  while (n-- > 0) {\r\n    if (n >= 0) array.push(\"FULL\");\r\n    else array.push(\"HALF\");\r\n  }\r\n\r\n  // Filling the rest of the array if unfilled stars and returning it\r\n  while (array.length < 5) array.push(\"NONE\");\r\n  return array;\r\n}\r\n","// Dependencies\r\nimport { useEffect, useState } from \"react\";\r\nimport { Card, Container, Row, Col, Form } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaBookmark, FaFilter, FaMapMarker } from \"react-icons/fa\";\r\n\r\n// Actions\r\nimport { loadDirectories } from \"redux/actions/directory\";\r\n\r\n// Config\r\nimport { states } from \"config.json\";\r\n\r\n// Components\r\nimport MainSlider from \"components/MainSlider.jsx\";\r\nimport Ratings from \"components/Ratings\";\r\n\r\n// Custom CSS\r\nimport \"./DirectoriesScreen.css\";\r\n\r\nconst CheckBox = ({ label }) => (\r\n  <Form.Group>\r\n    <Form.Check type=\"checkbox\" label={label}></Form.Check>\r\n  </Form.Group>\r\n);\r\nconst DirectoriesScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, directories } = useSelector((state) => state.directory);\r\n  const { directoryCategories } = useSelector((state) => state.category);\r\n  const { pets } = useSelector((state) => state.pet);\r\n\r\n  const [showFilter, setShowFilter] = useState(window.innerWidth > 768);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadDirectories());\r\n    const handleResize = () => setShowFilter(window.innerWidth > 768);\r\n    const listener = window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", listener);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <MainSlider />\r\n      <Container className=\"my-2\" fluid>\r\n        <div className=\"directory-screen\">\r\n          <div\r\n            className=\"collapse-button text-end text-primary\"\r\n            onClick={() => {\r\n              setShowFilter((x) => !x);\r\n            }}\r\n          >\r\n            <FaFilter /> Add Filters\r\n          </div>\r\n          <div className={`filters ${showFilter ? \"d-block\" : \"d-none\"}`}>\r\n            <div className=\"category-section\">\r\n              <h4>Filter by Category</h4>\r\n              {directoryCategories?.map((category, index) => (\r\n                <CheckBox label={category.name} key={index} />\r\n              ))}\r\n            </div>\r\n            <div className=\"pettype-section\">\r\n              <h4>Filter by Pet</h4>\r\n              {pets?.map((pet, index) => (\r\n                <CheckBox label={pet.name} key={index} />\r\n              ))}\r\n            </div>\r\n            <div className=\"area-section\">\r\n              <h4>Filter by State</h4>\r\n              <Form.Select defaultValue=\"Delhi\">\r\n                {states.map((state) => (\r\n                  <option value={state} key={state}>\r\n                    {state}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n            </div>\r\n            <div className=\"sort-section\">\r\n              <h4>Sort By</h4>\r\n              <CheckBox label=\"Newest\" />\r\n              <CheckBox label=\"Top Rated\" />\r\n              <CheckBox label=\"Most Selling\" />\r\n            </div>\r\n            <button className=\"btn btn-primary\">Apply Filters</button>\r\n          </div>\r\n          <div className=\"directories\">\r\n            {loading ? (\r\n              <h3>Loading</h3>\r\n            ) : directories.length > 0 ? (\r\n              <Row>\r\n                {directories.map((directory, index) => (\r\n                  <Col sm={12} md={6} lg={4} key={index}>\r\n                    <DirectoryCard directory={directory} key={index} />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            ) : (\r\n              <h3>No directories to show</h3>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DirectoryCard = ({ directory }) => {\r\n  const diffTime = Math.abs(new Date() - new Date(directory.createdAt));\r\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n  return (\r\n    <Card className=\"m-2\">\r\n      <Link to={`/${directory.username}`}>\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={directory.directoryImages?.[0] || \"/assets/placeholders/store.png\"}\r\n        />\r\n        <Card.Body>\r\n          <Card.Title>{directory.storeName}</Card.Title>\r\n          <Ratings rating={directory.averageRating} size={18} className=\"d-inline\" />\r\n          <span className=\"px-1\">{directory.averageRating} stars</span>\r\n\r\n          <Card.Text>\r\n            <FaBookmark className=\"text-primary\" /> {directory.category.join(\", \")}\r\n            <br />\r\n            <FaMapMarker className=\"text-primary\" /> {directory.address}, {directory.state},{\" \"}\r\n            {directory.pincode}\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer className=\"text-muted\">{diffDays} day(s) ago</Card.Footer>\r\n      </Link>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DirectoriesScreen;\r\n","/*\r\n * Public actions\r\n */\r\n\r\n// POST /api/inquiry/add\r\nexport const ADD_INQUIRY_REQUEST = \"ADD_INQUIRY_REQUEST\";\r\nexport const ADD_INQUIRY_SUCCESS = \"ADD_INQUIRY_SUCCESS\";\r\nexport const ADD_INQUIRY_FAIL = \"ADD_INQUIRY_FAIL\";\r\n\r\n/*\r\n * Client Actions\r\n */\r\n\r\n// GET /api/inquiry/own\r\nexport const GET_OWN_INQUIRIES_REQUEST = \"GET_OWN_INQUIRIES_REQUEST\";\r\nexport const GET_OWN_INQUIRIES_SUCCESS = \"GET_OWN_INQUIRIES_SUCCESS\";\r\nexport const GET_OWN_INQUIRIES_FAIL = \"GET_OWN_INQUIRIES_FAIL\";\r\n\r\n// GET /api/inquiry/own/:id\r\nexport const GET_OWN_INQUIRY_REQUEST = \"GET_OWN_INQUIRY_REQUEST\";\r\nexport const GET_OWN_INQUIRY_SUCCESS = \"GET_OWN_INQUIRY_SUCCESS\";\r\nexport const GET_OWN_INQUIRY_FAIL = \"GET_OWN_INQUIRY_FAIL\";\r\n\r\n/*\r\n * Admin Actions\r\n */\r\n\r\n// GET /api/inquiry\r\nexport const GET_INQUIRIES_REQUEST = \"GET_INQUIRIES_REQUEST\";\r\nexport const GET_INQUIRIES_SUCCESS = \"GET_INQUIRIES_SUCCESS\";\r\nexport const GET_INQUIRIES_FAIL = \"GET_INQUIRIES_FAIL\";\r\n\r\n// GET /api/inquiry/:id\r\nexport const GET_INQUIRY_REQUEST = \"GET_INQUIRY_REQUEST\";\r\nexport const GET_INQUIRY_SUCCESS = \"GET_INQUIRY_SUCCESS\";\r\nexport const GET_INQUIRY_FAIL = \"GET_INQUIRY_FAIL\";\r\n\r\n// PUT /api/inquiry/edit/:id\r\nexport const EDIT_INQUIRY_REQUEST = \"EDIT_INQUIRY_REQUEST\";\r\nexport const EDIT_INQUIRY_SUCCESS = \"EDIT_INQUIRY_SUCCESS\";\r\nexport const EDIT_INQUIRY_FAIL = \"EDIT_INQUIRY_FAIL\";\r\n\r\n// DEL /api/inquiry/remove/:id\r\nexport const REMOVE_INQUIRY_REQUEST = \"REMOVE_INQUIRY_REQUEST\";\r\nexport const REMOVE_INQUIRY_SUCCESS = \"REMOVE_INQUIRY_SUCCESS\";\r\nexport const REMOVE_INQUIRY_FAIL = \"REMOVE_INQUIRY_FAIL\";\r\n\r\n// Clear errors\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import { binaryToArray } from \"helpers/daysHandler\";\r\n\r\nexport const customerRegistration = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n  terms: false,\r\n};\r\n\r\nexport const clientRegistration = {\r\n  ...customerRegistration,\r\n  storeName: \"\",\r\n  category: [],\r\n  number: \"\",\r\n  address: \"\",\r\n  state: \"Delhi\",\r\n  city: \"\",\r\n  pincode: \"\",\r\n  role: \"Client\",\r\n};\r\n\r\nexport const user = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  storeName: \"\",\r\n  category: [],\r\n  number: \"\",\r\n  address: \"\",\r\n  state: \"Delhi\",\r\n  city: \"\",\r\n  pincode: \"\",\r\n  role: \"Customer\",\r\n};\r\n\r\nexport const directory = {\r\n  storeName: \"\",\r\n  user: \"\",\r\n  email: \"\",\r\n  number: \"\",\r\n  category: [],\r\n  address: \"\",\r\n  state: \"Delhi\",\r\n  city: \"\",\r\n  pincode: \"\",\r\n};\r\n\r\nexport const directoryAdditional = (directory) => {\r\n  return {\r\n    description: directory.description,\r\n    website: directory.website,\r\n    tagline: directory.tagline,\r\n    username: directory.username,\r\n    features: [...directory.features],\r\n    products: [...directory.products],\r\n    services: [...directory.services],\r\n    gallery: [...directory.gallery],\r\n    details: JSON.parse(JSON.stringify(directory.details)),\r\n    timings: JSON.parse(JSON.stringify(directory.timings)),\r\n    location: JSON.parse(JSON.stringify(directory.location)),\r\n    faq: JSON.parse(JSON.stringify(directory.faq)),\r\n    directoryImages: [],\r\n  };\r\n};\r\n\r\nexport const directoryUpdate = (directory) => {\r\n  return {\r\n    ...directoryAdditional(directory),\r\n    storeName: directory.storeName,\r\n    user: directory.user?._id || \"\",\r\n    email: directory.email,\r\n    number: directory.number,\r\n    address: directory.address,\r\n    state: directory.state,\r\n    city: directory.city,\r\n    pincode: directory.pincode,\r\n    category: [...directory.category],\r\n  };\r\n};\r\n\r\nexport const clientUpdate = (user, directory) => {\r\n  return {\r\n    name: user.name,\r\n    profileImage: null,\r\n    storeName: directory.storeName,\r\n    category: [...directory.category],\r\n    number: directory.number,\r\n    address: directory.address,\r\n    state: directory.state,\r\n    city: directory.city,\r\n    pincode: directory.pincode,\r\n  };\r\n};\r\n\r\nexport const product = (\r\n  _product = {\r\n    name: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    seller: \"\",\r\n    price: 0,\r\n    countInStock: 0,\r\n    petType: [],\r\n    breedType: \"\",\r\n    weight: 0,\r\n    size: {\r\n      length: 0,\r\n      height: 0,\r\n      width: 0,\r\n    },\r\n    productImages: [],\r\n    affiliateLinks: [],\r\n    brand: \"\",\r\n    isVeg: false,\r\n    ageRange: {\r\n      min: 0,\r\n      max: 0,\r\n    },\r\n  }\r\n) => {\r\n  return {\r\n    name: _product.name,\r\n    description: _product.description,\r\n    seller: _product.seller || \"\",\r\n    category: _product.category,\r\n    price: _product.price,\r\n    countInStock: _product.countInStock,\r\n    petType: _product.petType,\r\n    breedType: _product.breedType,\r\n    weight: _product.weight,\r\n    size: _product.size,\r\n    isVeg: _product.isVeg,\r\n    ageRange: _product.ageRange,\r\n    affiliateLinks: _product.affiliateLinks,\r\n    brand: _product.brand,\r\n    productImages: _product.productImages,\r\n    productImagesUpload: [],\r\n  };\r\n};\r\n\r\nexport const service = (\r\n  _service = {\r\n    name: \"\",\r\n    seller: \"\",\r\n    description: \"\",\r\n    address: \"\",\r\n    nameOfIncharge: \"\",\r\n    numberOfIncharge: \"\",\r\n    timings: {\r\n      from: \"00:00\",\r\n      to: \"00:00\",\r\n    },\r\n    days: [],\r\n    category: \"\",\r\n    price: 0,\r\n    petType: [],\r\n    breedType: \"\",\r\n    ageRange: {\r\n      min: 0,\r\n      max: 0,\r\n    },\r\n  }\r\n) => {\r\n  return {\r\n    name: _service.name,\r\n    seller: _service.seller,\r\n    description: _service.description,\r\n    address: _service.address,\r\n    nameOfIncharge: _service.nameOfIncharge,\r\n    numberOfIncharge: _service.numberOfIncharge,\r\n    timings: _service.timings,\r\n    days: typeof _service.days === \"number\" ? binaryToArray(_service.days) : _service.days,\r\n    category: _service.category,\r\n    price: _service.price,\r\n    petType: _service.petType,\r\n    breedType: _service.breedType,\r\n    ageRange: _service.ageRange,\r\n    serviceImages: [],\r\n  };\r\n};\r\n\r\nexport const directoryInquiry = {\r\n  name: \"\",\r\n  number: \"\",\r\n  email: \"\",\r\n  message: \"\",\r\n};\r\n\r\nexport const directoryReview = {\r\n  subject: \"\",\r\n  comment: \"\",\r\n  rating: 1,\r\n};\r\n","import * as Yup from \"yup\";\r\n\r\nexport const customerRegistration = Yup.object({\r\n  name: Yup.string()\r\n    .min(3, \"Must be atleast 3 characters\")\r\n    .max(32, \"Must be 32 characters or less\")\r\n    .required(\"Name is required\"),\r\n  email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n  password: Yup.string()\r\n    .min(8, \"Password must be at least 8 charaters\")\r\n    .required(\"Password is required\"),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Re-enter your password\"),\r\n  terms: Yup.bool().oneOf([true], \"You are required to check this\"),\r\n});\r\n\r\nexport const directoryRegistration = Yup.object({\r\n  storeName: Yup.string()\r\n    .min(3, \"Business Name must contain atleast 3 characters\")\r\n    .max(64, \"Business Name is too long\")\r\n    .required(\"Please provide a business name\"),\r\n  category: Yup.array().min(1, \"Pick atleast one category\").of(Yup.string()),\r\n  number: Yup.number(\"Please provide a valid number\").required(\"Please provide a phone number\"),\r\n  address: Yup.string()\r\n    .min(8, \"Address is too short\")\r\n    .max(256, \"Address is too long\")\r\n    .required(\"Please provide an address\"),\r\n  state: Yup.string().required(\"Please provide a state\"),\r\n  city: Yup.string().required(\"Please provide a city\"),\r\n  pincode: Yup.number().required(\"Please provide a pincode\"),\r\n});\r\n\r\nexport const user = Yup.object({\r\n  name: Yup.string()\r\n    .min(3, \"Must be atleast 3 characters\")\r\n    .max(32, \"Must be 32 characters or less\")\r\n    .required(\"Name is required\"),\r\n  email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n  password: Yup.string()\r\n    .min(8, \"Password must be at least 8 charaters\")\r\n    .required(\"Password is required\"),\r\n  storeName: Yup.string()\r\n    .min(3, \"Business Name must contain atleast 3 characters\")\r\n    .max(64, \"Business Name is too long\"),\r\n  category: Yup.array().of(Yup.string()),\r\n  number: Yup.number(\"Please provide a valid number\"),\r\n  address: Yup.string().min(8, \"Address is too short\").max(256, \"Address is too long\"),\r\n  state: Yup.string(),\r\n  city: Yup.string(),\r\n  pincode: Yup.number(),\r\n});\r\n\r\nexport const directoryAdditional = Yup.object({\r\n  features: Yup.array()\r\n    .max(10, \"You can only have a maximum of 10 features\")\r\n    .of(\r\n      Yup.string()\r\n        .required(\"This is a required field\")\r\n        .min(4, \"This feature is too short\")\r\n        .max(16, \"This feature is too long\")\r\n    ),\r\n  details: Yup.array()\r\n    .max(10, \"You can only have a maximum of 10 details\")\r\n    .of(\r\n      Yup.object({\r\n        title: Yup.string()\r\n          .required(\"The title is required\")\r\n          .min(4, \"This title is too short\")\r\n          .max(12, \"This title is too long\"),\r\n        content: Yup.string()\r\n          .required(\"The description is required\")\r\n          .min(4, \"This description is too short\")\r\n          .max(64, \"This description is too long\"),\r\n      })\r\n    ),\r\n  website: Yup.string().matches(\r\n    /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi,\r\n    \"Please provide a valid website\"\r\n  ),\r\n  tagline: Yup.string().max(32, \"The tagline is too long\"),\r\n  description: Yup.string().max(4096, \"The description is too long\"),\r\n  username: Yup.string(),\r\n  products: Yup.array()\r\n    .max(25, \"You can only have a maximum of 25 products\")\r\n    .of(\r\n      Yup.string()\r\n        .required(\"This is a required field\")\r\n        .min(4, \"This product name is too short\")\r\n        .max(32, \"This product name is too long\")\r\n    ),\r\n  services: Yup.array()\r\n    .max(25, \"You can only have a maximum of 25 products\")\r\n    .of(\r\n      Yup.string()\r\n        .required(\"This is a required field\")\r\n        .min(4, \"This product name is too short\")\r\n        .max(32, \"This product name is too long\")\r\n    ),\r\n  location: Yup.object({\r\n    lat: Yup.number(),\r\n    lng: Yup.number(),\r\n  }),\r\n  timings: Yup.array()\r\n    .max(7)\r\n    .of(\r\n      Yup.object({\r\n        from: Yup.string(),\r\n        to: Yup.string(),\r\n      })\r\n    ),\r\n  faq: Yup.array()\r\n    .max(10)\r\n    .of(\r\n      Yup.object({\r\n        question: Yup.string()\r\n          .min(2, \"Question is too short\")\r\n          .max(120, \"Question is too long\")\r\n          .required(\"Question is required\"),\r\n        answer: Yup.string()\r\n          .min(2, \"Answer is too short\")\r\n          .max(1024, \"Answer is too long\")\r\n          .required(\"Answer is required\"),\r\n      })\r\n    ),\r\n  gallery: Yup.array().of(Yup.string().required(\"Please provide a link to the image\")),\r\n});\r\n\r\nexport const directoryUpdate = directoryRegistration.concat(directoryAdditional);\r\n\r\nexport const clientUpdate = Yup.object({\r\n  name: Yup.string()\r\n    .min(3, \"Must be atleast 3 characters\")\r\n    .max(32, \"Must be 32 characters or less\")\r\n    .required(\"Please enter your new name\"),\r\n}).concat(directoryRegistration);\r\n\r\nexport const product = Yup.object({\r\n  name: Yup.string()\r\n    .min(5, \"Product name is too short\")\r\n    .max(128, \"Product name is too long\")\r\n    .required(\"Please provide a product name\"),\r\n  description: Yup.string()\r\n    .min(8, \"Product description is too short\")\r\n    .max(1024, \"Product description is too long\")\r\n    .required(\"Please provide a product description\"),\r\n  category: Yup.string().required(\"Pick atleast one category\"),\r\n  price: Yup.number()\r\n    .positive(\"Price must be a positive number\")\r\n    .required(\"Please provide a price\"),\r\n  countInStock: Yup.number()\r\n    .min(0, \"Please provide a positive count\")\r\n    .required(\"Please provide a count in stock\"),\r\n  petType: Yup.array().min(1, \"Please provide a pet type\").of(Yup.string()),\r\n  breedType: Yup.string(),\r\n  weight: Yup.number().min(0, \"Weight must be positive\"),\r\n  size: Yup.object({\r\n    length: Yup.number().min(0, \"Length must be positive\"),\r\n    height: Yup.number().min(0, \"Height must be positive\"),\r\n    width: Yup.number().min(0, \"Width must be positive\"),\r\n  }),\r\n  isVeg: Yup.boolean(),\r\n  ageRange: Yup.object({\r\n    min: Yup.number().min(0, \"Minimum age should be atleast 0\"),\r\n    max: Yup.number().min(0, \"Maximum age should be atleast 0\"),\r\n  }),\r\n  productImages: Yup.array()\r\n    .max(7, \"You can have a maximum of 7 product images\")\r\n    .of(Yup.string().required(\"Please provide a link\")),\r\n  affiliateLinks: Yup.array().of(\r\n    Yup.object({\r\n      productId: Yup.string().required(\"ID is required\"),\r\n      productLink: Yup.string().required(\"Link is required\"),\r\n      productProvider: Yup.string().required(\"Provider is required\"),\r\n      productPrice: Yup.number().required(\"Price is required\").min(0, \"Provide a valid price\"),\r\n    })\r\n  ),\r\n});\r\n\r\nexport const service = Yup.object({\r\n  name: Yup.string()\r\n    .min(5, \"Product name is too short\")\r\n    .max(32, \"Product name is too long\")\r\n    .required(\"Please provide a product name\"),\r\n  description: Yup.string()\r\n    .min(8, \"Product description is too short\")\r\n    .max(1024, \"Product description is too long\")\r\n    .required(\"Please provide a product description\"),\r\n  category: Yup.string().required(\"Pick atleast one category\"),\r\n  price: Yup.number()\r\n    .positive(\"Price must be a positive number\")\r\n    .required(\"Please provide a price\"),\r\n  address: Yup.string().min(8, \"Address is too short\").max(128, \"Address is too long\"),\r\n  nameOfIncharge: Yup.string()\r\n    .min(3, \"Name of incharge is too short\")\r\n    .max(32, \"Name of incharge is too long\"),\r\n  numberOfIncharge: Yup.string().matches(\r\n    /((\\+*)((0[ -]*)*|((91 )*))((\\d{12})+|(\\d{10})+))|\\d{5}([- ]*)\\d{6}/g,\r\n    \"Please provide a valid phone number of the incharge\"\r\n  ),\r\n  timings: Yup.object({\r\n    from: Yup.string().required(\"Please provide timings of this service\"),\r\n    to: Yup.string().required(\"Please provide timings of this service\"),\r\n  }),\r\n  days: Yup.array().min(1, \"Please pick atleast one day when this service is provided\"),\r\n  petType: Yup.array().min(1, \"Please provide a pet type\").of(Yup.string()),\r\n  breedType: Yup.string(),\r\n  ageRange: Yup.object({\r\n    min: Yup.number().min(0, \"Minimum age should be atleast 0\"),\r\n    max: Yup.number().min(0, \"Maximum age should be atleast 0\"),\r\n  }),\r\n});\r\n\r\nexport const directoryInquiry = Yup.object({\r\n  name: Yup.string()\r\n    .required(\"Please provide your name\")\r\n    .min(3, \"Name is too short\")\r\n    .max(64, \"Name is too long\"),\r\n  email: Yup.string().email(\"Please provide a valid email\"),\r\n  number: Yup.string()\r\n    .matches(\r\n      /((\\+*)((0[ -]*)*|((91 )*))((\\d{12})+|(\\d{10})+))|\\d{5}([- ]*)\\d{6}/g,\r\n      \"Please provide a valid phone number\"\r\n    )\r\n    .required(\"Please provide your phone number\"),\r\n  message: Yup.string()\r\n    .required(\"Please enter your inquiry message\")\r\n    .min(4, \"Message is too short\")\r\n    .max(1024, \"Message is too long\"),\r\n});\r\n\r\nexport const directoryReview = Yup.object({\r\n  subject: Yup.string()\r\n    .required(\"Please provide a subject\")\r\n    .min(6, \"Subject is too short\")\r\n    .max(32, \"Subject is too long\"),\r\n  comment: Yup.string()\r\n    .required(\"Please provide a comment\")\r\n    .min(6, \"Comment is too short\")\r\n    .max(1024, \"Comment is too long\"),\r\n  rating: Yup.number()\r\n    .required(\"Please provide a rating\")\r\n    .min(1, \"Rating should be between 1 and 5\")\r\n    .max(5, \"Rating should be between 1 and 5\"),\r\n});\r\n","/*\r\n * Function to convert a Date object to human friendly string\r\n * @param a string made from Date constructor\r\n * @return a string containing human friendly format DD/MM/YY HH:MM:SS TT\r\n */\r\n\r\nexport default function convertTime(time) {\r\n  if (!time) return;\r\n  const date = new Date(time);\r\n  if (!date) return;\r\n\r\n  // Getting day, month and year\r\n  const day = date.getDate();\r\n  const month = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  // Getting hours and converting to 12h\r\n  let hours = date.getHours();\r\n  const isPM = hours > 11;\r\n  if (isPM && hours !== 12) hours -= 12;\r\n  if (hours < 10) hours = `0${hours}`;\r\n\r\n  // Getting minutes and seconds\r\n  let minutes = date.getMinutes();\r\n  if (minutes < 10) minutes = `0${minutes}`;\r\n  let seconds = date.getSeconds();\r\n  if (seconds < 10) seconds = `0${seconds}`;\r\n\r\n  return `${day}/${month}/${year} ${hours}:${minutes}:${seconds} ${isPM ? \"PM\" : \"AM\"}`;\r\n}\r\n","import convertTime from \"helpers/convertTime\";\r\nimport Ratings from \"./Ratings\";\r\n\r\nconst Review = ({ review }) => {\r\n  return (\r\n    <div className=\"d-flex py-2\">\r\n      <div className=\"dir-review-image px-2\">\r\n        <img\r\n          src={review.reviewer.profileImage || \"/assets/placeholders/portrait.png\"}\r\n          alt=\"\"\r\n          width=\"60px\"\r\n        />\r\n      </div>\r\n      <div className=\"dir-review-content px-2\">\r\n        <div className=\"dir-review-meta d-flex justify-content-between\">\r\n          <div className=\"d-flex\">\r\n            <p>{review.reviewer.name}</p>\r\n          </div>\r\n          <p style={{ fontSize: \"0.9rem\" }}>{convertTime(review.createdAt)}</p>\r\n        </div>\r\n        <Ratings rating={review.rating} size={15} />\r\n        <h5>{review.subject}</h5>\r\n        <p>{review.comment}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import Ratings from \"components/Ratings\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nconst ReviewGraph = ({ ratings = {}, total = 0, average = 0, ...props }) => {\r\n  return (\r\n    <div {...props}>\r\n      <div>\r\n        User Rating:\r\n        <Ratings rating={average} size={20} className=\"d-inline px-2\" />\r\n      </div>\r\n      <p>\r\n        {average} average rating based on {total} review(s)\r\n      </p>\r\n      {Object.keys(ratings).map((key, index) => {\r\n        const value = ratings[key];\r\n        return (\r\n          <Row key={index} className=\"my-2\" style={{ maxWidth: \"500px\" }}>\r\n            <Col xs={3} className=\"text-center\">\r\n              {key} star\r\n            </Col>\r\n            <Col xs={8}>\r\n              <div className=\"bg-light h-100 position-relative\">\r\n                <div\r\n                  className=\"bg-primary h-100 position-absolute top-0\"\r\n                  style={{ width: `${(value / total) * 100}%` }}\r\n                ></div>\r\n              </div>\r\n            </Col>\r\n            <Col xs={1}>{value}</Col>\r\n          </Row>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewGraph;\r\n","import React from \"react\";\r\nimport { useField, FieldArray, Field } from \"formik\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { days } from \"config.json\";\r\n\r\nexport const TextField = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <Form.Group className=\"mb-3\">\r\n      <Form.Label htmlFor={field.name}>{label}</Form.Label>\r\n      <Form.Control\r\n        {...field}\r\n        {...props}\r\n        isValid={meta.touched && !meta.error}\r\n        isInvalid={meta.touched && !!meta.error}\r\n      />\r\n      <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport const CheckBox = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <Form.Group className=\"mb-3\">\r\n      <Form.Check\r\n        checked={field.value}\r\n        {...field}\r\n        {...props}\r\n        isValid={meta.touched && !meta.error}\r\n        isInvalid={meta.touched && !!meta.error}\r\n        label={label}\r\n      />\r\n      <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport const CheckBoxOptions = ({ label, options, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <Form.Group className=\"mb-3\">\r\n      <Form.Label>{label}</Form.Label>\r\n      <div>\r\n        {options.map((opt, index) => (\r\n          <Field\r\n            name={props.name}\r\n            key={index}\r\n            as={Form.Check}\r\n            className=\"form-check-inline\"\r\n            checked={field.value.includes(opt)}\r\n            isInvalid={meta.touched && !!meta.error}\r\n            type=\"checkbox\"\r\n            value={opt}\r\n            label={opt}\r\n          />\r\n        ))}\r\n      </div>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport const SelectField = ({ label, options, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const classes = `form-control ${\r\n    meta.touched && meta.error ? \"is-invalid\" : `${meta.touched && !meta.error ? \"is-valid\" : \"\"}`\r\n  }`;\r\n  return (\r\n    <Form.Group className=\"mb-3\">\r\n      <Form.Label htmlFor={field.name}>{label}</Form.Label>\r\n      <select className={classes} {...field} {...props}>\r\n        {options.map((opt, index) => (\r\n          <option key={index} value={opt}>\r\n            {opt}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport const FormButton = ({ label, ...props }) => {\r\n  return (\r\n    <Button style={{ width: \"100%\" }} className=\"my-2\" {...props}>\r\n      {label}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst FieldArrayInput = ({ label, size, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <Form.Group className=\"mb-2\">\r\n      <Form.Control\r\n        {...field}\r\n        {...props}\r\n        rows={1}\r\n        size={size}\r\n        isValid={meta.touched && !meta.error}\r\n        isInvalid={meta.touched && !!meta.error}\r\n      />\r\n      <Form.Control.Feedback type=\"invalid\">{meta.error}</Form.Control.Feedback>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport const TextArrayField = ({ label, placeholder, message, size = \"md\", ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <Form.Group>\r\n      <FieldArray name={props.name}>\r\n        {({ push, remove }) => (\r\n          <div>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <Form.Label>{label}</Form.Label>\r\n              <Button\r\n                variant=\"success\"\r\n                size={size}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  push(\"\");\r\n                }}\r\n              >\r\n                Add\r\n              </Button>\r\n            </div>\r\n            <p className=\"text-danger\">{typeof meta.error === \"string\" ? meta.error : \"\"}</p>\r\n            {field.value.map((_, index) => {\r\n              return (\r\n                <Row key={index}>\r\n                  <Col xs={10}>\r\n                    <FieldArrayInput\r\n                      name={`${field.name}.${index}`}\r\n                      placeholder={placeholder}\r\n                      size={size}\r\n                    />\r\n                  </Col>\r\n                  <Col xs={2} className=\"d-flex flex-row-reverse\">\r\n                    <Form.Group>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        size={size}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          remove(index);\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </FieldArray>\r\n      {field.value.length === 0 && <p className=\"mt-3 text-muted\">{message}</p>}\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport const TextArrayOfObjectsField = ({\r\n  label,\r\n  placeholder,\r\n  message,\r\n  keys,\r\n  fieldType,\r\n  size = \"md\",\r\n  ...props\r\n}) => {\r\n  const [field, meta] = useField(props);\r\n  const colSize = Math.ceil(10 / keys.length);\r\n  return (\r\n    <Form.Group className=\"mb-3\">\r\n      <FieldArray name={props.name}>\r\n        {({ push, remove }) => (\r\n          <div>\r\n            <div className=\"d-flex justify-content-between\">\r\n              <Form.Label>{label}</Form.Label>\r\n              <Button\r\n                variant=\"success\"\r\n                size={size}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  push(Object.assign({}, ...Array.from(keys, (k) => ({ [k]: \"\" }))));\r\n                }}\r\n              >\r\n                Add\r\n              </Button>\r\n            </div>\r\n            <p className=\"text-danger\">{typeof meta.error === \"string\" ? meta.error : \"\"}</p>\r\n            {field.value.map((_, index) => {\r\n              return (\r\n                <Row key={index}>\r\n                  {keys.map((key) => (\r\n                    <Col xs={12} sm={colSize} key={key}>\r\n                      <FieldArrayInput\r\n                        name={`${field.name}.${index}.${key}`}\r\n                        placeholder={placeholder?.[key]}\r\n                        as={fieldType?.[key] || \"input\"}\r\n                        rows={3}\r\n                        size={size}\r\n                      />\r\n                    </Col>\r\n                  ))}\r\n                  <Col\r\n                    xs={12}\r\n                    sm={colSize * 4 <= 12 ? 12 : 2}\r\n                    className=\"d-flex flex-row-reverse mb-2\"\r\n                  >\r\n                    <Form.Group>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        size={size}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          remove(index);\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </FieldArray>\r\n      {field.value.length === 0 && <p className=\"mt-3 text-muted\">{message}</p>}\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport const TimingsField = ({ label, size = \"md\", ...props }) => {\r\n  const [field] = useField(props);\r\n  return (\r\n    <Form.Group className=\"mb-3\">\r\n      <FieldArray name={props.name}>\r\n        <>\r\n          <Form.Label>{label}</Form.Label>\r\n          {field.value.map((_, index) => (\r\n            <div key={index}>\r\n              <p className=\"mb-1\">{days[index]}</p>\r\n              <Row className=\"mt-1\">\r\n                <Col md={6}>\r\n                  <FieldArrayInput name={`${field.name}.${index}.from`} type=\"time\" size={size} />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FieldArrayInput name={`${field.name}.${index}.to`} type=\"time\" size={size} />\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          ))}\r\n        </>\r\n      </FieldArray>\r\n    </Form.Group>\r\n  );\r\n};\r\n","// Dependencies\r\nimport { useEffect } from \"react\";\r\nimport { Container, Row, Col, Form, Button, Accordion, Tabs, Tab } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Formik } from \"formik\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react\";\r\nimport { Pagination, Autoplay } from \"swiper\";\r\nimport parse from \"html-react-parser\";\r\nimport {\r\n  FaBookmark,\r\n  FaBookOpen,\r\n  FaCheckCircle,\r\n  FaEnvelope,\r\n  FaExclamationTriangle,\r\n  FaGoogle,\r\n  FaMapMarkedAlt,\r\n  FaMapMarker,\r\n  FaPencilAlt,\r\n  FaPhone,\r\n  FaTag,\r\n  FaWhatsapp,\r\n} from \"react-icons/fa\";\r\n\r\n// Actions\r\nimport {\r\n  loadDirectory,\r\n  loadDirectoryProducts,\r\n  loadDirectoryServices,\r\n  reviewDirectory,\r\n  removeReview,\r\n} from \"redux/actions/directory\";\r\nimport { addInquiry } from \"redux/actions/inquiry\";\r\n\r\n// Helpers\r\nimport { directoryInquiry as dirInqInitialValues } from \"helpers/initialValues\";\r\nimport { directoryInquiry as dirInqValidationSchema } from \"helpers/validationSchemas\";\r\nimport { directoryReview as dirRevInitialValues } from \"helpers/initialValues\";\r\nimport { directoryReview as dirRevValidationSchema } from \"helpers/validationSchemas\";\r\n\r\n// Components\r\nimport Ratings from \"components/Ratings\";\r\nimport Review from \"components/Review\";\r\nimport ReviewGraph from \"components/ReviewGraph\";\r\nimport Product from \"screens/shop/Product\";\r\nimport Service from \"screens/services/Service\";\r\nimport { TextField, SelectField } from \"components/InputFields.jsx\";\r\n\r\n// Config\r\nimport { days } from \"config.json\";\r\n\r\nfunction tConvert(timeString) {\r\n  if (timeString === \"\") return;\r\n  const H = +timeString.substr(0, 2);\r\n  const h = H % 12 || 12;\r\n  const ampm = H < 12 ? \" AM\" : \" PM\";\r\n  timeString = h + timeString.substr(2, 3) + ampm;\r\n  return timeString;\r\n}\r\n\r\nconst BannerInfo = ({ directory }) => {\r\n  const diffTime = Math.abs(new Date() - new Date(directory.createdAt));\r\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n  return (\r\n    <div className=\"dir-slider-info\">\r\n      <h4>{directory.storeName}</h4>\r\n      <Ratings rating={directory.averageRating} size={20} />\r\n      <p className=\"pt-2\">\r\n        <FaMapMarker /> {directory.address}, {directory.city}, {directory.state},{\" \"}\r\n        {directory.pincode}\r\n      </p>\r\n      <p>\r\n        <FaBookmark /> {directory.category?.join(\", \")}\r\n      </p>\r\n      <p>Added: {diffDays} days ago</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BannerButtons = ({ directory }) => {\r\n  return (\r\n    <div className=\"dir-slider-buttons\">\r\n      <div className=\"dir-slider-button p-2 mx-1\">\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n          href={`http://maps.google.com/maps?z=12&t=m&q=loc:${directory.location?.lat}+${directory.location?.lng}`}\r\n        >\r\n          <FaGoogle size={25} />\r\n        </a>\r\n      </div>\r\n      <div className=\"dir-slider-button p-2 mx-1\">\r\n        <a href={`tel:${directory.number}`}>\r\n          <FaPhone size={25} />\r\n        </a>\r\n      </div>\r\n      <div className=\"dir-slider-button p-2 mx-1\">\r\n        <a href={`mailto:${directory.email}`}>\r\n          <FaEnvelope size={25} />\r\n        </a>\r\n      </div>\r\n      <div className=\"dir-slider-button p-2 mx-1\">\r\n        <a href={`https://api.whatsapp.com/send?phone=${directory.number}`}>\r\n          <FaWhatsapp size={25} />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DirectoryProfileScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    loading: directoryLoading,\r\n    directory,\r\n    products,\r\n    services,\r\n  } = useSelector((state) => state.directory);\r\n  const { loading: inquiryLoading, success } = useSelector((state) => state.inquiry);\r\n  const { isAuthenticated, user } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadDirectory(match.params.username));\r\n    dispatch(loadDirectoryProducts(match.params.username));\r\n    dispatch(loadDirectoryServices(match.params.username));\r\n  }, [dispatch, match.params.username]);\r\n\r\n  const existingReview = directory.reviews?.filter(\r\n    (review) => review?.reviewer._id.toString() === user?._id.toString()\r\n  )?.[0];\r\n\r\n  return (\r\n    <>\r\n      {directoryLoading ? (\r\n        <h1>Loading</h1>\r\n      ) : (\r\n        <>\r\n          <Swiper\r\n            loop\r\n            autoplay={{ delay: 5000 }}\r\n            slidesPerView={\"auto\"}\r\n            modules={[Pagination, Autoplay]}\r\n            pagination={{ clickable: true, dynamicBullets: true }}\r\n            className=\"dir-swiper\"\r\n          >\r\n            {directory.directoryImages?.length > 0 ? (\r\n              directory.directoryImages?.map((image, index) => (\r\n                <SwiperSlide key={index}>\r\n                  <div className=\"dir-slider-container\">\r\n                    <BannerInfo directory={directory} />\r\n                    <img\r\n                      className=\"dir-slider-img\"\r\n                      src={image}\r\n                      alt={`Directory profile for ${directory.storeName}`}\r\n                    />\r\n                    <BannerButtons directory={directory} />\r\n                  </div>\r\n                </SwiperSlide>\r\n              ))\r\n            ) : (\r\n              <SwiperSlide>\r\n                <div className=\"dir-slider-container\">\r\n                  <BannerInfo directory={directory} />\r\n                  <img\r\n                    className=\"dir-slider-img\"\r\n                    src={\"/assets/placeholders/store.png\"}\r\n                    alt={`Directory profile for ${directory.storeName}`}\r\n                  />\r\n                  <BannerButtons directory={directory} />\r\n                </div>\r\n              </SwiperSlide>\r\n            )}\r\n          </Swiper>\r\n          <Container fluid>\r\n            <Row className=\"dir-gallery-and-info p-3\">\r\n              <Col md=\"6\" sm=\"12\" className=\"py-2\">\r\n                <h3 className=\"px-4\">Gallery</h3>\r\n                <Row className=\"dir-gallery-images\">\r\n                  {directory.gallery?.map((image, index) => (\r\n                    <Col xs={4} className=\"py-1\" key={index}>\r\n                      <a href={image}>\r\n                        <img src={image} alt={`Gallery for ${directory.storeName} #${index}`} />\r\n                      </a>\r\n                    </Col>\r\n                  ))}\r\n                  <Col xs={4} className=\"dir-add-photo\">\r\n                    <span>+</span>Add Photo\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\" className=\"dir-store-info py-3\">\r\n                <h3>Store Information</h3>\r\n                <h4>{directory.storeName}</h4>\r\n                <p>\r\n                  <FaMapMarkedAlt className=\"mx-2 text-primary\" size={20} />\r\n                  {directory.address}, {directory.city}, {directory.state}, {directory.pincode}\r\n                </p>\r\n                <p>\r\n                  <FaEnvelope className=\"mx-2 text-primary\" size={20} />\r\n                  <a href={`mailto:${directory.email}`}>Send inquiry by email</a>\r\n                </p>\r\n                <p>\r\n                  <FaPhone className=\"mx-2 text-primary\" size={20} />\r\n                  <a href={`tel:${directory.number}`}>{directory.number}</a>\r\n                </p>\r\n                <div>\r\n                  <p>Ratings: {directory.averageRating} stars</p>\r\n                  <Ratings rating={directory.averageRating} size={20} />\r\n                  <a href=\"#dir-reviews\">View all reviews</a>\r\n                </div>\r\n                <p>Listed in the following categories:</p>\r\n                {directory.category?.map((category, index) => (\r\n                  <p key={index}>\r\n                    <FaTag className=\"text-primary mx-2\" size={18} />\r\n                    {category}\r\n                  </p>\r\n                ))}\r\n                {directory.features?.length > 0 && (\r\n                  <>\r\n                    <p>Features</p>\r\n                    {directory.features?.map((feature, index) => (\r\n                      <p key={index}>\r\n                        <FaCheckCircle className=\"text-primary mx-2\" size={18} />\r\n                        {feature}\r\n                      </p>\r\n                    ))}\r\n                  </>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Container className=\"py-2\">\r\n            <Row className=\"pt-4\">\r\n              <Col md=\"6\" sm=\"12\">\r\n                <div>\r\n                  <h3>Product Details</h3>\r\n                  <p>\r\n                    <strong>{directory.storeName}</strong> offers you the following products:\r\n                  </p>\r\n                  {directory.products?.length === 0 && <p>No products available at this moment.</p>}\r\n                  <ul>\r\n                    {directory.products?.map((product, index) => (\r\n                      <li key={index}>{product}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n                <div className=\"pt-3\">\r\n                  <h3>Service Details</h3>\r\n                  <p>\r\n                    <strong>{directory.storeName}</strong> offers you the following services:\r\n                  </p>\r\n                  {directory.services?.length === 0 && <p>No services available at this moment.</p>}\r\n                  <ul>\r\n                    {directory.services?.map((service, index) => (\r\n                      <li key={index}>{service}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <div className=\"dir-inquiry-form p-3\">\r\n                  <div>\r\n                    <h3>Send an inquiry to {directory.storeName}</h3>\r\n                  </div>\r\n                  <Formik\r\n                    initialValues={dirInqInitialValues}\r\n                    validationSchema={dirInqValidationSchema}\r\n                    onSubmit={(values) => {\r\n                      const data = { ...values, directory: directory._id };\r\n                      dispatch(addInquiry(data));\r\n                    }}\r\n                  >\r\n                    {({ handleSubmit }) => (\r\n                      <Form onSubmit={handleSubmit}>\r\n                        <fieldset disabled={success}>\r\n                          <TextField name=\"name\" label=\"Name*\" placeholder=\"Enter your name here\" />\r\n                          <TextField name=\"number\" label=\"Phone Number*\" placeholder=\"9876543210\" />\r\n                          <TextField name=\"email\" label=\"Email\" placeholder=\"email@example.com\" />\r\n                          <TextField\r\n                            name=\"message\"\r\n                            label=\"Your message*\"\r\n                            placeholder=\"Enter your detailed message here\"\r\n                            as=\"textarea\"\r\n                            rows={5}\r\n                          />\r\n                        </fieldset>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          size=\"lg\"\r\n                          variant={success ? \"success\" : \"primary\"}\r\n                          disabled={inquiryLoading || success}\r\n                        >\r\n                          {inquiryLoading ? \"Sending\" : success ? \"Sent\" : \"Send\"}\r\n                        </Button>\r\n                      </Form>\r\n                    )}\r\n                  </Formik>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            {products.length > 0 && (\r\n              <section className=\"dir-products py-4\">\r\n                <h3>Products showcase</h3>\r\n                <Swiper\r\n                  slidesPerView={1}\r\n                  breakpoints={{\r\n                    576: {\r\n                      slidesPerView: 2,\r\n                    },\r\n                    992: {\r\n                      slidesPerView: 3,\r\n                    },\r\n                  }}\r\n                  modules={[Pagination]}\r\n                  pagination={{ clickable: true, dynamicBullets: true }}\r\n                  className=\"dir-products-swiper\"\r\n                >\r\n                  {products.map((product, index) => (\r\n                    <SwiperSlide key={index}>\r\n                      <Product product={product} />\r\n                    </SwiperSlide>\r\n                  ))}\r\n                </Swiper>\r\n              </section>\r\n            )}\r\n            {services.length > 0 && (\r\n              <section className=\"dir-services py-4\">\r\n                <h3>Services showcase</h3>\r\n                <Swiper\r\n                  slidesPerView={1}\r\n                  breakpoints={{\r\n                    576: {\r\n                      slidesPerView: 2,\r\n                    },\r\n                    992: {\r\n                      slidesPerView: 3,\r\n                    },\r\n                  }}\r\n                  modules={[Pagination]}\r\n                  pagination={{ clickable: true, dynamicBullets: true }}\r\n                  className=\"dir-services-swiper\"\r\n                >\r\n                  {services.map((service, index) => (\r\n                    <SwiperSlide key={index}>\r\n                      <Service service={service} key={index} />\r\n                    </SwiperSlide>\r\n                  ))}\r\n                </Swiper>\r\n              </section>\r\n            )}\r\n            <section id=\"dir-reviews\" className=\"dir-reviews pt-3\">\r\n              <Tabs defaultActiveKey=\"read\" className=\"mb-3\">\r\n                <Tab\r\n                  eventKey=\"write\"\r\n                  title={\r\n                    <>\r\n                      <FaPencilAlt className=\"mx-2\" />\r\n                      Write Review\r\n                    </>\r\n                  }\r\n                >\r\n                  {isAuthenticated ? (\r\n                    existingReview ? (\r\n                      <div>\r\n                        <p>Your review on {directory.storeName}</p>\r\n                        <Review review={existingReview} />\r\n                        <Button\r\n                          variant=\"danger\"\r\n                          size=\"sm\"\r\n                          onClick={() => dispatch(removeReview(match.params.username))}\r\n                        >\r\n                          Delete Review\r\n                        </Button>\r\n                      </div>\r\n                    ) : (\r\n                      <Formik\r\n                        initialValues={dirRevInitialValues}\r\n                        validationSchema={dirRevValidationSchema}\r\n                        onSubmit={(values) =>\r\n                          dispatch(reviewDirectory(values, match.params.username))\r\n                        }\r\n                      >\r\n                        {({ handleSubmit }) => (\r\n                          <Form>\r\n                            <TextField\r\n                              name=\"subject\"\r\n                              label=\"Subject\"\r\n                              placeholder=\"Enter review subject here\"\r\n                            />\r\n                            <TextField\r\n                              name=\"comment\"\r\n                              label=\"Comment\"\r\n                              as=\"textarea\"\r\n                              rows={3}\r\n                              placeholder=\"Enter review comment here\"\r\n                            />\r\n                            <SelectField name=\"rating\" label=\"Rating\" options={[1, 2, 3, 4, 5]} />\r\n\r\n                            <div className=\"text-center\">\r\n                              <Button\r\n                                variant=\"primary\"\r\n                                type=\"submit\"\r\n                                onClick={handleSubmit}\r\n                                className=\"w-100\"\r\n                              >\r\n                                Post review\r\n                              </Button>\r\n                              <Form.Text>\r\n                                Your review will be posted publicly as {user.name}\r\n                              </Form.Text>\r\n                            </div>\r\n                          </Form>\r\n                        )}\r\n                      </Formik>\r\n                    )\r\n                  ) : (\r\n                    <div className=\"px-1\">\r\n                      <p className=\"text-danger mb-0\">\r\n                        <FaExclamationTriangle /> You need to be logged in to write a review!\r\n                      </p>\r\n                      <Link to=\"/register\">Sign up here</Link>\r\n                      <br />\r\n                      <Link to=\"/login\">Already have an account? Login here</Link>\r\n                    </div>\r\n                  )}\r\n                </Tab>\r\n                <Tab\r\n                  eventKey=\"read\"\r\n                  title={\r\n                    <>\r\n                      <FaBookOpen className=\"mx-2\" />\r\n                      Read Reviews\r\n                    </>\r\n                  }\r\n                >\r\n                  <>\r\n                    <ReviewGraph\r\n                      ratings={directory.rating}\r\n                      average={directory.averageRating}\r\n                      total={directory.reviews?.length}\r\n                    />\r\n                    {directory.reviews?.map((review, index) => (\r\n                      <Review key={index} review={review} />\r\n                    ))}\r\n                  </>\r\n                </Tab>\r\n              </Tabs>\r\n            </section>\r\n            <section className=\"dir-faq pt-4\">\r\n              <h3>Frequently asked questions</h3>\r\n              <Accordion defaultActiveKey=\"0\">\r\n                <Accordion.Item eventKey=\"0\">\r\n                  <Accordion.Header>What are the timings of this store?</Accordion.Header>\r\n                  <Accordion.Body>\r\n                    {directory.timings?.map((timing, index) => {\r\n                      let message = \"\";\r\n                      if (timing.from === \"00:00\" && timing.to === \"00:00\")\r\n                        message = \"All Day (24 hours)\";\r\n                      else if (timing.from === \"\" && timing.to === \"\") message = \"Closed\";\r\n                      else {\r\n                        const from = tConvert(timing.from);\r\n                        const to = tConvert(timing.to);\r\n                        message = `${from} to ${to}`;\r\n                      }\r\n                      return (\r\n                        <p key={index}>\r\n                          {days[index]}: {message}\r\n                        </p>\r\n                      );\r\n                    })}\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n                {directory.faq?.map((qa, index) => (\r\n                  <Accordion.Item eventKey={index} key={index}>\r\n                    <Accordion.Header>{qa.question}</Accordion.Header>\r\n                    <Accordion.Body>{qa.answer}</Accordion.Body>\r\n                  </Accordion.Item>\r\n                ))}\r\n              </Accordion>\r\n            </section>\r\n            <section className=\"dir-business-info py-3\">\r\n              <h1>Business Information</h1>\r\n              <div>\r\n                {parse(directory.description || \"<p>No information available at the moment</p>\")}\r\n              </div>\r\n            </section>\r\n          </Container>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DirectoryProfileScreen;\r\n","import * as actionTypes from \"../constants/inquiry\";\r\nimport axios from \"axios\";\r\n\r\n// POST /api/inquiry/add\r\nexport const addInquiry = (inquiry) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.ADD_INQUIRY_REQUEST });\r\n    const { data } = await axios.post(\"/api/inquiry/add\", inquiry);\r\n    dispatch({ type: actionTypes.ADD_INQUIRY_SUCCESS, payload: data.inquiry });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.ADD_INQUIRY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/inquiry/own\r\nexport const getOwnInquiries = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_OWN_INQUIRIES_REQUEST });\r\n    const { data } = await axios.get(\"/api/inquiry/own\");\r\n    dispatch({ type: actionTypes.GET_OWN_INQUIRIES_SUCCESS, payload: data.inquiries });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_OWN_INQUIRIES_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/inquiry/own/:id\r\nexport const getOwnInquiry = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_OWN_INQUIRY_REQUEST });\r\n    const { data } = await axios.get(`/api/inquiry/own/${id}`);\r\n    dispatch({ type: actionTypes.GET_OWN_INQUIRY_SUCCESS, payload: data.inquiry });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_OWN_INQUIRY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/inquiry/\r\nexport const getInquiries = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_INQUIRIES_REQUEST });\r\n    const { data } = await axios.get(\"/api/inquiry/\");\r\n    dispatch({ type: actionTypes.GET_INQUIRIES_SUCCESS, payload: data.inquiries });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_INQUIRIES_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/inquiry/:id\r\nexport const getInquiry = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_INQUIRY_REQUEST });\r\n    const { data } = await axios.get(`/api/inquiry/${id}`);\r\n    dispatch({ type: actionTypes.GET_INQUIRY_SUCCESS, payload: data.inquiry });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_INQUIRY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/inquiry/edit/:id\r\nexport const editInquiry = (inquiry, id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.EDIT_INQUIRY_REQUEST });\r\n    const { data } = await axios.put(`/api/inquiry/edit/${id}`, inquiry);\r\n    dispatch({ type: actionTypes.EDIT_INQUIRY_SUCCESS, payload: data.inquiry });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.EDIT_INQUIRY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// DEL /api/inquiry/remove/:id\r\nexport const removeInquiry = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.REMOVE_INQUIRY_REQUEST });\r\n    const { data } = await axios.delete(`/api/inquiry/remove/${id}`);\r\n    dispatch({ type: actionTypes.REMOVE_INQUIRY_SUCCESS, payload: data.inquiry });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.REMOVE_INQUIRY_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.CLEAR_ERRORS });\r\n};\r\n","// Dependencies\r\nimport { useEffect } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Container, Alert } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport { TextField } from \"components/InputFields.jsx\";\r\n\r\n// Actions\r\nimport { clearErrors, login } from \"redux/actions/user\";\r\n\r\nconst LoginScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  // Don't let a user with token access this screen\r\n  useEffect(() => {\r\n    if (user.isAuthenticated) history.push(\"/\");\r\n    dispatch(clearErrors());\r\n  }, [dispatch, history, user.isAuthenticated]);\r\n\r\n  // Initial values and validation schema\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values) => dispatch(login(values.email, values.password))}\r\n    >\r\n      {({ handleSubmit }) => (\r\n        <Container className=\"my-2 py-4\" style={{ maxWidth: \"500px\" }}>\r\n          <h2 className=\"py-2 text-center\">Welcome to Petohub</h2>\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <TextField label=\"Email\" name=\"email\" type=\"email\" placeholder=\"example@gmail.com\" />\r\n            <TextField\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Enter your password here\"\r\n            />\r\n            <Form.Group className=\"pb-1\">\r\n              <Form.Text>\r\n                Don't have an account?{\" \"}\r\n                <Link to=\"/register\" className=\"text-primary\">\r\n                  Sign up here\r\n                </Link>\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"pb-2\">\r\n              <Form.Text>\r\n                Forgot password?{\" \"}\r\n                <Link to=\"/forgotpassword\" className=\"text-primary\">\r\n                  Reset here\r\n                </Link>\r\n              </Form.Text>\r\n            </Form.Group>\r\n            {user.error && (\r\n              <Alert className=\"my-3\" variant=\"danger\">\r\n                {user.error}\r\n              </Alert>\r\n            )}\r\n            <Button style={{ width: \"100%\" }} disabled={user.loading} type=\"submit\">\r\n              {user.loading ? \"Logging In\" : \"Login\"}\r\n            </Button>\r\n          </Form>\r\n        </Container>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","// Dependencies\r\nimport { Formik } from \"formik\";\r\nimport { Form, Button, Container, Alert } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\n// Componenets\r\nimport { CheckBox, TextField } from \"components/InputFields.jsx\";\r\n\r\n// Helpers\r\nimport { customerRegistration as validationSchema } from \"helpers/validationSchemas\";\r\nimport { customerRegistration as initialValues } from \"helpers/initialValues\";\r\n\r\n// Actions\r\nimport { register, clearErrors } from \"redux/actions/user\";\r\n\r\nconst RegisterScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  // Don't let a user with token access this screen\r\n  useEffect(() => {\r\n    if (user.isAuthenticated) history.push(\"/\");\r\n    dispatch(clearErrors());\r\n  }, [dispatch, history, user.isAuthenticated]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values) => dispatch(register(values))}\r\n    >\r\n      {({ handleSubmit }) => (\r\n        <Container className=\"my-2 py-4\" style={{ maxWidth: \"500px\" }}>\r\n          <h2 className=\"py-2 text-center\">Sign Up With Petohub</h2>\r\n          <Form noValidate onSubmit={handleSubmit} className=\"pb-3\">\r\n            <TextField label=\"Name\" name=\"name\" type=\"text\" placeholder=\"Full Name\" />\r\n            <TextField label=\"Email\" name=\"email\" type=\"email\" placeholder=\"example@company.com\" />\r\n            <TextField\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Minimum 8 characters\"\r\n            />\r\n            <TextField\r\n              label=\"Re-enter Password\"\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              placeholder=\"Confirm your password\"\r\n            />\r\n            <CheckBox label=\"I agree to the terms and conditions and privacy policy\" name=\"terms\" />\r\n            <Form.Group className=\"pb-2\">\r\n              <Form.Text>\r\n                Already have an account?{\" \"}\r\n                <Link to=\"/login\" className=\"text-primary\">\r\n                  Login here\r\n                </Link>\r\n              </Form.Text>\r\n            </Form.Group>\r\n            {user.error && (\r\n              <Alert className=\"my-3\" variant=\"danger\">\r\n                {user.error}\r\n              </Alert>\r\n            )}\r\n            {user.emailSent && (\r\n              <Alert className=\"my-3\" variant=\"success\">\r\n                {user.message}\r\n              </Alert>\r\n            )}\r\n            <Button style={{ width: \"100%\" }} disabled={user.loading} type=\"submit\">\r\n              {user.loading ? \"Creating your account\" : \"Create an Account\"}\r\n            </Button>\r\n          </Form>\r\n        </Container>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","// Dependencies\r\nimport { Formik } from \"formik\";\r\nimport { Form, Container, Alert, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// Componenets\r\nimport {\r\n  CheckBox,\r\n  TextField,\r\n  FormButton,\r\n  CheckBoxOptions,\r\n  SelectField,\r\n} from \"components/InputFields.jsx\";\r\n\r\n// Config\r\nimport { states } from \"config.json\";\r\n\r\n// Helpers\r\nimport { customerRegistration as firstValidation } from \"helpers/validationSchemas\";\r\nimport { directoryRegistration as secondValidation } from \"helpers/validationSchemas\";\r\nimport { clientRegistration as initialValues } from \"helpers/initialValues\";\r\n\r\n// Actions\r\nimport { register, clearErrors } from \"redux/actions/user\";\r\n\r\nconst RegisterMemberScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  // Keeping track of form data and step\r\n  const [data, setData] = useState(initialValues);\r\n  const [step, setStep] = useState(0);\r\n\r\n  // Don't let a user with token access this screen\r\n  useEffect(() => {\r\n    if (user.isAuthenticated) history.push(\"/\");\r\n    dispatch(clearErrors());\r\n  }, [dispatch, history, user.isAuthenticated]);\r\n\r\n  // Final submit function\r\n  const submit = (data) => {\r\n    dispatch(register(data));\r\n  };\r\n\r\n  // Step helper functions\r\n  const nextStep = (newData, final = false) => {\r\n    setData((prev) => ({ ...prev, ...newData }));\r\n    if (final) return submit(newData);\r\n    setStep((step) => step + 1);\r\n  };\r\n  const prevStep = (newData) => {\r\n    setData((prev) => ({ ...prev, ...newData }));\r\n    setStep((step) => step - 1);\r\n  };\r\n\r\n  // Components for each step\r\n  const steps = [\r\n    <FirstStep next={nextStep} data={data} />,\r\n    <SecondStep next={nextStep} prev={prevStep} data={data} />,\r\n    <ThirdStep next={nextStep} prev={prevStep} data={data} />,\r\n  ];\r\n  return (\r\n    <Container style={{ maxWidth: \"500px\" }} className=\"my-2 py-4\">\r\n      <h2 className=\"my-2 text-center\">Become a member with Petohub</h2>\r\n      <div>{steps[step]}</div>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// First Step\r\nexport const FirstStep = ({ data, next }) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(clearErrors());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={data}\r\n      validationSchema={firstValidation}\r\n      onSubmit={(values) => next(values)}\r\n    >\r\n      {({ handleSubmit }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <TextField label=\"Name\" name=\"name\" type=\"text\" placeholder=\"Full Name\" />\r\n          <TextField label=\"Email\" name=\"email\" type=\"email\" placeholder=\"example@company.com\" />\r\n          <TextField\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Minimum 8 characters\"\r\n          />\r\n          <TextField\r\n            label=\"Re-enter Password\"\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            placeholder=\"Confirm your password\"\r\n          />\r\n          <CheckBox label=\"I agree to the terms and conditions and privacy policy\" name=\"terms\" />\r\n          <FormButton label=\"Proceed\" type=\"submit\" />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n// Second Step\r\nconst SecondStep = ({ data, prev, next }) => {\r\n  const dispatch = useDispatch();\r\n  const { directoryCategories } = useSelector((state) => state.category);\r\n\r\n  useEffect(() => {\r\n    dispatch(clearErrors());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={data}\r\n      validationSchema={secondValidation}\r\n      onSubmit={(values) => next(values)}\r\n    >\r\n      {({ values, handleSubmit }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <TextField\r\n            label=\"Business/Store name\"\r\n            name=\"storeName\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your business name here\"\r\n          />\r\n          <CheckBoxOptions\r\n            label=\"Category\"\r\n            options={directoryCategories?.map((category) => category.name)}\r\n            name=\"category\"\r\n          />\r\n          <TextField label=\"Phone Number\" name=\"number\" type=\"number\" placeholder=\"9876543210\" />\r\n          <TextField\r\n            label=\"Address\"\r\n            name=\"address\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your business address here\"\r\n          />\r\n          <Row>\r\n            <Col sm={12} md={4}>\r\n              <TextField label=\"City\" name=\"city\" type=\"text\" placeholder=\"City\" />\r\n            </Col>\r\n            <Col sm={12} md={4}>\r\n              <SelectField label=\"State\" name=\"state\" options={states} defaultValue=\"Delhi\" />\r\n            </Col>\r\n            <Col sm={12} md={4}>\r\n              <TextField label=\"Pincode\" name=\"pincode\" type=\"number\" placeholder=\"Zip\" />\r\n            </Col>\r\n          </Row>\r\n          <FormButton label=\"Back\" onClick={() => prev(values)} />\r\n          <FormButton label=\"Proceed\" type=\"submit\" />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n// Third Step\r\nconst ThirdStep = ({ data, prev, next }) => {\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(clearErrors());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={data}\r\n      validationSchema={firstValidation.concat(secondValidation)}\r\n      onSubmit={(values) => next(values, true)}\r\n    >\r\n      {({ values, handleSubmit }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <h3 className=\"text-center\">Confirm your details</h3>\r\n          <fieldset disabled>\r\n            <Row>\r\n              <Col sm={12} md={6}>\r\n                <TextField label=\"Name\" name=\"name\" />\r\n              </Col>\r\n              <Col sm={12} md={6}>\r\n                <TextField label=\"Email\" name=\"email\" />\r\n              </Col>\r\n            </Row>\r\n            <TextField label=\"Business Name\" name=\"storeName\" />\r\n            <Row>\r\n              <Col sm={12} md={6}>\r\n                <TextField label=\"Phone Number\" name=\"number\" />\r\n              </Col>\r\n              <Col sm={12} md={6}>\r\n                <TextField label=\"Category\" name=\"category\" value={values.category.join(\", \")} />\r\n              </Col>\r\n            </Row>\r\n            <TextField label=\"Address\" name=\"address\" />\r\n            <Row>\r\n              <Col sm={12} md={4}>\r\n                <TextField label=\"City\" name=\"city\" />\r\n              </Col>\r\n              <Col sm={12} md={4}>\r\n                <TextField label=\"State\" name=\"state\" />\r\n              </Col>\r\n              <Col sm={12} md={4}>\r\n                <TextField label=\"Pincode\" name=\"pincode\" />\r\n              </Col>\r\n            </Row>\r\n          </fieldset>\r\n          {user.error && (\r\n            <Alert className=\"my-3\" variant=\"danger\">\r\n              {user.error}\r\n            </Alert>\r\n          )}\r\n          {user.emailSent && (\r\n            <Alert className=\"my-3\" variant=\"success\">\r\n              {user.message}\r\n            </Alert>\r\n          )}\r\n          <FormButton label=\"Back\" onClick={() => prev(values)} />\r\n          <Button style={{ width: \"100%\" }} disabled={user.loading} type=\"submit\">\r\n            {user.loading ? \"Creating your account\" : \"Create an Account\"}\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default RegisterMemberScreen;\r\n","// Dependencies\r\nimport { useEffect } from \"react\";\r\nimport { Nav, Container } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Actions\r\nimport { verify } from \"redux/actions/user\";\r\n\r\nconst VerifyAccountScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  useEffect(() => dispatch(verify(match.params.verifyToken)), [dispatch, match.params.verifyToken]);\r\n\r\n  return (\r\n    <Container\r\n      className=\"text-center\"\r\n      style={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      {!user.loading &&\r\n        (user.isVerified ? (\r\n          <h1>Your account has been verified successfully.</h1>\r\n        ) : (\r\n          <h1>Your account verification token is invalid.</h1>\r\n        ))}\r\n      <LinkContainer exact to=\"/\">\r\n        <Nav.Link>Go back to the home page</Nav.Link>\r\n      </LinkContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VerifyAccountScreen;\r\n","// Dependencies\r\nimport { useEffect } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Container, Alert } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport { TextField } from \"components/InputFields.jsx\";\r\n\r\n// Actions\r\nimport { clearErrors, forgotPassword } from \"redux/actions/user\";\r\n\r\nconst ForgotPasswordScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const { error, emailSent, loading } = useSelector((state) => state.forgotPassword);\r\n\r\n  // Don't let a user with token access this screen\r\n  useEffect(() => {\r\n    if (user.isAuthenticated) history.push(\"/\");\r\n    dispatch(clearErrors());\r\n  }, [dispatch, history, user.isAuthenticated]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\" }}\r\n      validationSchema={Yup.object({\r\n        email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n      })}\r\n      onSubmit={({ email }) => dispatch(forgotPassword(email))}\r\n    >\r\n      {({ values, handleSubmit }) => (\r\n        <Container className=\"py-4\" style={{ maxWidth: \"500px\" }}>\r\n          <h2 className=\"py-2 text-center\">Forgot Password</h2>\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <TextField label=\"Email\" name=\"email\" type=\"email\" placeholder=\"example@gmail.com\" />\r\n            {error && (\r\n              <Alert className=\"my-3\" variant=\"danger\">\r\n                {error}\r\n              </Alert>\r\n            )}\r\n            {emailSent && (\r\n              <Alert className=\"my-3\" variant=\"success\">\r\n                Email with link to reset password has been sent successfully to{\" \"}\r\n                <b>{values.email}</b>\r\n              </Alert>\r\n            )}\r\n            <Button style={{ width: \"100%\" }} disabled={loading} type=\"submit\">\r\n              {loading ? \"Sending...\" : \"Send Reset Link\"}\r\n            </Button>\r\n          </Form>\r\n        </Container>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordScreen;\r\n","// Dependencies\r\nimport { useEffect } from \"react\";\r\nimport { Form, Button, Container, Alert } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Components\r\nimport { TextField } from \"components/InputFields.jsx\";\r\n\r\n// Actions\r\nimport { clearErrors, resetPassword } from \"redux/actions/user\";\r\n\r\nconst ResetPasswordScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const { error, success, loading } = useSelector((state) => state.forgotPassword);\r\n\r\n  useEffect(() => dispatch(clearErrors()), [dispatch]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      }}\r\n      validationSchema={Yup.object({\r\n        password: Yup.string()\r\n          .min(8, \"Password must be at least 8 charaters\")\r\n          .required(\"Password is required\"),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n          .required(\"Re-enter your password\"),\r\n      })}\r\n      onSubmit={({ password }) => dispatch(resetPassword(match.params.resetToken, password))}\r\n    >\r\n      {({ handleSubmit }) => (\r\n        <Container style={{ maxWidth: \"500px\" }}>\r\n          <h2 className=\"py-2\">Reset Password</h2>\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <TextField\r\n              label=\"New Password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Minimum 8 characters\"\r\n            />\r\n            <TextField\r\n              label=\"Confirm New Password\"\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              placeholder=\"Re-enter your new password\"\r\n            />\r\n            {error && (\r\n              <Alert className=\"my-3\" variant=\"danger\">\r\n                {error}\r\n              </Alert>\r\n            )}\r\n            {success && (\r\n              <Alert className=\"my-3\" variant=\"success\">\r\n                Your password has been reset successfully.\r\n                <br />\r\n                <Link to=\"/login\" className=\"text-primary\">\r\n                  Go to the Login Page\r\n                </Link>\r\n              </Alert>\r\n            )}\r\n            <Button style={{ width: \"100%\" }} disabled={loading || success} type=\"submit\">\r\n              Reset Password\r\n            </Button>\r\n          </Form>\r\n        </Container>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordScreen;\r\n","import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./AccountScreen.css\";\r\nimport {\r\n  FaBox,\r\n  FaBoxes,\r\n  FaCalendarCheck,\r\n  FaHandsHelping,\r\n  FaShoppingCart,\r\n  FaUserCircle,\r\n} from \"react-icons/fa\";\r\n\r\nconst AccountScreen = () => {\r\n  const { user } = useSelector((state) => state.user);\r\n  return (\r\n    <Container className=\"pt-2\">\r\n      <h2 className=\"my-2\">Your Account</h2>\r\n      <Row className=\"mt-4 profile-screen-container\">\r\n        {user.role === \"Client\" && (\r\n          <>\r\n            <Col xs={12} md={6}>\r\n              <LinkContainer to=\"/account/products\">\r\n                <div className=\"profile-section\">\r\n                  <div>\r\n                    <FaBoxes />\r\n                  </div>\r\n                  <div>\r\n                    <h2>YOUR PRODUCTS</h2>\r\n                    <p>Add, edit or remove your products.</p>\r\n                  </div>\r\n                </div>\r\n              </LinkContainer>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n              <LinkContainer to=\"/account/services\">\r\n                <div className=\"profile-section\">\r\n                  <div>\r\n                    <FaHandsHelping />\r\n                  </div>\r\n                  <div>\r\n                    <h2>YOUR SERVICES</h2>\r\n                    <p>Add, edit or remove your services.</p>\r\n                  </div>\r\n                </div>\r\n              </LinkContainer>\r\n            </Col>\r\n          </>\r\n        )}\r\n        <Col xs={12} md={6}>\r\n          <LinkContainer to=\"/account/orders\">\r\n            <div className=\"profile-section\">\r\n              <div>\r\n                <FaBox />\r\n              </div>\r\n              <div>\r\n                <h2>YOUR ORDERS</h2>\r\n                <p>Track, return or view your orders.</p>\r\n              </div>\r\n            </div>\r\n          </LinkContainer>\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <LinkContainer to=\"/account/appointments\">\r\n            <div className=\"profile-section\">\r\n              <div>\r\n                <FaCalendarCheck />\r\n              </div>\r\n              <div>\r\n                <h2>YOUR APPOINTMENTS</h2>\r\n                <p>View or cancel your appointments.</p>\r\n              </div>\r\n            </div>\r\n          </LinkContainer>\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <LinkContainer to=\"/account/profile\">\r\n            <div className=\"profile-section\">\r\n              <div>\r\n                <FaUserCircle />\r\n              </div>\r\n              <div>\r\n                <h2>YOUR PROFILE</h2>\r\n                <p>View or edit your account details.</p>\r\n              </div>\r\n            </div>\r\n          </LinkContainer>\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <LinkContainer to=\"/account/cart\">\r\n            <div className=\"profile-section\">\r\n              <div>\r\n                <FaShoppingCart />\r\n              </div>\r\n              <div>\r\n                <h2>YOUR SHOPPING CART</h2>\r\n                <p>Add or remove items from your shopping cart.</p>\r\n              </div>\r\n            </div>\r\n          </LinkContainer>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AccountScreen;\r\n","import { Form, Row, Col } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProfileDetails = () => {\r\n  const { user } = useSelector((state) => state.user);\r\n  const directory = user.directory;\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col md={6} sm={12} className=\"d-flex align-items-center justify-content-center\">\r\n          <div className=\"mb-3 text-center profile-image\">\r\n            <img\r\n              src={user.profileImage ? user.profileImage : \"/assets/placeholders/portrait.png\"}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col md={6} sm={12}>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Your Name</Form.Label>\r\n            <Form.Control placeholder={user.name} disabled />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Your Email</Form.Label>\r\n            <Form.Control placeholder={user.email} disabled />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      {user.role === \"Client\" && (\r\n        <>\r\n          <Row>\r\n            <Col sm={12} md={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Business/Store Name</Form.Label>\r\n                <Form.Control placeholder={directory.storeName} disabled />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={12} md={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control placeholder={directory.category.join(\", \")} disabled />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={12} md={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Phone Number</Form.Label>\r\n                <Form.Control placeholder={directory.number} disabled />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={12} md={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control placeholder={directory.address} disabled />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={12} md={4}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>State</Form.Label>\r\n                <Form.Control placeholder={directory.state} disabled />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={12} md={4}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control placeholder={directory.city} disabled />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={12} md={4}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Pincode</Form.Label>\r\n                <Form.Control placeholder={directory.pincode} disabled />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileDetails;\r\n","// Dependencies\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Alert, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport { TextField } from \"components/InputFields\";\r\n\r\n// Actions\r\nimport { updatePassword } from \"redux/actions/user\";\r\n\r\nconst UpdatePassword = () => {\r\n  const dispatch = useDispatch();\r\n  const profile = useSelector((state) => state.profile);\r\n\r\n  const passwordChangeData = {\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  };\r\n  const passwordChangeValidate = Yup.object({\r\n    oldPassword: Yup.string().required(\"Please enter your current password\"),\r\n    newPassword: Yup.string()\r\n      .min(8, \"Password must be at least 8 charaters\")\r\n      .required(\"Password is required\"),\r\n    confirmNewPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"newPassword\"), null], \"Passwords must match\")\r\n      .required(\"Re-enter your password\"),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={passwordChangeData}\r\n      validationSchema={passwordChangeValidate}\r\n      onSubmit={(values) => dispatch(updatePassword(values))}\r\n    >\r\n      {({ handleSubmit }) => (\r\n        <Form noValidate onSubmit={handleSubmit} className=\"my-2\">\r\n          <TextField\r\n            label=\"Current Password\"\r\n            name=\"oldPassword\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your current password\"\r\n          />\r\n          <TextField\r\n            label=\"New Password\"\r\n            name=\"newPassword\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your new password\"\r\n          />\r\n          <TextField\r\n            label=\"Re-enter New Password\"\r\n            name=\"confirmNewPassword\"\r\n            type=\"password\"\r\n            placeholder=\"Confirm your new password\"\r\n          />\r\n          {profile.error && (\r\n            <Alert className=\"my-3\" variant=\"danger\">\r\n              {profile.error}\r\n            </Alert>\r\n          )}\r\n          {profile.isUpdatedPassword && (\r\n            <Alert className=\"my-3\" variant=\"success\">\r\n              Your password has been changed successfully\r\n            </Alert>\r\n          )}\r\n          <Button style={{ width: \"100%\" }} type=\"submit\">\r\n            Update Password\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UpdatePassword;\r\n","// Dependencies\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Alert, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport { TextField } from \"components/InputFields\";\r\n\r\n// Actions\r\nimport { updateProfile } from \"redux/actions/user\";\r\n\r\nconst UpdateCustomerProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.user);\r\n  const profile = useSelector((state) => state.profile);\r\n\r\n  const customerProfileChangeData = { name: user.name, profileImage: null };\r\n  const customerProfileChangeValidate = Yup.object({\r\n    name: Yup.string()\r\n      .min(3, \"Must be atleast 3 characters\")\r\n      .max(32, \"Must be 32 characters or less\")\r\n      .required(\"Please enter your new name\"),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={customerProfileChangeData}\r\n      validationSchema={customerProfileChangeValidate}\r\n      onSubmit={(values) => {\r\n        // Updating only those fields that have been modified\r\n        const data = {};\r\n        for (const value in values) {\r\n          if (values[value] !== user[value]) data[value] = values[value];\r\n        }\r\n\r\n        // Converting to FormData\r\n        const fd = new FormData();\r\n        for (const key in data) fd.append(key, data[key]);\r\n        dispatch(updateProfile(fd));\r\n      }}\r\n    >\r\n      {({ values, setFieldValue, errors, handleSubmit }) => (\r\n        <Form noValidate onSubmit={handleSubmit} className=\"my-2\">\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Profile Image</Form.Label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"profileImage\"\r\n              className=\"form-control\"\r\n              values={values.profileImage}\r\n              onChange={(e) => setFieldValue(\"profileImage\", e.currentTarget.files[0])}\r\n              isInvalid={!!errors.profileImage}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\" tooltip>\r\n              {errors.profileImage}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <TextField label=\"Name\" name=\"name\" type=\"text\" placeholder=\"Enter your new name\" />\r\n          {profile.error && (\r\n            <Alert className=\"my-3\" variant=\"danger\">\r\n              {profile.error}\r\n            </Alert>\r\n          )}\r\n          {profile.isUpdatedProfile && (\r\n            <Alert className=\"my-3\" variant=\"success\">\r\n              Your profile details has been updated successfully\r\n            </Alert>\r\n          )}\r\n          <Button style={{ width: \"100%\" }} type=\"submit\">\r\n            Update Details\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UpdateCustomerProfile;\r\n","import { arrayToBinary } from \"helpers/daysHandler\";\r\n\r\nexport const directoryAdditional = (values, directory) => {\r\n  // Converting to FormData and updating only modified fields\r\n  const fd = new FormData();\r\n\r\n  // Plain text fields\r\n  if (values.description !== directory.description) fd.append(\"description\", values.description);\r\n  if (values.tagline !== directory.tagline) fd.append(\"tagline\", values.tagline);\r\n  if (values.website !== directory.website) fd.append(\"website\", values.website);\r\n  if (values.username !== directory.username) fd.append(\"username\", values.username);\r\n\r\n  // Stringifying objects\r\n  const detailsJSON = JSON.stringify(values.details);\r\n  if (detailsJSON !== JSON.stringify(directory.details)) fd.append(\"details\", detailsJSON);\r\n  const timingsJSON = JSON.stringify(values.timings);\r\n  if (timingsJSON !== JSON.stringify(directory.timings)) fd.append(\"timings\", timingsJSON);\r\n  const faqJSON = JSON.stringify(values.faq);\r\n  if (faqJSON !== JSON.stringify(directory.faq)) fd.append(\"faq\", faqJSON);\r\n  const locationJSON = JSON.stringify(values.location);\r\n  if (locationJSON !== JSON.stringify(directory.location)) fd.append(\"location\", locationJSON);\r\n\r\n  // Stringifying arrays\r\n  if (values.features.toString() !== directory.features.toString())\r\n    fd.append(\"features\", values.features);\r\n  if (values.gallery.toString() !== directory.gallery.toString())\r\n    fd.append(\"gallery\", values.gallery);\r\n  if (values.products.toString() !== directory.products.toString())\r\n    fd.append(\"products\", values.products);\r\n  if (values.services.toString() !== directory.services.toString())\r\n    fd.append(\"services\", values.services);\r\n\r\n  // Images\r\n  const filesLength = values.directoryImages.length;\r\n  if (filesLength > 0) {\r\n    for (let i = 0; i < filesLength; i++) fd.append(\"directoryImages\", values.directoryImages[i]);\r\n  }\r\n  return fd;\r\n};\r\n\r\nexport const directoryUpdate = (values, directory) => {\r\n  const fd = directoryAdditional(values, directory);\r\n  if (values.storeName !== directory.storeName) fd.append(\"storeName\", values.storeName);\r\n  if (values.address !== directory.address) fd.append(\"address\", values.address);\r\n  if (values.state !== directory.state) fd.append(\"state\", values.state);\r\n  if (values.city !== directory.city) fd.append(\"city\", values.city);\r\n  if (values.pincode !== directory.pincode) fd.append(\"pincode\", values.pincode);\r\n  if (values.number !== directory.number) fd.append(\"number\", values.number);\r\n  if (values.user !== (directory.user?._id || \"\")) fd.append(\"user\", values.user);\r\n  if (values.category.toString() !== directory.category.toString())\r\n    fd.append(\"category\", values.category);\r\n  return fd;\r\n};\r\n\r\nexport const clientUpdate = (values, user, directory) => {\r\n  // Updating only those fields that have been modified\r\n  const data = {};\r\n  for (const value in values) {\r\n    if (values[value] !== directory[value]) data[value] = values[value];\r\n  }\r\n  if (values.name !== user.name) data.name = values.name;\r\n\r\n  // Fixing category comparision\r\n  if (values.category.toString() === directory.category.toString()) delete data.category;\r\n\r\n  // Converting to FormData\r\n  const fd = new FormData();\r\n  for (const key in data) fd.append(key, data[key]);\r\n  return fd;\r\n};\r\n\r\nexport const newProduct = (values) => {\r\n  // Converting to FormData\r\n  const fd = new FormData();\r\n  for (const key in values) fd.append(key, values[key]);\r\n  fd.set(\"size\", JSON.stringify(values.size));\r\n  fd.set(\"ageRange\", JSON.stringify(values.ageRange));\r\n  fd.set(\"affiliateLinks\", JSON.stringify(values.affiliateLinks));\r\n  fd.delete(\"productImagesUpload\");\r\n\r\n  // Prioritizing links first\r\n  if (values.productImages.length > 0) return fd;\r\n\r\n  // Move productImagesUpload to productImages in form data\r\n  fd.delete(\"productImages\");\r\n  const filesLength = values.productImagesUpload.length;\r\n  if (filesLength > 0) {\r\n    for (let i = 0; i < filesLength; i++) fd.append(\"productImages\", values.productImagesUpload[i]);\r\n  }\r\n  return fd;\r\n};\r\n\r\nexport const updateProduct = (values, product) => {\r\n  // Converting to FormData and updating only modified fields\r\n  const fd = new FormData();\r\n\r\n  // Plain text fields\r\n  if (values.name !== product.name) fd.append(\"name\", values.name);\r\n  if (values.description !== product.description) fd.append(\"description\", values.description);\r\n  if (values.seller !== product.seller) fd.append(\"seller\", values.seller);\r\n  if (values.category !== product.category) fd.append(\"category\", values.category);\r\n  if (values.price !== product.price) fd.append(\"price\", values.price);\r\n  if (values.countInStock !== product.countInStock) fd.append(\"countInStock\", values.countInStock);\r\n  if (values.isVeg !== product.isVeg) fd.append(\"isVeg\", values.isVeg);\r\n  if (values.weight !== product.weight) fd.append(\"weight\", values.weight);\r\n  if (values.breedType !== product.breedType) fd.append(\"breedType\", values.breedType);\r\n  if (values.brand !== product.brand) fd.append(\"brand\", values.brand);\r\n\r\n  // Object fields\r\n  const sizeJSON = JSON.stringify(values.size);\r\n  if (sizeJSON !== JSON.stringify(product.size)) fd.append(\"size\", sizeJSON);\r\n  const ageRangeJSON = JSON.stringify(values.ageRange);\r\n  if (ageRangeJSON !== JSON.stringify(product.ageRange)) fd.append(\"ageRange\", ageRangeJSON);\r\n  const affiliateLinksJSON = JSON.stringify(values.affiliateLinks);\r\n  if (affiliateLinksJSON !== JSON.stringify(product.affiliateLinks))\r\n    fd.append(\"affiliateLinks\", affiliateLinksJSON);\r\n\r\n  // Array fields\r\n  if (values.petType.toString() !== product.petType.toString())\r\n    fd.append(\"petType\", values.petType);\r\n\r\n  // If image links are modified, update the links and ignore file uploads\r\n  if (values.productImages.toString() !== product.productImages.toString()) {\r\n    fd.append(\"productImages\", values.productImages);\r\n    return fd;\r\n  }\r\n\r\n  // If image links are not modified, add files to the formdata\r\n  const filesLength = values.productImagesUpload.length;\r\n  if (filesLength > 0) {\r\n    for (let i = 0; i < filesLength; i++) fd.append(\"productImages\", values.productImagesUpload[i]);\r\n  }\r\n  return fd;\r\n};\r\n\r\nexport const newService = (values) => {\r\n  // Converting to FormData\r\n  const fd = new FormData();\r\n  for (const key in values) if (values[key] !== \"\") fd.append(key, values[key]);\r\n  fd.set(\"timings\", JSON.stringify(values.timings));\r\n  fd.set(\"ageRange\", JSON.stringify(values.ageRange));\r\n  // Converting days to binary number\r\n  fd.set(\"days\", arrayToBinary(values.days));\r\n\r\n  // Images\r\n  const filesLength = values.serviceImages.length;\r\n  if (filesLength > 0) {\r\n    for (let i = 0; i < filesLength; i++) fd.set(\"serviceImages\", values.serviceImages[i]);\r\n  }\r\n  return fd;\r\n};\r\n\r\nexport const updateService = (values, service) => {\r\n  // Converting days to binary number\r\n  const daysBinary = arrayToBinary(values.days);\r\n\r\n  // Converting to FormData and updating only modified fields\r\n  const fd = new FormData();\r\n\r\n  // Plain text fields\r\n  if (values.name !== service.name) fd.append(\"name\", values.name);\r\n  if (values.description !== service.description) fd.append(\"description\", values.description);\r\n  if (values.seller !== service.seller) fd.append(\"seller\", values.seller);\r\n  if (values.category !== service.category) fd.append(\"category\", values.category);\r\n  if (values.price !== service.price) fd.append(\"price\", values.price);\r\n  if (values.address !== service.address) fd.append(\"address\", values.address);\r\n  if (values.nameOfIncharge !== service.nameOfIncharge)\r\n    fd.append(\"nameOfIncharge\", values.nameOfIncharge);\r\n  if (values.numberOfIncharge !== service.numberOfIncharge)\r\n    fd.append(\"numberOfIncharge\", values.numberOfIncharge);\r\n  if (values.breedType !== service.breedType) fd.append(\"breedType\", values.breedType);\r\n  if (daysBinary !== service.days) fd.append(\"days\", daysBinary);\r\n\r\n  // Object fields\r\n  const timingsJSON = JSON.stringify(values.timings);\r\n  if (timingsJSON !== JSON.stringify(service.timings)) fd.append(\"timings\", timingsJSON);\r\n  const ageRangeJSON = JSON.stringify(values.ageRange);\r\n  if (ageRangeJSON !== JSON.stringify(service.ageRange)) fd.append(\"ageRange\", ageRangeJSON);\r\n\r\n  // Array fields\r\n  if (values.petType.toString() !== service.petType.toString())\r\n    fd.append(\"petType\", values.petType);\r\n\r\n  // Images\r\n  const filesLength = values.serviceImages.length;\r\n  if (filesLength > 0) {\r\n    for (let i = 0; i < filesLength; i++) fd.append(\"serviceImages\", values.serviceImages[i]);\r\n  }\r\n  return fd;\r\n};\r\n","// Dependencies\r\nimport { Formik } from \"formik\";\r\nimport { Row, Col, Form, Alert, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Config\r\nimport { states } from \"config.json\";\r\n\r\n// Components\r\nimport { TextField, CheckBoxOptions, SelectField } from \"components/InputFields.jsx\";\r\n\r\n// Helpers\r\nimport { clientUpdate as initialValues } from \"helpers/initialValues\";\r\nimport { clientUpdate as validationSchema } from \"helpers/validationSchemas\";\r\nimport { clientUpdate as submit } from \"helpers/handleSubmit\";\r\n\r\n// Actions\r\nimport { updateProfile } from \"redux/actions/user\";\r\n\r\nconst UpdateClientProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const profile = useSelector((state) => state.profile);\r\n  const { user } = useSelector((state) => state.user);\r\n  const { directoryCategories } = useSelector((state) => state.category);\r\n  const directory = user.directory;\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues(user, directory)}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values) => {\r\n        const fd = submit(values, user, directory);\r\n        dispatch(updateProfile(fd));\r\n      }}\r\n    >\r\n      {({ values, setFieldValue, touched, errors, handleSubmit }) => (\r\n        <Form noValidate onSubmit={handleSubmit} className=\"pb-2\">\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Profile Image</Form.Label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"profileImage\"\r\n              className=\"form-control\"\r\n              values={values.profileImage}\r\n              onChange={(e) => setFieldValue(\"profileImage\", e.currentTarget.files[0])}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\" tooltip>\r\n              {errors.profileImage}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <TextField name=\"name\" label=\"Your Name\" placeholder=\"Enter your name\" />\r\n          <TextField\r\n            name=\"storeName\"\r\n            label=\"Business/Store Name\"\r\n            placeholder=\"Enter your business/store name\"\r\n          />\r\n          <CheckBoxOptions\r\n            name=\"category\"\r\n            label=\"Category\"\r\n            options={directoryCategories?.map((category) => category.name)}\r\n          />\r\n          <TextField name=\"number\" label=\"Phone Number\" placeholder=\"9876543210\" />\r\n          <TextField name=\"address\" label=\"Address\" placeholder=\"Enter your address\" />\r\n          <Row>\r\n            <Col xs={12} sm={4}>\r\n              <TextField name=\"city\" label=\"City\" placeholder=\"City\" />\r\n            </Col>\r\n            <Col xs={12} sm={4}>\r\n              <SelectField name=\"state\" label=\"State\" options={states} />\r\n            </Col>\r\n            <Col xs={12} sm={4}>\r\n              <TextField name=\"pincode\" label=\"Pincode\" placeholder=\"Pincode\" />\r\n            </Col>\r\n          </Row>\r\n          {profile.isUpdatedProfile && (\r\n            <Alert className=\"my-3\" variant=\"success\">\r\n              Your profile details has been updated successfully\r\n            </Alert>\r\n          )}\r\n          <Button style={{ width: \"100%\" }} type=\"submit\">\r\n            Update Details\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UpdateClientProfile;\r\n","// Dependencies\r\nimport { useEffect, useState } from \"react\";\r\nimport { Formik, Field } from \"formik\";\r\nimport { Form, Alert, Button, Row, Col, Card, Modal } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\n// Components\r\nimport {\r\n  TextField,\r\n  TextArrayField,\r\n  TextArrayOfObjectsField,\r\n  TimingsField,\r\n} from \"components/InputFields.jsx\";\r\n\r\n// Actions\r\nimport { clearErrors, updateProfile } from \"redux/actions/user\";\r\n\r\n// Helpers\r\nimport { directoryAdditional as initialValues } from \"helpers/initialValues\";\r\nimport { directoryAdditional as validationSchema } from \"helpers/validationSchemas\";\r\nimport { directoryAdditional as submit } from \"helpers/handleSubmit\";\r\n\r\nconst AdditionalDetails = () => {\r\n  const dispatch = useDispatch();\r\n  const profile = useSelector((state) => state.profile);\r\n  const { user } = useSelector((state) => state.user);\r\n  const directory = user.directory;\r\n\r\n  useEffect(() => {\r\n    dispatch(clearErrors());\r\n  }, [dispatch]);\r\n\r\n  const MAX_IMAGES = 5;\r\n  const spaceLeft = MAX_IMAGES - directory.directoryImages.length;\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues(directory)}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values) => {\r\n        const fd = submit(values, directory);\r\n        dispatch(updateProfile(fd));\r\n      }}\r\n    >\r\n      {({ errors, touched, values, handleSubmit, setErrors, setFieldValue }) => (\r\n        <Form noValidate onSubmit={handleSubmit} className=\"my-2\">\r\n          <Form.Group className=\"mb-3\">\r\n            <h4>Directory Images</h4>\r\n            {directory.directoryImages.length > 0 ? (\r\n              <Row>\r\n                {directory.directoryImages.map((image, index) => (\r\n                  <Col key={image} md={4} xs={6} className=\"my-2\">\r\n                    <ImageCard image={image} index={index} />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            ) : (\r\n              <p>You have no images!</p>\r\n            )}\r\n            {spaceLeft ? (\r\n              <>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"directoryImages\"\r\n                  className={`form-control ${!!errors.directoryImages ? \"is-invalid\" : \"\"}`}\r\n                  multiple\r\n                  onChange={(e) => {\r\n                    if (e.currentTarget.files.length > spaceLeft)\r\n                      return setErrors({\r\n                        directoryImages: `You can only upload ${spaceLeft} more images`,\r\n                      });\r\n                    setFieldValue(\"directoryImages\", e.currentTarget.files);\r\n                  }}\r\n                />\r\n                <div className=\"invalid-feedback\">{errors.directoryImages}</div>\r\n              </>\r\n            ) : (\r\n              <p>You can't upload any more images</p>\r\n            )}\r\n          </Form.Group>\r\n          <h4>General Details</h4>\r\n          <Row>\r\n            <Col md={6} sm={12}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"description\">Description</Form.Label>\r\n                <CKEditor\r\n                  editor={ClassicEditor}\r\n                  data={values.description}\r\n                  onChange={(_, editor) => setFieldValue(\"description\", editor.getData())}\r\n                  style={{ height: \"500px\" }}\r\n                />\r\n                {errors.description && <div className=\"text-danger\">{errors.description}</div>}\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} sm={12}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"tagline\">Tagline</Form.Label>\r\n                <Field\r\n                  name=\"tagline\"\r\n                  value={values.tagline}\r\n                  className={`form-control ${\r\n                    touched.tagline && !!errors.tagline ? \"is-invalid\" : \"\"\r\n                  }`}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.tagline}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"website\">Website</Form.Label>\r\n                <Field\r\n                  name=\"website\"\r\n                  value={values.website}\r\n                  className={`form-control ${\r\n                    touched.website && !!errors.website ? \"is-invalid\" : \"\"\r\n                  }`}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.website}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n                <Field\r\n                  name=\"username\"\r\n                  value={values.username}\r\n                  className={`form-control ${\r\n                    touched.username && !!errors.username ? \"is-invalid\" : \"\"\r\n                  }`}\r\n                />\r\n                <Form.Text>\r\n                  Your website will be https://petohub.com/{values.username || \"<username>\"}{\" \"}\r\n                </Form.Text>\r\n                <Form.Control.Feedback type=\"invalid\">{errors.username}</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={12} sm={6}>\r\n              <TextField name=\"location.lat\" label=\"Latitude\" type=\"number\" />\r\n            </Col>\r\n            <Col xs={12} sm={6}>\r\n              <TextField name=\"location.lng\" label=\"Longitude\" type=\"number\" />\r\n            </Col>\r\n          </Row>\r\n          <TextArrayField\r\n            name=\"gallery\"\r\n            label=\"Gallery\"\r\n            placeholder=\"Enter the link to the image\"\r\n            message=\"No images added!\"\r\n          />\r\n          <TextArrayField\r\n            name=\"products\"\r\n            label=\"Products\"\r\n            placeholder=\"Enter product's name\"\r\n            message=\"No products added!\"\r\n          />\r\n          <TextArrayField\r\n            name=\"services\"\r\n            label=\"Services\"\r\n            placeholder=\"Enter service's name\"\r\n            message=\"No services added!\"\r\n          />\r\n          <TextArrayField\r\n            name=\"features\"\r\n            label=\"Features\"\r\n            placeholder=\"Describe the feature briefly\"\r\n            size=\"md\"\r\n            message=\"No features added!\"\r\n          />\r\n          <TextArrayOfObjectsField\r\n            name=\"details\"\r\n            label=\"Details\"\r\n            placeholder={{ title: \"Title\", content: \"Description\" }}\r\n            keys={[\"title\", \"content\"]}\r\n            fieldType={[\"\", \"textarea\"]}\r\n            message=\"No details added!\"\r\n          />\r\n          <TextArrayOfObjectsField\r\n            name=\"faq\"\r\n            label=\"FAQs\"\r\n            placeholder={{ question: \"Question\", answer: \"Answer\" }}\r\n            keys={[\"question\", \"answer\"]}\r\n            fieldType={[\"\", \"textarea\"]}\r\n            message=\"No FAQs added!\"\r\n          />\r\n          <TimingsField name=\"timings\" label=\"Timings (From - To)\" />\r\n          {profile.error && (\r\n            <Alert className=\"my-3\" variant=\"danger\">\r\n              {profile.error}\r\n            </Alert>\r\n          )}\r\n          {profile.isUpdatedProfile && (\r\n            <Alert className=\"my-3\" variant=\"success\">\r\n              Your profile has been updated successfully\r\n            </Alert>\r\n          )}\r\n          <Button style={{ width: \"100%\" }} type=\"submit\">\r\n            Update Directory Profile\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst ImageCard = ({ image, index }) => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.user);\r\n  const directory = user.directory;\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <Card style={{ width: \"10rem\" }}>\r\n      <Card.Img variant=\"top\" src={image} />\r\n      <Card.Body className=\"d-flex justify-content-center align-items-center\">\r\n        <Button variant=\"danger\" onClick={handleShow}>\r\n          Delete\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Delete image</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Are you sure you want to delete this image?</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"success\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={(e) => {\r\n                const directoryImages = [...directory.directoryImages];\r\n                directoryImages.splice(index, 1);\r\n                const fd = new FormData();\r\n                fd.append(\"directoryImages\", directoryImages);\r\n                dispatch(updateProfile(fd));\r\n                handleClose();\r\n              }}\r\n            >\r\n              Yes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AdditionalDetails;\r\n","// Dependencies\r\nimport { Tab, Row, Col, Nav, Container } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./ProfileScreen.css\";\r\n\r\n// Screens\r\nimport ProfileDetails from \"./ProfileDetails.jsx\";\r\nimport UpdatePassword from \"./UpdatePassword.jsx\";\r\nimport UpdateCustomerProfile from \"./UpdateCustomerProfile.jsx\";\r\nimport UpdateClientProfile from \"./UpdateClientProfile.jsx\";\r\nimport AdditionalDetails from \"./AdditionalDetails.jsx\";\r\nimport { FaIdCard, FaKey, FaMapMarkerAlt, FaUserEdit } from \"react-icons/fa\";\r\n\r\nconst ProfileScreen = () => {\r\n  const { user } = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <Container fluid className=\"profile-container\">\r\n      <div className=\"d-flex align-items-center justify-content-between my-1 pt-3 text-center\">\r\n        <h2>Your Profile</h2>\r\n        {user.role === \"Customer\" ? (\r\n          <Link to=\"/\" className=\"btn btn-primary\">\r\n            Become a member\r\n          </Link>\r\n        ) : (\r\n          <p>\r\n            Directory Profile:{\" \"}\r\n            <span className=\"text-primary\">\r\n              {user.directory?.isApproved ? \"Approved\" : \"Approval Pending\"}\r\n            </span>\r\n          </p>\r\n        )}\r\n      </div>\r\n      <Tab.Container id=\"profile-tabs\" defaultActiveKey=\"first\">\r\n        <Row>\r\n          <Col sm={3}>\r\n            <Nav variant=\"pills\" className=\"flex-column profile-sidebar py-2\">\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"first\">\r\n                  <FaIdCard /> Profile Details\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"second\">\r\n                  <FaKey /> Update Password\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"third\">\r\n                  <FaUserEdit /> Update Profile Details\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              {user.role === \"Client\" && (\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"fourth\">\r\n                    <FaMapMarkerAlt /> Directory Profile\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              )}\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n            <Tab.Content className=\"py-2\">\r\n              <Tab.Pane eventKey=\"first\">\r\n                <ProfileDetails />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"second\">\r\n                <UpdatePassword />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"third\">\r\n                {user.role === \"Client\" ? <UpdateClientProfile /> : <UpdateCustomerProfile />}\r\n              </Tab.Pane>\r\n              {user.role === \"Client\" && (\r\n                <Tab.Pane eventKey=\"fourth\">\r\n                  <AdditionalDetails />\r\n                </Tab.Pane>\r\n              )}\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","// Dependencies\r\nimport { Button, Modal, Form, Row, Col, Alert } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\n// Components\r\nimport { TextField, SelectField, CheckBoxOptions, CheckBox } from \"components/InputFields.jsx\";\r\n\r\n// Helpers\r\nimport { product as validationSchema } from \"helpers/validationSchemas\";\r\nimport { product as initialValues } from \"helpers/initialValues\";\r\nimport { newProduct as handleSubmit } from \"helpers/handleSubmit\";\r\n\r\n// Actions\r\nimport { addProduct, clearErrors } from \"redux/actions/product\";\r\n\r\nconst AddProduct = ({ show, onHide }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isAdded } = useSelector((state) => state.product);\r\n  const { productCategories } = useSelector((state) => state.category);\r\n  const { pets } = useSelector((state) => state.pet);\r\n\r\n  useEffect(() => {\r\n    dispatch(clearErrors());\r\n  }, [dispatch]);\r\n\r\n  const MAX_IMAGES = 7;\r\n  const spaceLeft = MAX_IMAGES;\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Add a new product</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={{ ...initialValues(), category: productCategories[0].name }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          const fd = handleSubmit(values);\r\n          dispatch(addProduct(fd));\r\n        }}\r\n      >\r\n        {({ errors, setErrors, setFieldValue, handleSubmit }) => (\r\n          <Form noValidation onSubmit={handleSubmit}>\r\n            <Modal.Body>\r\n              <Form.Group className=\"mb-3\">\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"productImages\"\r\n                  className={`form-control ${!!errors.productImages ? \"is-invalid\" : \"\"}`}\r\n                  multiple\r\n                  onChange={(e) => {\r\n                    if (e.currentTarget.files.length > spaceLeft)\r\n                      return setErrors({\r\n                        productImages: `You can only upload upto ${spaceLeft} images`,\r\n                      });\r\n                    setFieldValue(\"productImages\", e.currentTarget.files);\r\n                  }}\r\n                />\r\n                <div className=\"invalid-feedback\">{errors.productImages}</div>\r\n              </Form.Group>\r\n              <TextField name=\"name\" label=\"Product Name\" placeholder=\"Enter the product name\" />\r\n              <TextField\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                placeholder=\"Provide a product description\"\r\n                as=\"textarea\"\r\n              />\r\n              <SelectField\r\n                label=\"Category\"\r\n                options={productCategories.map((category) => category.name)}\r\n                name=\"category\"\r\n                defaultValue=\"Others\"\r\n              />\r\n              <Row>\r\n                <Col sm={12} md={6}>\r\n                  <TextField\r\n                    name=\"price\"\r\n                    label=\"Price (in Rs.)\"\r\n                    placeholder=\"Enter the price\"\r\n                    type=\"number\"\r\n                  />\r\n                </Col>\r\n\r\n                <Col sm={12} md={6}>\r\n                  <TextField\r\n                    name=\"countInStock\"\r\n                    label=\"Count in stock\"\r\n                    placeholder=\"Available quantity\"\r\n                    type=\"number\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <CheckBoxOptions\r\n                label=\"Pet Type\"\r\n                options={pets.map((pet) => pet.name)}\r\n                name=\"petType\"\r\n              />\r\n              <TextField name=\"breedType\" label=\"Breed Type\" placeholder=\"Compatible breeds\" />\r\n              <TextField\r\n                name=\"weight\"\r\n                type=\"number\"\r\n                label=\"Weight (in grams)\"\r\n                placeholder=\"Weight\"\r\n              />\r\n              <Row>\r\n                <Col sm={12} md={4}>\r\n                  <TextField\r\n                    name=\"size.length\"\r\n                    type=\"number\"\r\n                    label=\"Length (in cm)\"\r\n                    placeholder=\"Length\"\r\n                  />\r\n                </Col>\r\n                <Col sm={12} md={4}>\r\n                  <TextField\r\n                    name=\"size.height\"\r\n                    type=\"number\"\r\n                    label=\"Height (in cm)\"\r\n                    placeholder=\"Height\"\r\n                  />\r\n                </Col>\r\n                <Col sm={12} md={4}>\r\n                  <TextField\r\n                    name=\"size.width\"\r\n                    type=\"number\"\r\n                    label=\"Width (in cm)\"\r\n                    placeholder=\"Width\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={12} md={6}>\r\n                  <TextField\r\n                    name=\"ageRange.min\"\r\n                    type=\"number\"\r\n                    label=\"Minimum age (in yrs)\"\r\n                    placeholder=\"Minimum Age\"\r\n                  />\r\n                </Col>\r\n                <Col sm={12} md={6}>\r\n                  <TextField\r\n                    name=\"ageRange.max\"\r\n                    type=\"number\"\r\n                    label=\"Maximum age (in yrs)\"\r\n                    placeholder=\"Maximum Age\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <CheckBox name=\"isVeg\" label=\"This product is vegetarian\" />\r\n              {error && (\r\n                <Alert className=\"my-3\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isAdded && (\r\n                <Alert className=\"my-3\" variant=\"success\">\r\n                  Product successfully added\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button disabled={loading} type=\"submit\">\r\n                {loading ? \"Adding\" : \"Add\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","// Dependencies\r\nimport { Button, Modal, Row, Col } from \"react-bootstrap\";\r\n\r\nconst ViewProduct = ({ show, onHide, product }) => {\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>{product.name}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>Images</p>\r\n        {product.productImages.length > 0 ? (\r\n          <Row>\r\n            {product.productImages.map((image, index, array) => (\r\n              <Col\r\n                key={image}\r\n                xs={6}\r\n                className=\"my-2 d-flex align-items-center justify-content-center\"\r\n              >\r\n                <img src={image} width=\"175px\" alt=\"\" />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        ) : (\r\n          <p>You have no images!</p>\r\n        )}\r\n        <p>\r\n          Description: <span className=\"text-muted\">{product.description}</span>\r\n        </p>\r\n        <p>\r\n          Category: <span className=\"text-muted\">{product.category}</span>\r\n        </p>\r\n        <p>\r\n          Price: <span className=\"text-muted\">Rs. {product.price}</span>\r\n        </p>\r\n        <p>\r\n          Count in stock: <span className=\"text-muted\">{product.countInStock}</span>\r\n        </p>\r\n        <p>\r\n          Pet Type: <span className=\"text-muted\"> {product.petType.join(\", \")}</span>\r\n        </p>\r\n        <p>\r\n          Breed Type: <span className=\"text-muted\">{product.breedType}</span>\r\n        </p>\r\n        <p>\r\n          Weight: <span className=\"text-muted\">{product.weight} grams</span>\r\n        </p>\r\n        <p>\r\n          Dimensions:\r\n          <span className=\"text-muted\">\r\n            {product.size.length}cm x {product.size.height}cm x {product.size.width}cm\r\n          </span>\r\n        </p>\r\n        <p>\r\n          Age Range:\r\n          <span className=\"text-muted\">\r\n            {product.ageRange.min}-{product.ageRange.max}yrs\r\n          </span>\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={onHide}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ViewProduct;\r\n","// Dependencies\r\nimport { Button, Modal, Form, Row, Col, Alert, Card } from \"react-bootstrap\";\r\nimport { Formik, Field } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// Helpers\r\nimport { product as initialValues } from \"helpers/initialValues\";\r\nimport { product as validationSchema } from \"helpers/validationSchemas\";\r\nimport { updateProduct as handleSubmit } from \"helpers/handleSubmit\";\r\n\r\n// Actions\r\nimport { editProduct, clearErrors } from \"redux/actions/product\";\r\n\r\nconst EditProduct = ({ show, onHide, product }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isUpdated } = useSelector((state) => state.product);\r\n  const { productCategories } = useSelector((state) => state.category);\r\n  const { pets } = useSelector((state) => state.pet);\r\n\r\n  useEffect(() => {\r\n    dispatch(clearErrors());\r\n  }, [dispatch]);\r\n\r\n  const MAX_IMAGES = 7;\r\n  const spaceLeft = MAX_IMAGES - product.productImages.length;\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>{product.name}</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          const fd = handleSubmit(values, product);\r\n          dispatch(editProduct(fd, product._id));\r\n        }}\r\n      >\r\n        {({ values, touched, errors, setFieldValue, setErrors, handleSubmit }) => (\r\n          <Form noValidation onSubmit={handleSubmit}>\r\n            <Modal.Body>\r\n              <Form.Group className=\"mb-3\">\r\n                <h4>Images</h4>\r\n                {product.productImages.length > 0 ? (\r\n                  <Row>\r\n                    {product.productImages.map((image, index, array) => (\r\n                      <Col\r\n                        key={image}\r\n                        xs={6}\r\n                        className=\"my-2 d-flex align-items-center justify-content-center\"\r\n                      >\r\n                        <ImageCard\r\n                          image={image}\r\n                          index={index}\r\n                          _productImages={array}\r\n                          id={product._id}\r\n                        />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                ) : (\r\n                  <p>You have no images!</p>\r\n                )}\r\n                {spaceLeft ? (\r\n                  <>\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"productImages\"\r\n                      className={`form-control ${!!errors.productImages ? \"is-invalid\" : \"\"}`}\r\n                      multiple\r\n                      onChange={(e) => {\r\n                        if (e.currentTarget.files.length > spaceLeft)\r\n                          return setErrors({\r\n                            productImages: `You can only upload ${spaceLeft} more images`,\r\n                          });\r\n                        setFieldValue(\"productImages\", e.currentTarget.files);\r\n                      }}\r\n                    />\r\n                    <div className=\"invalid-feedback\">{errors.productImages}</div>\r\n                  </>\r\n                ) : (\r\n                  <p>You can't upload any more images</p>\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"name\">Product Name</Form.Label>\r\n                <Field\r\n                  name=\"name\"\r\n                  as={Form.Control}\r\n                  value={values.name}\r\n                  isInvalid={touched.name && !!errors.name}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.name}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"description\">Description</Form.Label>\r\n                <Field\r\n                  name=\"description\"\r\n                  className=\"form-control\"\r\n                  as=\"textarea\"\r\n                  value={values.description}\r\n                  isInvalid={touched.description && !!errors.description}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.description}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"category\">Category</Form.Label>\r\n                <Field\r\n                  as=\"select\"\r\n                  name=\"category\"\r\n                  className=\"form-control\"\r\n                  defaultValue={values.category}\r\n                >\r\n                  {productCategories.map((category, index) => (\r\n                    <option key={index} value={category.name}>\r\n                      {category.name}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n                <Form.Control.Feedback type=\"invalid\">{errors.category}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col sm={12} md={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"price\">Price</Form.Label>\r\n                    <Field\r\n                      name=\"price\"\r\n                      as={Form.Control}\r\n                      type=\"number\"\r\n                      value={values.price}\r\n                      isInvalid={touched.price && !!errors.price}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.price}</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col sm={12} md={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"countInStock\">Count in stock</Form.Label>\r\n                    <Field\r\n                      name=\"countInStock\"\r\n                      as={Form.Control}\r\n                      type=\"number\"\r\n                      value={values.countInStock}\r\n                      isInvalid={touched.countInStock && !!errors.countInStock}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.countInStock}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"petType\">Pet Type</Form.Label>\r\n                <div>\r\n                  {pets.map((pet, index) => (\r\n                    <Field\r\n                      name=\"petType\"\r\n                      key={index}\r\n                      as={Form.Check}\r\n                      className=\"form-check-inline\"\r\n                      checked={values.petType.includes(pet.name)}\r\n                      isInvalid={touched.petType && !!errors.petType}\r\n                      type=\"checkbox\"\r\n                      value={pet.name}\r\n                      label={pet.name}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"breedType\">Breed Type</Form.Label>\r\n                <Field\r\n                  name=\"breedType\"\r\n                  as={Form.Control}\r\n                  value={values.breedType}\r\n                  isInvalid={touched.breedType && !!errors.breedType}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.breedType}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"weight\">Weight (in grams)</Form.Label>\r\n                <Field\r\n                  name=\"weight\"\r\n                  as={Form.Control}\r\n                  type=\"number\"\r\n                  value={values.weight}\r\n                  isInvalid={touched.weight && !!errors.weight}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.weight}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col sm={12} md={4}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"size.length\">Length (in cms)</Form.Label>\r\n                    <Field\r\n                      name=\"size.length\"\r\n                      as={Form.Control}\r\n                      type=\"number\"\r\n                      isInvalid={touched.size?.length && !!errors.size?.length}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.size?.length}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col sm={12} md={4}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"size.height\">Height (in cms)</Form.Label>\r\n                    <Field\r\n                      name=\"size.height\"\r\n                      as={Form.Control}\r\n                      type=\"number\"\r\n                      isInvalid={touched.size?.height && !!errors.size?.height}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.size?.height}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col sm={12} md={4}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"size.width\">Width (in cms)</Form.Label>\r\n                    <Field\r\n                      name=\"size.width\"\r\n                      as={Form.Control}\r\n                      type=\"number\"\r\n                      isInvalid={touched.size?.width && !!errors.size?.width}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.size?.width}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={12} md={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"ageRange.min\">Minimum Age (in yrs)</Form.Label>\r\n                    <Field\r\n                      name=\"ageRange.min\"\r\n                      as={Form.Control}\r\n                      type=\"number\"\r\n                      isInvalid={touched.ageRange?.min && !!errors.ageRange?.min}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.ageRange?.min}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col sm={12} md={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"max\">Maximum Age (in yrs)</Form.Label>\r\n                    <Field\r\n                      name=\"ageRange.max\"\r\n                      as={Form.Control}\r\n                      type=\"number\"\r\n                      isInvalid={touched.ageRange?.max && !!errors.ageRange?.max}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.ageRange?.max}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Form.Group className=\"mb-3\">\r\n                <Field\r\n                  name=\"isVeg\"\r\n                  as={Form.Check}\r\n                  checked={values.isVeg}\r\n                  isInvalid={touched.isVeg && !!errors.isVeg}\r\n                  label=\"This product is vegetarian\"\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.isVeg}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              {error && (\r\n                <Alert className=\"my-3\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isUpdated && (\r\n                <Alert className=\"my-3\" variant=\"success\">\r\n                  Product successfully updated\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button disabled={loading} type=\"submit\">\r\n                Update\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ImageCard = ({ image, index, _productImages, id }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.product);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <Card style={{ width: \"10rem\" }}>\r\n      <Card.Img variant=\"top\" src={image} />\r\n      <Card.Body className=\"d-flex justify-content-center align-items-center\">\r\n        <Button variant=\"danger\" onClick={handleShow}>\r\n          Delete\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Delete image</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Are you sure you want to delete this image?</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"success\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              disabled={loading}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                const productImages = [..._productImages];\r\n                productImages.splice(index, 1);\r\n                const fd = new FormData();\r\n                fd.append(\"productImages\", productImages);\r\n                dispatch(editProduct(fd, id));\r\n                handleClose();\r\n              }}\r\n            >\r\n              {loading ? \"Deleting\" : \"Yes\"}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n// Actions\r\nimport { removeProduct } from \"redux/actions/product\";\r\n\r\nconst RemoveProduct = ({ show, onHide, product }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.product);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Remove Product</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to remove {product.name}?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"success\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={loading}\r\n          variant=\"danger\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(removeProduct(product._id));\r\n            onHide();\r\n          }}\r\n        >\r\n          {loading ? \"Deleting\" : \"Delete\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveProduct;\r\n","// Dependencies\r\nimport { useState } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\n\r\n// Components\r\nimport ViewProduct from \"./ViewProduct.jsx\";\r\nimport EditProduct from \"./EditProduct.jsx\";\r\nimport RemoveProduct from \"./RemoveProduct.jsx\";\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const [viewDialog, setViewDialog] = useState(false);\r\n  const [editDialog, setEditDialog] = useState(false);\r\n  const [removeDialog, setRemoveDialog] = useState(false);\r\n  const showViewDialog = () => setViewDialog(true);\r\n  const hideViewDialog = () => setViewDialog(false);\r\n  const showEditDialog = () => setEditDialog(true);\r\n  const hideEditDialog = () => setEditDialog(false);\r\n  const showRemoveDialog = () => setRemoveDialog(true);\r\n  const hideRemoveDialog = () => setRemoveDialog(false);\r\n\r\n  return (\r\n    <Card className=\"my-2\">\r\n      {!product.isApproved && <p className=\"approved-text\">Approval Pending</p>}\r\n      <div\r\n        style={{\r\n          background: `url(${product.productImages[0] || \"/assets/placeholders/product.png\"})`,\r\n          height: \"250px\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"contain\",\r\n        }}\r\n      />\r\n      <Card.Body>\r\n        <Card.Title>{product.name}</Card.Title>\r\n        <Card.Text>\r\n          {product.description.length > 100\r\n            ? `${product.description.substring(0, 100)}...`\r\n            : product.description}\r\n        </Card.Text>\r\n      </Card.Body>\r\n      <Card.Footer className=\"d-flex align-items-center justify-content-center\">\r\n        <Button className=\"mx-1\" size=\"sm\" onClick={showViewDialog}>\r\n          View\r\n        </Button>\r\n        <ViewProduct show={viewDialog} onHide={hideViewDialog} product={product} />\r\n\r\n        <Button className=\"mx-1\" size=\"sm\" variant=\"success\" onClick={showEditDialog}>\r\n          Edit\r\n        </Button>\r\n        <EditProduct show={editDialog} onHide={hideEditDialog} product={product} />\r\n\r\n        <Button className=\"mx-1\" size=\"sm\" variant=\"danger\" onClick={showRemoveDialog}>\r\n          Remove\r\n        </Button>\r\n        <RemoveProduct show={removeDialog} onHide={hideRemoveDialog} product={product} />\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","// Dependencies\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\n// Components\r\nimport AddProduct from \"./AddProduct.jsx\";\r\nimport ProductCard from \"./ProductCard.jsx\";\r\n\r\n// Actions\r\nimport { getOwnProducts } from \"redux/actions/product\";\r\n\r\n// Custom CSS\r\nimport \"./ProductDashboard.css\";\r\n\r\nconst ProductDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, products } = useSelector((state) => state.product);\r\n\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const showAddDialog = () => setAddDialog(true);\r\n  const hideAddDialog = () => setAddDialog(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOwnProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <h2 className=\"py-2\">Your Products</h2>\r\n      <Button onClick={showAddDialog} className=\"mb-3\">\r\n        Add a new product\r\n      </Button>\r\n      <AddProduct show={addDialog} onHide={hideAddDialog} />\r\n      {loading ? (\r\n        <h1>Loading</h1>\r\n      ) : products.length > 0 ? (\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col sm={12} md={6} lg={4} key={product._id}>\r\n              <ProductCard product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      ) : (\r\n        <p>\r\n          You have not added any products yet! <br /> Start by clicking the button above and add\r\n          your very own product\r\n        </p>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProductDashboard;\r\n","// Dependencies\r\nimport { Button, Modal, Form, Row, Col, Alert } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\n// Components\r\nimport { TextField, SelectField, CheckBoxOptions } from \"components/InputFields.jsx\";\r\n\r\n// Config\r\nimport { days } from \"config.json\";\r\n\r\n// Helpers\r\nimport { service as validationSchema } from \"helpers/validationSchemas\";\r\nimport { service as initialValues } from \"helpers/initialValues\";\r\nimport { newService as handleSubmit } from \"helpers/handleSubmit\";\r\n\r\n// Actions\r\nimport { addService, clearErrors } from \"redux/actions/service\";\r\n\r\nconst AddService = ({ show, onHide }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isAdded } = useSelector((state) => state.service);\r\n  const { serviceCategories } = useSelector((state) => state.category);\r\n  const { pets } = useSelector((state) => state.pet);\r\n\r\n  useEffect(() => {\r\n    dispatch(clearErrors());\r\n  }, [dispatch]);\r\n\r\n  const MAX_IMAGES = 3;\r\n  const spaceLeft = MAX_IMAGES;\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Add a new service</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={{ ...initialValues(), category: serviceCategories[0].name }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          const fd = handleSubmit(values);\r\n          dispatch(addService(fd));\r\n        }}\r\n      >\r\n        {({ errors, setErrors, setFieldValue, handleSubmit }) => (\r\n          <Form noValidation onSubmit={handleSubmit}>\r\n            <Modal.Body>\r\n              <Form.Group className=\"mb-3\">\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"serviceImages\"\r\n                  className={`form-control ${!!errors.serviceImages ? \"is-invalid\" : \"\"}`}\r\n                  multiple\r\n                  onChange={(e) => {\r\n                    if (e.currentTarget.files.length > spaceLeft)\r\n                      return setErrors({\r\n                        serviceImages: `You can only upload upto ${spaceLeft} images`,\r\n                      });\r\n                    setFieldValue(\"serviceImages\", e.currentTarget.files);\r\n                  }}\r\n                />\r\n                <div className=\"invalid-feedback\">{errors.serviceImages}</div>\r\n              </Form.Group>\r\n              <TextField name=\"name\" label=\"Service Name\" placeholder=\"Enter the service name\" />\r\n              <TextField\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                placeholder=\"Provide a service description\"\r\n                as=\"textarea\"\r\n              />\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"price\"\r\n                    label=\"Price (in Rs.)\"\r\n                    placeholder=\"Price of this service\"\r\n                    type=\"number\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <SelectField\r\n                    label=\"Category\"\r\n                    options={serviceCategories.map((category) => category.name)}\r\n                    name=\"category\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <TextField\r\n                name=\"address\"\r\n                label=\"Address\"\r\n                placeholder=\"Provide the address for this service\"\r\n              />\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField name=\"timings.from\" label=\"From\" type=\"time\" />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField name=\"timings.to\" label=\"To\" type=\"time\" />\r\n                </Col>\r\n              </Row>\r\n              <CheckBoxOptions label=\"Days\" options={days} name=\"days\" />\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"nameOfIncharge\"\r\n                    label=\"Name of Incharge\"\r\n                    placeholder=\"Enter the name of the incharge\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"numberOfIncharge\"\r\n                    label=\"Number of Incharge\"\r\n                    placeholder=\"Enter the number of the incharge\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <CheckBoxOptions\r\n                label=\"Pet Type\"\r\n                options={pets.map((pet) => pet.name)}\r\n                name=\"petType\"\r\n              />\r\n              <TextField name=\"breedType\" label=\"Breed Type\" placeholder=\"Compatible breeds\" />\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"ageRange.min\"\r\n                    type=\"number\"\r\n                    label=\"Minimum age (in yrs)\"\r\n                    placeholder=\"Minimum Age\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"ageRange.max\"\r\n                    type=\"number\"\r\n                    label=\"Maximum age (in yrs)\"\r\n                    placeholder=\"Maximum Age\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              {error && (\r\n                <Alert className=\"my-3\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isAdded && (\r\n                <Alert className=\"my-3\" variant=\"success\">\r\n                  Service successfully added\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button disabled={loading} type=\"submit\">\r\n                {loading ? \"Adding\" : \"Add\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddService;\r\n","// Dependencies\r\nimport { Button, Modal, Row, Col } from \"react-bootstrap\";\r\n\r\nconst ViewService = ({ show, onHide, service }) => {\r\n  // Converting days to readable format\r\n  let arr = [];\r\n  let byte = service.days;\r\n  while (byte) {\r\n    arr.push((byte & 1) === 1);\r\n    byte >>= 1;\r\n  }\r\n  const daysOptions = [\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n    \"Sunday\",\r\n  ];\r\n  const days = daysOptions.filter((_, index) => arr[index]);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>{service.name}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>Images</p>\r\n        {service.serviceImages.length > 0 ? (\r\n          <Row>\r\n            {service.serviceImages.map((image, index, array) => (\r\n              <Col\r\n                key={image}\r\n                xs={6}\r\n                className=\"my-2 d-flex align-items-center justify-content-center\"\r\n              >\r\n                <img src={image} width=\"175px\" alt=\"\" />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        ) : (\r\n          <p>You have no images!</p>\r\n        )}\r\n        <p>\r\n          Description: <span className=\"text-muted\">{service.description}</span>\r\n        </p>\r\n        <p>\r\n          Category: <span className=\"text-muted\">{service.category}</span>\r\n        </p>\r\n        <p>\r\n          Price: <span className=\"text-muted\">Rs. {service.price}</span>\r\n        </p>\r\n        <p>\r\n          Pet Type: <span className=\"text-muted\"> {service.petType.join(\", \")}</span>\r\n        </p>\r\n        {service.breedType && (\r\n          <p>\r\n            Breed Type: <span className=\"text-muted\">{service.breedType}</span>\r\n          </p>\r\n        )}\r\n        <p>\r\n          Address: <span className=\"text-muted\">{service.address}</span>\r\n        </p>\r\n        <p>\r\n          Name of Incharge: <span className=\"text-muted\">{service.nameOfIncharge}</span>\r\n        </p>\r\n        <p>\r\n          Number of Incharge: <span className=\"text-muted\">{service.numberOfIncharge}</span>\r\n        </p>\r\n        <p>\r\n          Timings:{\" \"}\r\n          <span className=\"text-muted\">\r\n            {service.timings.from} to {service.timings.to}\r\n          </span>\r\n        </p>\r\n        <p>\r\n          Days: <span className=\"text-muted\">{days.join(\", \")}</span>\r\n        </p>\r\n        <p>\r\n          Age Range:\r\n          <span className=\"text-muted\">\r\n            {service.ageRange.min}-{service.ageRange.max}yrs\r\n          </span>\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={onHide}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ViewService;\r\n","// Dependencies\r\nimport { Button, Modal, Form, Row, Col, Alert, Card } from \"react-bootstrap\";\r\nimport { Formik, Field } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// Components\r\nimport { TextField } from \"components/InputFields.jsx\";\r\n\r\n// Config\r\nimport { days as allDays } from \"config.json\";\r\n\r\n// Helpers\r\nimport { service as initialValues } from \"helpers/initialValues\";\r\nimport { service as validationSchema } from \"helpers/validationSchemas\";\r\nimport { updateService as handleSubmit } from \"helpers/handleSubmit\";\r\n\r\n// Actions\r\nimport { editService, clearErrors } from \"redux/actions/service\";\r\n\r\nconst EditService = ({ show, onHide, service }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isUpdated } = useSelector((state) => state.service);\r\n  const { serviceCategories } = useSelector((state) => state.category);\r\n  const { pets } = useSelector((state) => state.pet);\r\n\r\n  useEffect(() => {\r\n    dispatch(clearErrors());\r\n  }, [dispatch]);\r\n\r\n  const MAX_IMAGES = 3;\r\n  const spaceLeft = MAX_IMAGES - service.serviceImages.length;\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>{service.name}</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues(service)}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          const fd = handleSubmit(values, service);\r\n          dispatch(editService(fd, service._id));\r\n        }}\r\n      >\r\n        {({ values, touched, errors, setFieldValue, setErrors, handleSubmit }) => (\r\n          <Form noValidation onSubmit={handleSubmit}>\r\n            <Modal.Body>\r\n              <Form.Group className=\"mb-3\">\r\n                <h4>Images</h4>\r\n                {service.serviceImages.length > 0 ? (\r\n                  <Row>\r\n                    {service.serviceImages.map((image, index, array) => (\r\n                      <Col\r\n                        key={image}\r\n                        xs={6}\r\n                        className=\"my-2 d-flex align-items-center justify-content-center\"\r\n                      >\r\n                        <ImageCard\r\n                          image={image}\r\n                          index={index}\r\n                          _serviceImages={array}\r\n                          id={service._id}\r\n                        />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                ) : (\r\n                  <p>You have no images!</p>\r\n                )}\r\n                {spaceLeft ? (\r\n                  <>\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"serviceImages\"\r\n                      className={`form-control ${!!errors.serviceImages ? \"is-invalid\" : \"\"}`}\r\n                      multiple\r\n                      onChange={(e) => {\r\n                        if (e.currentTarget.files.length > spaceLeft)\r\n                          return setErrors({\r\n                            serviceImages: `You can only upload ${spaceLeft} more images`,\r\n                          });\r\n                        setFieldValue(\"serviceImages\", e.currentTarget.files);\r\n                      }}\r\n                    />\r\n                    <div className=\"invalid-feedback\">{errors.serviceImages}</div>\r\n                  </>\r\n                ) : (\r\n                  <p>You can't upload any more images</p>\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"name\">Service Name</Form.Label>\r\n                <Field\r\n                  name=\"name\"\r\n                  as={Form.Control}\r\n                  value={values.name}\r\n                  isInvalid={touched.name && !!errors.name}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.name}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"description\">Description</Form.Label>\r\n                <Field\r\n                  name=\"description\"\r\n                  className=\"form-control\"\r\n                  as=\"textarea\"\r\n                  value={values.description}\r\n                  isInvalid={touched.description && !!errors.description}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.description}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"price\">Price</Form.Label>\r\n                    <Field\r\n                      name=\"price\"\r\n                      as={Form.Control}\r\n                      type=\"number\"\r\n                      value={values.price}\r\n                      isInvalid={touched.price && !!errors.price}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.price}</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"category\">Category</Form.Label>\r\n                    <Field\r\n                      as=\"select\"\r\n                      name=\"category\"\r\n                      className=\"form-control\"\r\n                      defaultValue={values.category}\r\n                    >\r\n                      {serviceCategories.map((category, index) => (\r\n                        <option key={index} value={category.name}>\r\n                          {category.name}\r\n                        </option>\r\n                      ))}\r\n                    </Field>\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.category}</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField name=\"timings.from\" label=\"From\" type=\"time\" />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField name=\"timings.to\" label=\"To\" type=\"time\" />\r\n                </Col>\r\n              </Row>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"days\">Days</Form.Label>\r\n                <div>\r\n                  {allDays.map((opt, index) => (\r\n                    <Field\r\n                      name=\"days\"\r\n                      key={index}\r\n                      as={Form.Check}\r\n                      className=\"form-check-inline\"\r\n                      checked={values.days.includes(opt)}\r\n                      isInvalid={touched.days && !!errors.days}\r\n                      type=\"checkbox\"\r\n                      value={opt}\r\n                      label={opt}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"nameOfIncharge\"\r\n                    label=\"Name of Incharge\"\r\n                    placeholder=\"Enter the name of the incharge\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"numberOfIncharge\"\r\n                    label=\"Number of Incharge\"\r\n                    placeholder=\"Enter the number of the incharge\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"petType\">Pet Type</Form.Label>\r\n                <div>\r\n                  {pets.map((pet, index) => (\r\n                    <Field\r\n                      name=\"petType\"\r\n                      key={index}\r\n                      as={Form.Check}\r\n                      className=\"form-check-inline\"\r\n                      checked={values.petType.includes(pet.name)}\r\n                      isInvalid={touched.petType && !!errors.petType}\r\n                      type=\"checkbox\"\r\n                      value={pet.name}\r\n                      label={pet.name}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"breedType\">Breed Type</Form.Label>\r\n                <Field\r\n                  name=\"breedType\"\r\n                  as={Form.Control}\r\n                  value={values.breedType}\r\n                  isInvalid={touched.breedType && !!errors.breedType}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.breedType}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col sm={12} md={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"ageRange.min\">Minimum Age (in yrs)</Form.Label>\r\n                    <Field\r\n                      name=\"ageRange.min\"\r\n                      as={Form.Control}\r\n                      type=\"number\"\r\n                      isInvalid={touched.ageRange?.min && !!errors.ageRange?.min}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.ageRange?.min}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col sm={12} md={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"max\">Maximum Age (in yrs)</Form.Label>\r\n                    <Field\r\n                      name=\"ageRange.max\"\r\n                      as={Form.Control}\r\n                      type=\"number\"\r\n                      isInvalid={touched.ageRange?.max && !!errors.ageRange?.max}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.ageRange?.max}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              {error && (\r\n                <Alert className=\"my-3\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isUpdated && (\r\n                <Alert className=\"my-3\" variant=\"success\">\r\n                  Service successfully updated\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button disabled={loading} type=\"submit\">\r\n                Update\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ImageCard = ({ image, index, _serviceImages, id }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.service);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <Card style={{ width: \"10rem\" }}>\r\n      <Card.Img variant=\"top\" src={image} />\r\n      <Card.Body className=\"d-flex justify-content-center align-items-center\">\r\n        <Button variant=\"danger\" onClick={handleShow}>\r\n          Delete\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Delete image</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Are you sure you want to delete this image?</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"success\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              disabled={loading}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                const serviceImages = [..._serviceImages];\r\n                serviceImages.splice(index, 1);\r\n                const fd = new FormData();\r\n                fd.append(\"serviceImages\", serviceImages);\r\n                dispatch(editService(fd, id));\r\n                handleClose();\r\n              }}\r\n            >\r\n              {loading ? \"Deleting\" : \"Yes\"}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EditService;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n// Actions\r\nimport { removeService } from \"redux/actions/service\";\r\n\r\nconst RemoveService = ({ show, onHide, service }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.service);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Remove Service</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to remove {service.name}?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"success\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={loading}\r\n          variant=\"danger\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(removeService(service._id));\r\n            onHide();\r\n          }}\r\n        >\r\n          {loading ? \"Deleting\" : \"Delete\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveService;\r\n","// Dependencies\r\nimport { useState } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\n\r\n// Components\r\nimport ViewService from \"./ViewService.jsx\";\r\nimport EditService from \"./EditService.jsx\";\r\nimport RemoveService from \"./RemoveService.jsx\";\r\n\r\nconst ServiceCard = ({ service }) => {\r\n  const [viewDialog, setViewDialog] = useState(false);\r\n  const [editDialog, setEditDialog] = useState(false);\r\n  const [removeDialog, setRemoveDialog] = useState(false);\r\n  const showViewDialog = () => setViewDialog(true);\r\n  const hideViewDialog = () => setViewDialog(false);\r\n  const showEditDialog = () => setEditDialog(true);\r\n  const hideEditDialog = () => setEditDialog(false);\r\n  const showRemoveDialog = () => setRemoveDialog(true);\r\n  const hideRemoveDialog = () => setRemoveDialog(false);\r\n\r\n  return (\r\n    <Card className=\"my-2\">\r\n      {!service.isApproved && <p className=\"approved-text\">Approval Pending</p>}\r\n      <div\r\n        style={{\r\n          background: `url(${service.serviceImages[0] || \"/assets/placeholders/service.png\"})`,\r\n          height: \"250px\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"contain\",\r\n        }}\r\n      />\r\n      <Card.Body>\r\n        <Card.Title>{service.name}</Card.Title>\r\n        <Card.Text>\r\n          {service.description.length > 100\r\n            ? `${service.description.slice(0, 100)}...`\r\n            : service.description}\r\n        </Card.Text>\r\n      </Card.Body>\r\n      <Card.Footer className=\"d-flex align-items-center justify-content-center\">\r\n        <Button className=\"mx-1\" size=\"sm\" onClick={showViewDialog}>\r\n          View\r\n        </Button>\r\n        <ViewService show={viewDialog} onHide={hideViewDialog} service={service} />\r\n\r\n        <Button className=\"mx-1\" size=\"sm\" variant=\"success\" onClick={showEditDialog}>\r\n          Edit\r\n        </Button>\r\n        <EditService show={editDialog} onHide={hideEditDialog} service={service} />\r\n\r\n        <Button className=\"mx-1\" size=\"sm\" variant=\"danger\" onClick={showRemoveDialog}>\r\n          Remove\r\n        </Button>\r\n        <RemoveService show={removeDialog} onHide={hideRemoveDialog} service={service} />\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ServiceCard;\r\n","// Dependencies\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\n// Components\r\nimport AddService from \"./AddService.jsx\";\r\nimport ServiceCard from \"./ServiceCard.jsx\";\r\n\r\n// Actions\r\nimport { getOwnServices } from \"redux/actions/service\";\r\n\r\n// Custom CSS\r\nimport \"./ServiceDashboard.css\";\r\n\r\nconst ServiceDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, services } = useSelector((state) => state.service);\r\n\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const showAddDialog = () => setAddDialog(true);\r\n  const hideAddDialog = () => setAddDialog(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOwnServices());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <h2 className=\"py-2\">Your Services</h2>\r\n      <Button onClick={showAddDialog} className=\"mb-3\">\r\n        Add a new service\r\n      </Button>\r\n      <AddService show={addDialog} onHide={hideAddDialog} />\r\n      {loading ? (\r\n        <h1>Loading</h1>\r\n      ) : services.length > 0 ? (\r\n        <Row>\r\n          {services.map((service) => (\r\n            <Col sm={12} md={6} lg={4} key={service._id}>\r\n              <ServiceCard service={service} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      ) : (\r\n        <p>\r\n          You have not added any service yet! <br /> Start by clicking the button above and add your\r\n          very own service\r\n        </p>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ServiceDashboard;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Modal, Row, Col, Alert, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\n\r\n// Components\r\nimport { TextField, SelectField, CheckBoxOptions } from \"components/InputFields.jsx\";\r\n\r\n// Config\r\nimport { states } from \"config.json\";\r\n\r\n// Helpers\r\nimport { user as initialValues } from \"helpers/initialValues\";\r\nimport { user as validationSchema } from \"helpers/validationSchemas\";\r\n\r\n// Actions\r\nimport { addUser } from \"redux/actions/user\";\r\n\r\nconst AddUser = ({ show, onHide }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isAdded } = useSelector((state) => state.admin);\r\n  const { directoryCategories } = useSelector((state) => state.category);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Add a new user</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => dispatch(addUser(values))}\r\n      >\r\n        {({ values, handleSubmit }) => (\r\n          <Form>\r\n            <Modal.Body>\r\n              <TextField name=\"name\" label=\"Name\" placeholder=\"Enter the user's name\" />\r\n              <TextField name=\"email\" label=\"Email\" placeholder=\"Enter the user's email\" />\r\n              <TextField\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                placeholder=\"Enter the user's password\"\r\n                type=\"password\"\r\n              />\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"number\"\r\n                    label=\"Phone Number\"\r\n                    placeholder=\"9876543210\"\r\n                    type=\"number\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <SelectField\r\n                    name=\"role\"\r\n                    label=\"Role\"\r\n                    options={[\"Customer\", \"Client\", \"Admin\"]}\r\n                    defaultValue=\"Customer\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              {values.role === \"Client\" && (\r\n                <>\r\n                  <hr />\r\n                  <TextField\r\n                    name=\"storeName\"\r\n                    label=\"Business/Store name\"\r\n                    placeholder=\"Enter the business name\"\r\n                  />\r\n                  <TextField\r\n                    name=\"address\"\r\n                    label=\"Address\"\r\n                    placeholder=\"Enter the business address\"\r\n                  />\r\n                  <CheckBoxOptions\r\n                    name=\"category\"\r\n                    label=\"Category\"\r\n                    options={directoryCategories.map((category) => category.name)}\r\n                  />\r\n                  <Row>\r\n                    <Col xs={12} sm={4}>\r\n                      <SelectField\r\n                        name=\"state\"\r\n                        label=\"State\"\r\n                        options={states}\r\n                        defaultValue=\"Delhi\"\r\n                      />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                      <TextField name=\"city\" label=\"City\" placeholder=\"City\" />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                      <TextField name=\"pincode\" label=\"Pincode\" placeholder=\"Pincode\" />\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              )}\r\n              {error && (\r\n                <Alert className=\"my-1\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isAdded && (\r\n                <Alert className=\"my-1\" variant=\"success\">\r\n                  User has been added successfully\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={loading}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                {loading ? \"Adding\" : \"Add\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n// Actions\r\nimport { verifyUser } from \"redux/actions/user\";\r\n\r\nconst VerifyUser = ({ show, onHide, userId, name }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.admin);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Verify this user</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to verify {name}?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={loading}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(verifyUser(userId));\r\n            onHide();\r\n          }}\r\n        >\r\n          {loading ? \"Verifying\" : \"Verify\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default VerifyUser;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Modal, Alert, Button, Row, Col } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Components\r\nimport { TextField } from \"components/InputFields.jsx\";\r\n\r\n// Actions\r\nimport { editUser } from \"redux/actions/user\";\r\n\r\nconst EditUser = ({ show, onHide, user, userId }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isUpdated } = useSelector((state) => state.admin);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header className=\"d-flex justify-content-between\">\r\n        <Modal.Title>Edit User</Modal.Title>\r\n        {user.profileImage && (\r\n          <a href={user.profileImage}>\r\n            <img\r\n              src={user.profileImage || \"/assets/placeholders/portrait.png\"}\r\n              alt=\"Profile\"\r\n              height=\"50px\"\r\n            />\r\n          </a>\r\n        )}\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={{\r\n          name: user.name,\r\n          email: user.email,\r\n          number: user.number,\r\n          password: \"\",\r\n          profileImage: null,\r\n          directory: user.directory?.id || \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          name: Yup.string()\r\n            .required(\"Name is required\")\r\n            .min(3, \"Must be atleast 3 characters\")\r\n            .max(32, \"Must be 32 characters or less\"),\r\n          email: Yup.string().email(\"Provide a valid email\").required(\"Email is required\"),\r\n          password: Yup.string().min(8, \"Password should be atleast 8 characters\"),\r\n        })}\r\n        onSubmit={(values) => {\r\n          // Converting to FormData\r\n          const fd = new FormData();\r\n          if (user.name !== values.name) fd.append(\"name\", values.name);\r\n          if (user.email !== values.email) fd.append(\"email\", values.email);\r\n          if (user.number !== values.number) fd.append(\"number\", values.number);\r\n          if (user.directory?._id !== values.directory) fd.append(\"directory\", values.directory);\r\n          if (values.password !== \"\") fd.append(\"password\", values.password);\r\n          if (values.profileImage !== null) fd.append(\"profileImage\", values.profileImage);\r\n          dispatch(editUser(fd, userId));\r\n        }}\r\n      >\r\n        {({ values, errors, handleSubmit, setFieldValue }) => (\r\n          <Form>\r\n            <Modal.Body>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Profile Image</Form.Label>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"profileImage\"\r\n                  className=\"form-control\"\r\n                  values={values.profileImage}\r\n                  onChange={(e) => setFieldValue(\"profileImage\", e.currentTarget.files[0])}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\" tooltip>\r\n                  {errors.profileImage}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <TextField name=\"name\" label=\"Name\" placeholder=\"Enter the user's name\" />\r\n              <TextField name=\"email\" label=\"Email\" placeholder=\"Enter the user's email\" />\r\n              <TextField\r\n                name=\"password\"\r\n                label=\"Password (Enter a new password to update)\"\r\n                placeholder=\"Enter the user's password\"\r\n                type=\"password\"\r\n              />\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"directory\"\r\n                    label=\"Directory ref\"\r\n                    placeholder=\"Link a directory\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"number\"\r\n                    label=\"Phone Number\"\r\n                    placeholder=\"9876543210\"\r\n                    type=\"number\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              {error && (\r\n                <Alert className=\"my-1\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isUpdated && (\r\n                <Alert className=\"my-1\" variant=\"success\">\r\n                  User has been updated succesfully\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={loading}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                {loading ? \"Updating\" : \"Update\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n// Actions\r\nimport { removeUser } from \"redux/actions/user\";\r\n\r\nconst RemoveUser = ({ show, onHide, userId, name }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.admin);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Delete this user</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to remove {name}?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"success\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={loading}\r\n          variant=\"danger\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(removeUser(userId));\r\n            onHide();\r\n          }}\r\n        >\r\n          {loading ? \"Deleting\" : \"Delete\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveUser;\r\n","// Dependencies\r\nimport { useState, useEffect } from \"react\";\r\nimport { Table, Button, Form } from \"react-bootstrap\";\r\nimport { FaCheck, FaCopy, FaExternalLinkAlt, FaPencilAlt, FaTimes } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport AddUser from \"./AddUser.jsx\";\r\nimport VerifyUser from \"./VerifyUser.jsx\";\r\nimport EditUser from \"./EditUser.jsx\";\r\nimport RemoveUser from \"./RemoveUser.jsx\";\r\n\r\n// Helpers\r\nimport convertTime from \"helpers/convertTime\";\r\n\r\n// Actions\r\nimport { getUsers } from \"redux/actions/user\";\r\n\r\nconst UsersDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const { users } = useSelector((state) => state.admin);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, [dispatch]);\r\n\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const showAddDialog = () => setAddDialog(true);\r\n  const hideAddDialog = () => setAddDialog(false);\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"name\");\r\n\r\n  return (\r\n    <div className=\"users-dashboard\">\r\n      <div className=\"d-sm-flex justify-content-between mb-3\">\r\n        <Button onClick={showAddDialog} className=\"mb-3 mb-sm-0\">\r\n          Add a new user\r\n        </Button>\r\n        <div className=\"d-flex my-auto\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={searchValue}\r\n            placeholder=\"Search for...\"\r\n            onChange={(e) => setSearchValue(e.currentTarget.value)}\r\n            style={{ width: \"200px\", height: \"40px\" }}\r\n          />\r\n          <Form.Select\r\n            value={searchKey}\r\n            onChange={(e) => setSearchKey(e.currentTarget.value)}\r\n            style={{ width: \"100px\", height: \"40px\" }}\r\n          >\r\n            <option value=\"name\">Name</option>\r\n            <option value=\"_id\">User ID</option>\r\n            <option value=\"email\">Email</option>\r\n            <option value=\"number\">Number</option>\r\n            <option value=\"role\">Role</option>\r\n          </Form.Select>\r\n        </div>\r\n      </div>\r\n      <AddUser show={addDialog} onHide={hideAddDialog} />\r\n      {users?.length > 0 ? (\r\n        <Table responsive size=\"sm\" className=\"table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Actions</th>\r\n              <th>Profile Image</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Number</th>\r\n              <th>Role</th>\r\n              <th>Directory</th>\r\n              <th>Verification</th>\r\n              <th>Date of Verification</th>\r\n              <th>Date of Creation</th>\r\n              <th>Date of Updation</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users\r\n              .filter((user) => user[searchKey]?.toLowerCase().includes(searchValue.toLowerCase()))\r\n              .map((user, index) => (\r\n                <UserRow key={index} user={user} index={index} />\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <h3>No users found</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserRow = ({ user, index }) => {\r\n  const { user: currentUser } = useSelector((state) => state.user);\r\n\r\n  const [verifyDialog, setVerifyDialog] = useState(false);\r\n  const [editDialog, setEditDialog] = useState(false);\r\n  const [removeDialog, setRemoveDialog] = useState(false);\r\n  const showVerifyDialog = () => setVerifyDialog(true);\r\n  const showEditDialog = () => setEditDialog(true);\r\n  const showRemoveDialog = () => setRemoveDialog(true);\r\n  const hideVerifyDialog = () => setVerifyDialog(false);\r\n  const hideEditDialog = () => setEditDialog(false);\r\n  const hideRemoveDialog = () => setRemoveDialog(false);\r\n\r\n  return (\r\n    <tr>\r\n      <td>{index}</td>\r\n      <td>\r\n        {user._id !== currentUser._id && (\r\n          <div style={{ width: \"90px\" }}>\r\n            <p className=\"text-success\" style={{ cursor: \"pointer\" }} onClick={showEditDialog}>\r\n              <FaPencilAlt /> Edit\r\n            </p>\r\n            <EditUser show={editDialog} onHide={hideEditDialog} userId={user._id} user={user} />\r\n            <p className=\"text-danger\" style={{ cursor: \"pointer\" }} onClick={showRemoveDialog}>\r\n              <FaTimes /> Delete\r\n            </p>\r\n            <RemoveUser\r\n              show={removeDialog}\r\n              onHide={hideRemoveDialog}\r\n              userId={user._id}\r\n              name={user.name}\r\n            />\r\n            <p\r\n              className=\"text-secondary\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => navigator.clipboard.writeText(user._id)}\r\n            >\r\n              <FaCopy /> Copy ID\r\n            </p>\r\n          </div>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <a href={user.profileImage}>\r\n          <img\r\n            src={user.profileImage || \"/assets/placeholders/portrait.png\"}\r\n            alt=\"Profile\"\r\n            height=\"60px\"\r\n          />\r\n        </a>\r\n      </td>\r\n      <td>{user.name}</td>\r\n      <td>{user.email}</td>\r\n      <td>{user.number}</td>\r\n      <td>{user.role}</td>\r\n      <td>\r\n        {user.directory && (\r\n          <div style={{ width: \"90px\" }}>\r\n            <p\r\n              className=\"text-secondary\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => navigator.clipboard.writeText(user.directory._id)}\r\n            >\r\n              <FaCopy /> Copy ID\r\n            </p>\r\n            <a href={`/${user.directory.username}`} className=\"text-warning\">\r\n              <FaExternalLinkAlt /> {user.directory.storeName}\r\n            </a>\r\n          </div>\r\n        )}\r\n      </td>\r\n      <td>\r\n        {user.isVerified ? (\r\n          <div className=\"text-success\">\r\n            <FaCheck /> Verified\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div onClick={showVerifyDialog} className=\"text-danger\" style={{ cursor: \"pointer\" }}>\r\n              <FaTimes /> Verify Now\r\n            </div>\r\n            <VerifyUser\r\n              show={verifyDialog}\r\n              onHide={hideVerifyDialog}\r\n              userId={user._id}\r\n              name={user.name}\r\n            />\r\n          </>\r\n        )}\r\n      </td>\r\n      <td>{convertTime(user.verifiedAt)}</td>\r\n      <td>{convertTime(user.createdAt)}</td>\r\n      <td>{convertTime(user.updatedAt)}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default UsersDashboard;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Modal, Row, Col, Alert, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\n\r\n// Components\r\nimport { TextField, SelectField, CheckBoxOptions } from \"components/InputFields.jsx\";\r\n\r\n// Config\r\nimport { states } from \"config.json\";\r\n\r\n// Helpers\r\nimport { directory as initialValues } from \"helpers/initialValues\";\r\nimport { directoryRegistration as validationSchema } from \"helpers/validationSchemas\";\r\n\r\n// Actions\r\nimport { addDirectory } from \"redux/actions/directory\";\r\n\r\nconst AddDirectory = ({ show, onHide }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isAdded } = useSelector((state) => state.directory);\r\n  const { directoryCategories } = useSelector((state) => state.category);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Add a new directory</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => dispatch(addDirectory(values))}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <Form>\r\n            <Modal.Body>\r\n              <TextField\r\n                name=\"storeName\"\r\n                label=\"Business/Store name\"\r\n                placeholder=\"Enter the business name\"\r\n              />\r\n              <TextField name=\"email\" label=\"Email\" placeholder=\"Enter the email address\" />\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField name=\"user\" label=\"User ref\" placeholder=\"Link a user account\" />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"number\"\r\n                    label=\"Phone Number\"\r\n                    placeholder=\"9876543210\"\r\n                    type=\"number\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <TextField name=\"address\" label=\"Address\" placeholder=\"Enter the business address\" />\r\n              <CheckBoxOptions\r\n                name=\"category\"\r\n                label=\"Category\"\r\n                options={directoryCategories.map((category) => category.name)}\r\n              />\r\n              <Row>\r\n                <Col xs={12} sm={4}>\r\n                  <SelectField name=\"state\" label=\"State\" options={states} defaultValue=\"Delhi\" />\r\n                </Col>\r\n                <Col xs={12} sm={4}>\r\n                  <TextField name=\"city\" label=\"City\" placeholder=\"City\" />\r\n                </Col>\r\n                <Col xs={12} sm={4}>\r\n                  <TextField name=\"pincode\" label=\"Pincode\" placeholder=\"Pincode\" />\r\n                </Col>\r\n              </Row>\r\n              {error && (\r\n                <Alert className=\"my-1\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isAdded && (\r\n                <Alert className=\"my-1\" variant=\"success\">\r\n                  Directory has been added successfully\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={loading}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                {loading ? \"Adding\" : \"Add\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddDirectory;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n// Actions\r\nimport { approveDirectory } from \"redux/actions/directory\";\r\n\r\nconst ApproveDirectory = ({ show, onHide, directoryId, name }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.directory);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Verify this directory</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to verify {name}?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={loading}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(approveDirectory(directoryId));\r\n            onHide();\r\n          }}\r\n        >\r\n          {loading ? \"Verifying\" : \"Verify\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ApproveDirectory;\r\n","// Dependencies\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Alert, Button, Row, Col, Card, Modal } from \"react-bootstrap\";\r\nimport { Formik, Field } from \"formik\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\n// Components\r\nimport {\r\n  TextField,\r\n  TextArrayField,\r\n  TextArrayOfObjectsField,\r\n  TimingsField,\r\n} from \"components/InputFields.jsx\";\r\n\r\n// Config\r\nimport { states } from \"config.json\";\r\n\r\n// Helpers\r\nimport { directoryUpdate as initialValues } from \"helpers/initialValues\";\r\nimport { directoryUpdate as validationSchema } from \"helpers/validationSchemas\";\r\nimport { directoryUpdate as handleSubmit } from \"helpers/handleSubmit\";\r\n\r\n// Actions\r\nimport { editDirectory } from \"redux/actions/directory\";\r\n\r\nconst EditDirectory = ({ show, onHide, directory, directoryId }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isUpdated } = useSelector((state) => state.directory);\r\n  const { directoryCategories } = useSelector((state) => state.category);\r\n\r\n  const MAX_IMAGES = 5;\r\n  const spaceLeft = MAX_IMAGES - directory.directoryImages.length;\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Edit Directory</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues(directory)}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          const fd = handleSubmit(values, directory);\r\n          dispatch(editDirectory(fd, directoryId));\r\n        }}\r\n      >\r\n        {({ values, errors, touched, handleSubmit, setErrors, setFieldValue }) => (\r\n          <Form>\r\n            <Modal.Body>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"storeName\">Business/Store Name</Form.Label>\r\n                <Field\r\n                  name=\"storeName\"\r\n                  as={Form.Control}\r\n                  value={values.storeName}\r\n                  isInvalid={touched.storeName && !!errors.storeName}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.storeName}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"category\">Category</Form.Label>\r\n                <div>\r\n                  {directoryCategories.map((category, index) => (\r\n                    <Field\r\n                      name=\"category\"\r\n                      key={index}\r\n                      as={Form.Check}\r\n                      className=\"form-check-inline\"\r\n                      checked={values.category.includes(category.name)}\r\n                      isInvalid={touched.category && !!errors.category}\r\n                      type=\"checkbox\"\r\n                      value={category.name}\r\n                      label={category.name}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField name=\"user\" label=\"User ref\" placeholder=\"Link a user account\" />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"number\"\r\n                    label=\"Phone Number\"\r\n                    placeholder=\"9876543210\"\r\n                    type=\"number\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"address\">Address</Form.Label>\r\n                <Field\r\n                  name=\"address\"\r\n                  as={Form.Control}\r\n                  value={values.address}\r\n                  isInvalid={touched.address && !!errors.address}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.address}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col xs={12} sm={4}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"city\">City</Form.Label>\r\n                    <Field\r\n                      name=\"city\"\r\n                      as={Form.Control}\r\n                      value={values.city}\r\n                      isInvalid={touched.city && !!errors.city}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.city}</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={12} sm={4}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"state\">State</Form.Label>\r\n                    <Field as=\"select\" name=\"state\" className=\"form-control\">\r\n                      {states.map((opt) => (\r\n                        <option key={opt} value={opt}>\r\n                          {opt}\r\n                        </option>\r\n                      ))}\r\n                    </Field>\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.state}</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={12} sm={4}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"pincode\">Pincode</Form.Label>\r\n                    <Field\r\n                      name=\"pincode\"\r\n                      as={Form.Control}\r\n                      value={values.pincode}\r\n                      isInvalid={touched.pincode && !!errors.pincode}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.pincode}</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Directory Images</Form.Label>\r\n                {directory.directoryImages.length > 0 ? (\r\n                  <Row>\r\n                    {directory.directoryImages.map((image, index) => (\r\n                      <Col key={image} xs={6} className=\"my-2\">\r\n                        <ImageCard image={image} index={index} directory={directory} />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                ) : (\r\n                  <p>This directory has no images!</p>\r\n                )}\r\n                {spaceLeft ? (\r\n                  <>\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"directoryImages\"\r\n                      className={`form-control ${!!errors.directoryImages ? \"is-invalid\" : \"\"}`}\r\n                      multiple\r\n                      onChange={(e) => {\r\n                        if (e.currentTarget.files.length > spaceLeft)\r\n                          return setErrors({\r\n                            directoryImages: `You can only upload ${spaceLeft} more images`,\r\n                          });\r\n                        setFieldValue(\"directoryImages\", e.currentTarget.files);\r\n                      }}\r\n                    />\r\n                    <div className=\"invalid-feedback\">{errors.directoryImages}</div>\r\n                  </>\r\n                ) : (\r\n                  <p>You can't upload any more images</p>\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"description\">Description</Form.Label>\r\n                <CKEditor\r\n                  editor={ClassicEditor}\r\n                  data={values.description}\r\n                  onChange={(_, editor) => setFieldValue(\"description\", editor.getData())}\r\n                />\r\n                <div className=\"invalid-feedback\">{errors.description}</div>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"tagline\">Tagline</Form.Label>\r\n                <Field\r\n                  name=\"tagline\"\r\n                  value={values.tagline}\r\n                  className={`form-control ${\r\n                    touched.tagline && !!errors.tagline ? \"is-invalid\" : \"\"\r\n                  }`}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.tagline}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"website\">Website</Form.Label>\r\n                <Field\r\n                  name=\"website\"\r\n                  value={values.website}\r\n                  className={`form-control ${\r\n                    touched.website && !!errors.website ? \"is-invalid\" : \"\"\r\n                  }`}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.website}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n                <Field\r\n                  name=\"username\"\r\n                  value={values.username}\r\n                  className={`form-control ${\r\n                    touched.username && !!errors.username ? \"is-invalid\" : \"\"\r\n                  }`}\r\n                />\r\n                <Form.Text>\r\n                  Your website will be https://petohub.com/{values.username || \"<username>\"}\r\n                </Form.Text>\r\n                <Form.Control.Feedback type=\"invalid\">{errors.username}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField name=\"location.lat\" label=\"Latitude\" type=\"number\" />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField name=\"location.lng\" label=\"Longitude\" type=\"number\" />\r\n                </Col>\r\n              </Row>\r\n              <TextArrayField\r\n                name=\"gallery\"\r\n                label=\"Gallery\"\r\n                placeholder=\"Enter the link to the image\"\r\n                message=\"No images added!\"\r\n                size=\"sm\"\r\n              />\r\n              <TextArrayField\r\n                name=\"products\"\r\n                label=\"Products\"\r\n                placeholder=\"Enter product's name\"\r\n                message=\"No products added!\"\r\n                size=\"sm\"\r\n              />\r\n              <TextArrayField\r\n                name=\"services\"\r\n                label=\"Services\"\r\n                placeholder=\"Enter service's name\"\r\n                message=\"No services added!\"\r\n                size=\"sm\"\r\n              />\r\n              <TextArrayField\r\n                name=\"features\"\r\n                label=\"Features\"\r\n                placeholder=\"Describe the feature briefly\"\r\n                message=\"No features added!\"\r\n                size=\"sm\"\r\n              />\r\n              <TextArrayOfObjectsField\r\n                name=\"details\"\r\n                label=\"Details\"\r\n                placeholder={{ title: \"Title\", content: \"Description\" }}\r\n                keys={[\"title\", \"content\"]}\r\n                fieldType={[\"\", \"textarea\"]}\r\n                message=\"No details added!\"\r\n                size=\"sm\"\r\n              />\r\n              <TextArrayOfObjectsField\r\n                name=\"faq\"\r\n                label=\"FAQs\"\r\n                placeholder={{ question: \"Question\", answer: \"Answer\" }}\r\n                keys={[\"question\", \"answer\"]}\r\n                fieldType={[\"\", \"textarea\"]}\r\n                message=\"No FAQs added!\"\r\n                size=\"sm\"\r\n              />\r\n              <TimingsField name=\"timings\" label=\"Timings (From - To)\" size=\"sm\" />\r\n              {error && (\r\n                <Alert className=\"my-1\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isUpdated && (\r\n                <Alert className=\"my-1\" variant=\"success\">\r\n                  Directory has been updated succesfully\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={loading}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                {loading ? \"Updating\" : \"Update\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ImageCard = ({ image, index, directory }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <Card style={{ width: \"10rem\" }}>\r\n      <Card.Img variant=\"top\" src={image} />\r\n      <Card.Body className=\"d-flex justify-content-center align-items-center\">\r\n        <Button variant=\"danger\" onClick={handleShow}>\r\n          Delete\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Delete image</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Are you sure you want to delete this image?</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"success\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={(e) => {\r\n                const directoryImages = [...directory.directoryImages];\r\n                directoryImages.splice(index, 1);\r\n                const fd = new FormData();\r\n                fd.append(\"directoryImages\", directoryImages);\r\n                dispatch(editDirectory(fd, directory._id));\r\n                handleClose();\r\n              }}\r\n            >\r\n              Yes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EditDirectory;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n// Actions\r\nimport { removeDirectory } from \"redux/actions/directory\";\r\n\r\nconst RemoveDirectory = ({ show, onHide, directoryId, name }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.directory);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Delete this directory</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to remove {name}?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"success\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={loading}\r\n          variant=\"danger\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(removeDirectory(directoryId));\r\n            onHide();\r\n          }}\r\n        >\r\n          {loading ? \"Deleting\" : \"Delete\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveDirectory;\r\n","// Dependencies\r\nimport { useState, useEffect } from \"react\";\r\nimport { Form, Table, Button } from \"react-bootstrap\";\r\nimport { FaCheck, FaCopy, FaExternalLinkAlt, FaPencilAlt, FaTimes } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport AddDirectory from \"./AddDirectory.jsx\";\r\nimport ApproveDirectory from \"./ApproveDirectory.jsx\";\r\nimport EditDirectory from \"./EditDirectory.jsx\";\r\nimport RemoveDirectory from \"./RemoveDirectory.jsx\";\r\n\r\n// Helpers\r\nimport convertTime from \"helpers/convertTime\";\r\n\r\n// Actions\r\nimport { getAllDirectories } from \"redux/actions/directory\";\r\n\r\nconst DirectoriesDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const { directories } = useSelector((state) => state.directory);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllDirectories());\r\n  }, [dispatch]);\r\n\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const showAddDialog = () => setAddDialog(true);\r\n  const hideAddDialog = () => setAddDialog(false);\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"storeName\");\r\n\r\n  return (\r\n    <div className=\"directories-dashboard\">\r\n      <div className=\"d-sm-flex justify-content-between mb-3\">\r\n        <Button onClick={showAddDialog} className=\"mb-3 mb-sm-0\">\r\n          Add a new directory\r\n        </Button>\r\n        <div className=\"d-flex my-auto\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={searchValue}\r\n            placeholder=\"Search for...\"\r\n            onChange={(e) => setSearchValue(e.currentTarget.value)}\r\n            style={{ width: \"200px\", height: \"40px\" }}\r\n          />\r\n          <Form.Select\r\n            value={searchKey}\r\n            onChange={(e) => setSearchKey(e.currentTarget.value)}\r\n            style={{ width: \"100px\", height: \"40px\" }}\r\n          >\r\n            <option value=\"storeName\">Name</option>\r\n            <option value=\"_id\">Directory ID</option>\r\n            <option value=\"username\">Username</option>\r\n            <option value=\"email\">Email</option>\r\n            <option value=\"number\">Number</option>\r\n            <option value=\"address\">Address</option>\r\n            <option value=\"state\">State</option>\r\n            <option value=\"pincode\">Pincode</option>\r\n          </Form.Select>\r\n        </div>\r\n      </div>\r\n      <AddDirectory show={addDialog} onHide={hideAddDialog} />\r\n      {directories?.length > 0 ? (\r\n        <Table responsive size=\"sm\" className=\"table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Actions</th>\r\n              <th>Directory Images</th>\r\n              <th>Business/Store Name</th>\r\n              <th>Address</th>\r\n              <th>Number</th>\r\n              <th>Categories</th>\r\n              <th>Email</th>\r\n              <th>Description</th>\r\n              <th>Website</th>\r\n              <th>Tagline</th>\r\n              <th>Username</th>\r\n              <th>User</th>\r\n              <th>Date of Approval</th>\r\n              <th>Date of Creation</th>\r\n              <th>Date of Updation</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {directories\r\n              .filter((user) => user[searchKey]?.toLowerCase().includes(searchValue.toLowerCase()))\r\n              .map((directory, index) => (\r\n                <DirectoryRow key={index} directory={directory} index={index} />\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <h3>No directories found</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DirectoryRow = ({ directory, index }) => {\r\n  const [approveDialog, setApproveDialog] = useState(false);\r\n  const [editDialog, setEditDialog] = useState(false);\r\n  const [removeDialog, setRemoveDialog] = useState(false);\r\n  const showApproveDialog = () => setApproveDialog(true);\r\n  const showEditDialog = () => setEditDialog(true);\r\n  const showRemoveDialog = () => setRemoveDialog(true);\r\n  const hideApproveDialog = () => setApproveDialog(false);\r\n  const hideEditDialog = () => setEditDialog(false);\r\n  const hideRemoveDialog = () => setRemoveDialog(false);\r\n\r\n  const address = `${directory.address}, ${directory.city}, ${directory.state}, ${directory.pincode}`;\r\n\r\n  return (\r\n    <tr>\r\n      <td>{index}</td>\r\n      <td>\r\n        <div style={{ width: \"110px\" }}>\r\n          <p className=\"text-success\" style={{ cursor: \"pointer\" }} onClick={showEditDialog}>\r\n            <FaPencilAlt /> Edit\r\n          </p>\r\n          <EditDirectory\r\n            show={editDialog}\r\n            onHide={hideEditDialog}\r\n            directoryId={directory._id}\r\n            directory={directory}\r\n          />\r\n          <p className=\"text-danger\" style={{ cursor: \"pointer\" }} onClick={showRemoveDialog}>\r\n            <FaTimes /> Delete\r\n          </p>\r\n          <RemoveDirectory\r\n            show={removeDialog}\r\n            onHide={hideRemoveDialog}\r\n            directoryId={directory._id}\r\n            name={directory.name}\r\n          />\r\n          <p\r\n            className=\"text-secondary\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => navigator.clipboard.writeText(directory._id)}\r\n          >\r\n            <FaCopy /> Copy ID\r\n          </p>\r\n          {directory.isApproved ? (\r\n            <div className=\"text-success\">\r\n              <FaCheck /> Approved\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div\r\n                onClick={showApproveDialog}\r\n                className=\"text-danger\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <FaTimes /> Approve\r\n              </div>\r\n              <ApproveDirectory\r\n                show={approveDialog}\r\n                onHide={hideApproveDialog}\r\n                directoryId={directory._id}\r\n                name={directory.name}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <a href={directory.directoryImages[0]}>\r\n          <img\r\n            src={directory.directoryImages[0] || \"/assets/placeholders/store.png\"}\r\n            alt=\"Directory\"\r\n            height=\"60px\"\r\n          />\r\n        </a>\r\n      </td>\r\n      <td>\r\n        {directory.isApproved ? (\r\n          <a href={`/${directory.username}`}>{directory.storeName}</a>\r\n        ) : (\r\n          directory.storeName\r\n        )}\r\n      </td>\r\n      <td>{address.length > 60 ? `${address.substring(0, 60)}...` : address}</td>\r\n      <td>{directory.number}</td>\r\n      <td>{directory.category.join(\", \")}</td>\r\n      <td>{directory.email}</td>\r\n      <td>\r\n        {directory.description.length > 50\r\n          ? `${directory.description.substring(0, 50)}...`\r\n          : directory.description}\r\n      </td>\r\n      <td>\r\n        {directory.website && (\r\n          <a href={directory.website} target=\"_blank\" rel=\"noreferrer\">\r\n            <FaExternalLinkAlt /> {directory.website}\r\n          </a>\r\n        )}\r\n      </td>\r\n      <td>{directory.tagline}</td>\r\n      <td>\r\n        {directory.username !== directory._id &&\r\n          (directory.isApproved ? (\r\n            <a href={`/${directory.username}`}>{directory.username}</a>\r\n          ) : (\r\n            directory.username\r\n          ))}\r\n      </td>\r\n      <td>\r\n        {directory.user && (\r\n          <div>\r\n            <p className=\"text-warning mb-0\">{directory.user.name}</p>\r\n            <p\r\n              className=\"text-secondary\"\r\n              style={{ cursor: \"pointer\", width: \"90px\" }}\r\n              onClick={() => navigator.clipboard.writeText(directory.user._id)}\r\n            >\r\n              <FaCopy /> Copy ID\r\n            </p>\r\n          </div>\r\n        )}\r\n      </td>\r\n      <td>{convertTime(directory.approvedAt)}</td>\r\n      <td>{convertTime(directory.createdAt)}</td>\r\n      <td>{convertTime(directory.updatedAt)}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default DirectoriesDashboard;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Modal, Row, Col, Alert, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\n\r\n// Components\r\nimport {\r\n  TextField,\r\n  SelectField,\r\n  CheckBox,\r\n  CheckBoxOptions,\r\n  TextArrayField,\r\n  TextArrayOfObjectsField,\r\n} from \"components/InputFields.jsx\";\r\n\r\n// Helpers\r\nimport { product as initialValues } from \"helpers/initialValues\";\r\nimport { product as validationSchema } from \"helpers/validationSchemas\";\r\nimport { newProduct as handleSubmit } from \"helpers/handleSubmit\";\r\n\r\n// Actions\r\nimport { addProduct } from \"redux/actions/product\";\r\n\r\nconst AddProduct = ({ show, onHide }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isAdded } = useSelector((state) => state.product);\r\n  const { productCategories } = useSelector((state) => state.category);\r\n  const { pets } = useSelector((state) => state.pet);\r\n  const { brands } = useSelector((state) => state.brand);\r\n\r\n  const MAX_IMAGES = 7;\r\n  const spaceLeft = MAX_IMAGES;\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"xl\">\r\n      <Modal.Header>\r\n        <Modal.Title>Add a new product</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={{\r\n          ...initialValues(),\r\n          category: productCategories[0]?.name || \"\",\r\n          brand: brands[0]?.name || \"\",\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          const fd = handleSubmit(values);\r\n          dispatch(addProduct(fd));\r\n        }}\r\n      >\r\n        {({ errors, setErrors, setFieldValue, handleSubmit }) => (\r\n          <Form>\r\n            <Modal.Body>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Text>\r\n                  Choose between either uploading images or putting links. If you choose both, the\r\n                  links will get priority\r\n                </Form.Text>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"productImagesUpload\"\r\n                  className={`form-control ${!!errors.productImagesUpload ? \"is-invalid\" : \"\"}`}\r\n                  multiple\r\n                  onChange={(e) => {\r\n                    if (e.currentTarget.files.length > spaceLeft)\r\n                      return setErrors({\r\n                        productImagesUpload: `You can only upload upto ${spaceLeft} images`,\r\n                      });\r\n                    setFieldValue(\"productImagesUpload\", e.currentTarget.files);\r\n                  }}\r\n                />\r\n                <div className=\"invalid-feedback\">{errors.productImagesUpload}</div>\r\n              </Form.Group>\r\n              <TextArrayField\r\n                name=\"productImages\"\r\n                label=\"Product Images\"\r\n                placeholder=\"Enter link for product image\"\r\n                message=\"No image links added yet\"\r\n                size=\"sm\"\r\n              />\r\n              <TextField name=\"name\" label=\"Product Name\" placeholder=\"Enter the product name\" />\r\n              <TextField\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                placeholder=\"Provide a product description\"\r\n                as=\"textarea\"\r\n              />\r\n              <SelectField\r\n                label=\"Category\"\r\n                options={productCategories.map((category) => category.name)}\r\n                name=\"category\"\r\n              />\r\n              <Row>\r\n                <Col xs={12} sm={4}>\r\n                  <TextField\r\n                    name=\"price\"\r\n                    label=\"Price (in Rs.)\"\r\n                    placeholder=\"Enter the price\"\r\n                    type=\"number\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={4}>\r\n                  <TextField\r\n                    name=\"countInStock\"\r\n                    label=\"Count in stock\"\r\n                    placeholder=\"Available quantity\"\r\n                    type=\"number\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={4}>\r\n                  <SelectField\r\n                    label=\"Brand\"\r\n                    options={brands.map((brand) => brand.name)}\r\n                    name=\"brand\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <TextArrayOfObjectsField\r\n                name=\"affiliateLinks\"\r\n                label=\"Affiliate Links\"\r\n                message=\"No links added\"\r\n                fieldType={{ productPrice: \"input\" }}\r\n                fieldProps={{\r\n                  productPrice: { type: \"number\" },\r\n                }}\r\n                placeholder={{\r\n                  productProvider: \"Provider's Name\",\r\n                  productId: \"ID, eg. ASIN\",\r\n                  productLink: \"Affiliate Link\",\r\n                  productPrice: \"Provider's price\",\r\n                }}\r\n                keys={[\"productProvider\", \"productLink\", \"productId\", \"productPrice\"]}\r\n              />\r\n              <CheckBoxOptions\r\n                label=\"Pet Type\"\r\n                options={pets.map((pet) => pet.name)}\r\n                name=\"petType\"\r\n              />\r\n              <TextField name=\"breedType\" label=\"Breed Type\" placeholder=\"Compatible breeds\" />\r\n              <TextField\r\n                name=\"weight\"\r\n                type=\"number\"\r\n                label=\"Weight (in grams)\"\r\n                placeholder=\"Weight\"\r\n              />\r\n              <Row>\r\n                <Col xs={12} sm={4}>\r\n                  <TextField\r\n                    name=\"size.length\"\r\n                    type=\"number\"\r\n                    label=\"Length (in cm)\"\r\n                    placeholder=\"Length\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={4}>\r\n                  <TextField\r\n                    name=\"size.height\"\r\n                    type=\"number\"\r\n                    label=\"Height (in cm)\"\r\n                    placeholder=\"Height\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={4}>\r\n                  <TextField\r\n                    name=\"size.width\"\r\n                    type=\"number\"\r\n                    label=\"Width (in cm)\"\r\n                    placeholder=\"Width\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"ageRange.min\"\r\n                    type=\"number\"\r\n                    label=\"Minimum age (in yrs)\"\r\n                    placeholder=\"Minimum Age\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"ageRange.max\"\r\n                    type=\"number\"\r\n                    label=\"Maximum age (in yrs)\"\r\n                    placeholder=\"Maximum Age\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <CheckBox name=\"isVeg\" label=\"This product is vegetarian\" />\r\n              {error && (\r\n                <Alert className=\"my-3\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isAdded && (\r\n                <Alert className=\"my-3\" variant=\"success\">\r\n                  Product successfully added\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={loading}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                {loading ? \"Adding\" : \"Add\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n// Actions\r\nimport { approveProduct } from \"redux/actions/product\";\r\n\r\nconst ApproveProduct = ({ show, onHide, productId, name }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.product);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Approve this product</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to approve {name}?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={loading}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(approveProduct(productId));\r\n            onHide();\r\n          }}\r\n        >\r\n          {loading ? \"Approving\" : \"Approve\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ApproveProduct;\r\n","// Dependencies\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Alert, Button, Row, Col, Card, Modal } from \"react-bootstrap\";\r\nimport { Formik, Field } from \"formik\";\r\n\r\n// Helpers\r\nimport { product as initialValues } from \"helpers/initialValues\";\r\nimport { product as validationSchema } from \"helpers/validationSchemas\";\r\nimport { updateProduct as handleSubmit } from \"helpers/handleSubmit\";\r\n\r\n// Components\r\nimport { SelectField, TextArrayField, TextArrayOfObjectsField } from \"components/InputFields.jsx\";\r\n\r\n// Actions\r\nimport { editProduct } from \"redux/actions/product\";\r\n\r\nconst EditProduct = ({ show, onHide, product, productId }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isUpdated } = useSelector((state) => state.product);\r\n  const { productCategories } = useSelector((state) => state.category);\r\n  const { pets } = useSelector((state) => state.pet);\r\n  const { brands } = useSelector((state) => state.brand);\r\n\r\n  const MAX_IMAGES = 7;\r\n  const spaceLeft = MAX_IMAGES - product.productImages.length;\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"xl\">\r\n      <Modal.Header>\r\n        <Modal.Title>Edit Product</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues(product)}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          const fd = handleSubmit(values, product);\r\n          dispatch(editProduct(fd, productId));\r\n        }}\r\n      >\r\n        {({ values, touched, errors, handleSubmit, setErrors, setFieldValue }) => (\r\n          <Form>\r\n            <Modal.Body>\r\n              <Form.Group className=\"mb-3\">\r\n                <h4>Images</h4>\r\n                <Form.Text>\r\n                  Choose between either uploading images or putting links. If you choose both, the\r\n                  links will get priority\r\n                </Form.Text>\r\n                {product.productImages.length > 0 ? (\r\n                  <Row>\r\n                    {product.productImages.map((image, index) => (\r\n                      <Col\r\n                        key={image}\r\n                        xs={6}\r\n                        md={4}\r\n                        lg={3}\r\n                        className=\"my-2 d-flex align-items-center justify-content-center\"\r\n                      >\r\n                        <ImageCard image={image} index={index} product={product} />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                ) : (\r\n                  <p>You have no images!</p>\r\n                )}\r\n                {spaceLeft ? (\r\n                  <>\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"productImagesUpload\"\r\n                      className={`form-control ${!!errors.productImagesUpload ? \"is-invalid\" : \"\"}`}\r\n                      multiple\r\n                      onChange={(e) => {\r\n                        if (e.currentTarget.files.length > spaceLeft)\r\n                          return setErrors({\r\n                            productImagesUpload: `You can only upload ${spaceLeft} more images`,\r\n                          });\r\n                        setFieldValue(\"productImagesUpload\", e.currentTarget.files);\r\n                      }}\r\n                    />\r\n                    <div className=\"invalid-feedback\">{errors.productImagesUpload}</div>\r\n                  </>\r\n                ) : (\r\n                  <p>You can't upload any more images</p>\r\n                )}\r\n              </Form.Group>\r\n              <TextArrayField\r\n                name=\"productImages\"\r\n                label=\"Product Images\"\r\n                placeholder=\"Enter link for product image\"\r\n                message=\"No image links added yet\"\r\n                size=\"sm\"\r\n              />\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"name\">Product Name</Form.Label>\r\n                <Field\r\n                  name=\"name\"\r\n                  className={`form-control ${touched.name && !!errors.name ? \"is-invalid\" : \"\"}`}\r\n                  value={values.name}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.name}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"description\">Description</Form.Label>\r\n                <Field\r\n                  name=\"description\"\r\n                  className={`form-control ${\r\n                    touched.description && !!errors.description ? \"is-invalid\" : \"\"\r\n                  }`}\r\n                  as=\"textarea\"\r\n                  value={values.description}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.description}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"category\">Category</Form.Label>\r\n                    <Field\r\n                      as=\"select\"\r\n                      name=\"category\"\r\n                      className={`form-control ${\r\n                        touched.category && !!errors.category ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                    >\r\n                      {productCategories.map((category, index) => (\r\n                        <option key={index} value={category.name}>\r\n                          {category.name}\r\n                        </option>\r\n                      ))}\r\n                    </Field>\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.category}</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"seller\">Seller ref (Directory only)</Form.Label>\r\n                    <Field\r\n                      name=\"seller\"\r\n                      className={`form-control ${\r\n                        touched.seller && !!errors.seller ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.seller}</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} sm={4}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"price\">Price</Form.Label>\r\n                    <Field\r\n                      name=\"price\"\r\n                      className={`form-control ${\r\n                        touched.price && !!errors.price ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      type=\"number\"\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.price}</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={12} sm={4}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"countInStock\">Count in stock</Form.Label>\r\n                    <Field\r\n                      name=\"countInStock\"\r\n                      className={`form-control ${\r\n                        touched.countInStock && !!errors.countInStock ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      type=\"number\"\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.countInStock}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={12} sm={4}>\r\n                  <SelectField\r\n                    label=\"Brand\"\r\n                    options={brands.map((brand) => brand.name)}\r\n                    name=\"brand\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <TextArrayOfObjectsField\r\n                name=\"affiliateLinks\"\r\n                label=\"Affiliate Links\"\r\n                message=\"No links added\"\r\n                fieldType={{ productPrice: \"input\" }}\r\n                fieldProps={{\r\n                  productPrice: { type: \"number\" },\r\n                }}\r\n                placeholder={{\r\n                  productProvider: \"Provider's Name\",\r\n                  productId: \"Product ID, eg. ASIN\",\r\n                  productLink: \"Affiliate Link\",\r\n                  productPrice: \"Price at Provider's Website\",\r\n                }}\r\n                keys={[\"productProvider\", \"productLink\", \"productId\", \"productPrice\"]}\r\n              />\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"petType\">Pet Type</Form.Label>\r\n                <div>\r\n                  {pets.map((pet, index) => (\r\n                    <Field\r\n                      name=\"petType\"\r\n                      key={index}\r\n                      as={Form.Check}\r\n                      className=\"form-check-inline\"\r\n                      checked={values.petType.includes(pet.name)}\r\n                      type=\"checkbox\"\r\n                      value={pet.name}\r\n                      label={pet.name}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"breedType\">Breed Type</Form.Label>\r\n                <Field name=\"breedType\" as={Form.Control} value={values.breedType} />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.breedType}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"weight\">Weight (in grams)</Form.Label>\r\n                <Field name=\"weight\" as={Form.Control} type=\"number\" value={values.weight} />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.weight}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col xs={12} sm={4}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"size.length\">Length (in cms)</Form.Label>\r\n                    <Field name=\"size.length\" as={Form.Control} type=\"number\" />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.size?.length}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={12} sm={4}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"size.height\">Height (in cms)</Form.Label>\r\n                    <Field name=\"size.height\" as={Form.Control} type=\"number\" />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.size?.height}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={12} sm={4}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"size.width\">Width (in cms)</Form.Label>\r\n                    <Field name=\"size.width\" as={Form.Control} type=\"number\" />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.size?.width}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"ageRange.min\">Minimum Age (in yrs)</Form.Label>\r\n                    <Field name=\"ageRange.min\" as={Form.Control} type=\"number\" />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.ageRange?.min}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"max\">Maximum Age (in yrs)</Form.Label>\r\n                    <Field name=\"ageRange.max\" as={Form.Control} type=\"number\" />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.ageRange?.max}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Form.Group className=\"mb-3\">\r\n                <Field\r\n                  name=\"isVeg\"\r\n                  as={Form.Check}\r\n                  checked={values.isVeg}\r\n                  label=\"This product is vegetarian\"\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.isVeg}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              {error && (\r\n                <Alert className=\"my-1\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isUpdated && (\r\n                <Alert className=\"my-1\" variant=\"success\">\r\n                  Product has been updated succesfully\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={loading}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                {loading ? \"Updating\" : \"Update\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ImageCard = ({ image, index, product }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.product);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <Card style={{ width: \"10rem\" }}>\r\n      <Card.Img variant=\"top\" src={image} />\r\n      <Card.Body className=\"d-flex justify-content-center align-items-center\">\r\n        <Button variant=\"danger\" onClick={handleShow}>\r\n          Delete\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Delete image</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Are you sure you want to delete this image?</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"success\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              disabled={loading}\r\n              onClick={(e) => {\r\n                const productImages = [...product.productImages];\r\n                productImages.splice(index, 1);\r\n                const fd = new FormData();\r\n                fd.append(\"productImages\", productImages);\r\n                dispatch(editProduct(fd, product._id));\r\n                handleClose();\r\n              }}\r\n            >\r\n              Yes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n// Actions\r\nimport { removeProduct } from \"redux/actions/product\";\r\n\r\nconst RemoveProduct = ({ show, onHide, productId, name }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.product);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Remove this product</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to remove {name}?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"success\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={loading}\r\n          variant=\"danger\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(removeProduct(productId));\r\n            onHide();\r\n          }}\r\n        >\r\n          {loading ? \"Deleting\" : \"Delete\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveProduct;\r\n","// Dependencies\r\nimport { useState, useEffect } from \"react\";\r\nimport { Form, Table, Button } from \"react-bootstrap\";\r\nimport {\r\n  FaCheck,\r\n  FaCopy,\r\n  FaDotCircle,\r\n  FaExternalLinkAlt,\r\n  FaPencilAlt,\r\n  FaTimes,\r\n} from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport AddProduct from \"./AddProduct.jsx\";\r\nimport ApproveProduct from \"./ApproveProduct.jsx\";\r\nimport EditProduct from \"./EditProduct.jsx\";\r\nimport RemoveProduct from \"./RemoveProduct.jsx\";\r\n\r\n// Helpers\r\nimport convertTime from \"helpers/convertTime\";\r\n\r\n// Actions\r\nimport { getAllProducts } from \"redux/actions/product\";\r\n\r\nconst ProductsDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const { products } = useSelector((state) => state.product);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllProducts());\r\n  }, [dispatch]);\r\n\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const showAddDialog = () => setAddDialog(true);\r\n  const hideAddDialog = () => setAddDialog(false);\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"name\");\r\n\r\n  return (\r\n    <div className=\"products-dashboard\">\r\n      <div className=\"d-sm-flex justify-content-between mb-3\">\r\n        <Button onClick={showAddDialog} className=\"mb-3 mb-sm-0\">\r\n          Add a new product\r\n        </Button>\r\n        <div className=\"d-flex my-auto\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={searchValue}\r\n            placeholder=\"Search for...\"\r\n            onChange={(e) => setSearchValue(e.currentTarget.value)}\r\n            style={{ width: \"200px\", height: \"40px\" }}\r\n          />\r\n          <Form.Select\r\n            value={searchKey}\r\n            onChange={(e) => setSearchKey(e.currentTarget.value)}\r\n            style={{ width: \"100px\", height: \"40px\" }}\r\n          >\r\n            <option value=\"name\">Name</option>\r\n            <option value=\"description\">Description</option>\r\n            <option value=\"seller\">Seller ID</option>\r\n          </Form.Select>\r\n        </div>\r\n      </div>\r\n      <AddProduct show={addDialog} onHide={hideAddDialog} />\r\n      {products?.length > 0 ? (\r\n        <Table responsive size=\"sm\" className=\"table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Actions</th>\r\n              <th>Product Images</th>\r\n              <th>Product Name</th>\r\n              <th>Description</th>\r\n              <th>Seller</th>\r\n              <th>Price</th>\r\n              <th>Count in stock</th>\r\n              <th>Link</th>\r\n              <th>Category</th>\r\n              <th>Pet Type</th>\r\n              <th>Breed Type</th>\r\n              <th>Weight</th>\r\n              <th>Size</th>\r\n              <th>Age Range</th>\r\n              <th>Vegetarian</th>\r\n              <th>Date of Approval</th>\r\n              <th>Date of Creation</th>\r\n              <th>Date of Updation</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products\r\n              .filter((product) =>\r\n                product[searchKey]?.toLowerCase().includes(searchValue.toLowerCase())\r\n              )\r\n              .map((product, index) => (\r\n                <ProductRow key={index} product={product} index={index} />\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <h3>No products found</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProductRow = ({ product, index }) => {\r\n  const [approveDialog, setApproveDialog] = useState(false);\r\n  const [editDialog, setEditDialog] = useState(false);\r\n  const [removeDialog, setRemoveDialog] = useState(false);\r\n  const showApproveDialog = () => setApproveDialog(true);\r\n  const showEditDialog = () => setEditDialog(true);\r\n  const showRemoveDialog = () => setRemoveDialog(true);\r\n  const hideApproveDialog = () => setApproveDialog(false);\r\n  const hideEditDialog = () => setEditDialog(false);\r\n  const hideRemoveDialog = () => setRemoveDialog(false);\r\n\r\n  return (\r\n    <tr>\r\n      <td>{index}</td>\r\n      <td>\r\n        <div style={{ width: \"110px\" }}>\r\n          <p className=\"text-success\" style={{ cursor: \"pointer\" }} onClick={showEditDialog}>\r\n            <FaPencilAlt /> Edit\r\n          </p>\r\n          <EditProduct\r\n            show={editDialog}\r\n            onHide={hideEditDialog}\r\n            productId={product._id}\r\n            product={product}\r\n          />\r\n          <p className=\"text-danger\" style={{ cursor: \"pointer\" }} onClick={showRemoveDialog}>\r\n            <FaTimes /> Delete\r\n          </p>\r\n          <RemoveProduct\r\n            show={removeDialog}\r\n            onHide={hideRemoveDialog}\r\n            productId={product._id}\r\n            name={product.name}\r\n          />\r\n          <p\r\n            className=\"text-secondary\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => navigator.clipboard.writeText(product._id)}\r\n          >\r\n            <FaCopy /> Copy ID\r\n          </p>\r\n          {product.isApproved ? (\r\n            <div className=\"text-success\">\r\n              <FaCheck /> Approved\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div\r\n                onClick={showApproveDialog}\r\n                className=\"text-danger\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <FaTimes /> Approve\r\n              </div>\r\n              <ApproveProduct\r\n                show={approveDialog}\r\n                onHide={hideApproveDialog}\r\n                productId={product._id}\r\n                name={product.name}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <a href={product.productImages[0]}>\r\n          <img\r\n            src={product.productImages[0] || \"/assets/placeholders/product.png\"}\r\n            alt=\"Product\"\r\n            height=\"60px\"\r\n          />\r\n        </a>\r\n      </td>\r\n      <td>{product.name}</td>\r\n      <td>\r\n        {product.description.length > 60\r\n          ? `${product.description.substring(0, 60)}...`\r\n          : product.description}\r\n      </td>\r\n      <td>\r\n        {product.seller && (\r\n          <p\r\n            className=\"text-secondary\"\r\n            style={{ cursor: \"pointer\", width: \"90px\" }}\r\n            onClick={() => navigator.clipboard.writeText(product.seller._id)}\r\n          >\r\n            <FaCopy /> Copy ID\r\n          </p>\r\n        )}\r\n      </td>\r\n      <td>₹{product.price}</td>\r\n      <td>{product.countInStock}</td>\r\n      <td style={{ maxWidth: \"110px\", wordWrap: \"break-word\" }}>\r\n        {product.link && (\r\n          <a href={product.link} target=\"_blank\" rel=\"noreferrer\">\r\n            <FaExternalLinkAlt /> {product.link}\r\n          </a>\r\n        )}\r\n      </td>\r\n      <td>{product.category}</td>\r\n      <td style={{ minWidth: \"110px\" }}>{product.petType?.join(\", \")}</td>\r\n      <td>{product.breedType}</td>\r\n      <td style={{ minWidth: \"110px\" }}>\r\n        {product.weight === 0 ? \"N/A\" : `${product.weight} grams`}\r\n      </td>\r\n      <td style={{ minWidth: \"110px\" }}>\r\n        {product.size.length === 0 && product.size.height === 0 && product.size.width === 0\r\n          ? \"N/A\"\r\n          : `${product.size?.length}cm x ${product.size?.height}cm x ${product.size?.width}cm`}\r\n      </td>\r\n      <td>\r\n        {product.ageRange.min === 0 && product.ageRange.max === 0\r\n          ? \"All ages\"\r\n          : `${product.ageRange?.min}-${product.ageRange?.max} yrs`}\r\n      </td>\r\n      <td>\r\n        {product.isVeg ? (\r\n          <FaDotCircle className=\"text-success\" />\r\n        ) : (\r\n          <FaDotCircle className=\"text-danger\" />\r\n        )}\r\n      </td>\r\n      <td>{convertTime(product.approvedAt)}</td>\r\n      <td>{convertTime(product.createdAt)}</td>\r\n      <td>{convertTime(product.updatedAt)}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ProductsDashboard;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Modal, Row, Col, Alert, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\n\r\n// Components\r\nimport { TextField, SelectField, CheckBoxOptions } from \"components/InputFields.jsx\";\r\n\r\n// Config\r\nimport { days } from \"config.json\";\r\n\r\n// Helpers\r\nimport { service as initialValues } from \"helpers/initialValues\";\r\nimport { service as validationSchema } from \"helpers/validationSchemas\";\r\nimport { newService as handleSubmit } from \"helpers/handleSubmit\";\r\n\r\n// Actions\r\nimport { addService } from \"redux/actions/service\";\r\n\r\nconst AddService = ({ show, onHide }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isAdded } = useSelector((state) => state.service);\r\n  const { serviceCategories } = useSelector((state) => state.category);\r\n  const { pets } = useSelector((state) => state.pet);\r\n\r\n  const MAX_IMAGES = 5;\r\n  const spaceLeft = MAX_IMAGES;\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Add a new service</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues()}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          const fd = handleSubmit(values);\r\n          dispatch(addService(fd));\r\n        }}\r\n      >\r\n        {({ errors, setErrors, setFieldValue, handleSubmit }) => (\r\n          <Form>\r\n            <Modal.Body>\r\n              <Form.Group className=\"mb-3\">\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"serviceImages\"\r\n                  className={`form-control ${!!errors.serviceImages ? \"is-invalid\" : \"\"}`}\r\n                  multiple\r\n                  onChange={(e) => {\r\n                    if (e.currentTarget.files.length > spaceLeft)\r\n                      return setErrors({\r\n                        serviceImages: `You can only upload upto ${spaceLeft} images`,\r\n                      });\r\n                    setFieldValue(\"serviceImages\", e.currentTarget.files);\r\n                  }}\r\n                />\r\n                <div className=\"invalid-feedback\">{errors.serviceImages}</div>\r\n              </Form.Group>\r\n              <TextField name=\"name\" label=\"Service Name\" placeholder=\"Enter the service name\" />\r\n              <TextField\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                placeholder=\"Provide a service description\"\r\n                as=\"textarea\"\r\n              />\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"price\"\r\n                    label=\"Price (in Rs.)\"\r\n                    placeholder=\"Price of this service\"\r\n                    type=\"number\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <SelectField\r\n                    label=\"Category\"\r\n                    options={serviceCategories.map((category) => category.name)}\r\n                    name=\"category\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <TextField\r\n                name=\"address\"\r\n                label=\"Address\"\r\n                placeholder=\"Provide the address for this service\"\r\n              />\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField name=\"timings.from\" label=\"From\" type=\"time\" />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField name=\"timings.to\" label=\"To\" type=\"time\" />\r\n                </Col>\r\n              </Row>\r\n              <CheckBoxOptions label=\"Days\" options={days} name=\"days\" />\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"nameOfIncharge\"\r\n                    label=\"Name of Incharge\"\r\n                    placeholder=\"Enter the name of the incharge\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"numberOfIncharge\"\r\n                    label=\"Number of Incharge\"\r\n                    placeholder=\"Enter the number of the incharge\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <CheckBoxOptions\r\n                label=\"Pet Type\"\r\n                options={pets.map((pet) => pet.name)}\r\n                name=\"petType\"\r\n              />\r\n              <TextField name=\"breedType\" label=\"Breed Type\" placeholder=\"Compatible breeds\" />\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"ageRange.min\"\r\n                    type=\"number\"\r\n                    label=\"Minimum age (in yrs)\"\r\n                    placeholder=\"Minimum Age\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"ageRange.max\"\r\n                    type=\"number\"\r\n                    label=\"Maximum age (in yrs)\"\r\n                    placeholder=\"Maximum Age\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              {error && (\r\n                <Alert className=\"my-3\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isAdded && (\r\n                <Alert className=\"my-3\" variant=\"success\">\r\n                  Service successfully added\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={loading}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                {loading ? \"Adding\" : \"Add\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddService;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n// Actions\r\nimport { approveService } from \"redux/actions/service\";\r\n\r\nconst ApproveService = ({ show, onHide, serviceId, name }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.service);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Approve this service</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to approve {name}?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={loading}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(approveService(serviceId));\r\n            onHide();\r\n          }}\r\n        >\r\n          {loading ? \"Approving\" : \"Approve\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ApproveService;\r\n","// Dependencies\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Alert, Button, Row, Col, Card, Modal } from \"react-bootstrap\";\r\nimport { Formik, Field } from \"formik\";\r\n\r\n// Config\r\nimport { days } from \"config.json\";\r\n\r\n// Components\r\nimport { TextField } from \"components/InputFields.jsx\";\r\n\r\n// Helpers\r\nimport { service as initialValues } from \"helpers/initialValues\";\r\nimport { service as validationSchema } from \"helpers/validationSchemas\";\r\nimport { updateService as handleSubmit } from \"helpers/handleSubmit\";\r\n\r\n// Actions\r\nimport { editService } from \"redux/actions/service\";\r\n\r\nconst EditService = ({ show, onHide, service, serviceId }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isUpdated } = useSelector((state) => state.service);\r\n  const { serviceCategories } = useSelector((state) => state.category);\r\n  const { pets } = useSelector((state) => state.pet);\r\n\r\n  const MAX_IMAGES = 5;\r\n  const spaceLeft = MAX_IMAGES - service.serviceImages.length;\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Edit Service</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={initialValues(service)}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n          const fd = handleSubmit(values, service);\r\n          dispatch(editService(fd, serviceId));\r\n        }}\r\n      >\r\n        {({ values, errors, handleSubmit, setErrors, setFieldValue }) => (\r\n          <Form>\r\n            <Modal.Body>\r\n              <Form.Group className=\"mb-3\">\r\n                <h4>Images</h4>\r\n                {service.serviceImages.length > 0 ? (\r\n                  <Row>\r\n                    {service.serviceImages.map((image, index) => (\r\n                      <Col\r\n                        key={image}\r\n                        xs={6}\r\n                        className=\"my-2 d-flex align-items-center justify-content-center\"\r\n                      >\r\n                        <ImageCard image={image} index={index} service={service} />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                ) : (\r\n                  <p>You have no images!</p>\r\n                )}\r\n                {spaceLeft ? (\r\n                  <>\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"serviceImages\"\r\n                      className={`form-control ${!!errors.serviceImages ? \"is-invalid\" : \"\"}`}\r\n                      multiple\r\n                      onChange={(e) => {\r\n                        if (e.currentTarget.files.length > spaceLeft)\r\n                          return setErrors({\r\n                            serviceImages: `You can only upload ${spaceLeft} more images`,\r\n                          });\r\n                        setFieldValue(\"serviceImages\", e.currentTarget.files);\r\n                      }}\r\n                    />\r\n                    <div className=\"invalid-feedback\">{errors.serviceImages}</div>\r\n                  </>\r\n                ) : (\r\n                  <p>You can't upload any more images</p>\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"name\">Service Name</Form.Label>\r\n                <Field name=\"name\" as={Form.Control} value={values.name} />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.name}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"description\">Description</Form.Label>\r\n                <Field\r\n                  name=\"description\"\r\n                  className=\"form-control\"\r\n                  as=\"textarea\"\r\n                  value={values.description}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.description}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <TextField name=\"seller\" label=\"Seller ref (Directory only)\" />\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"price\">Price</Form.Label>\r\n                    <Field name=\"price\" as={Form.Control} type=\"number\" value={values.price} />\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.price}</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"category\">Category</Form.Label>\r\n                    <Field as=\"select\" name=\"category\" className=\"form-control\">\r\n                      {serviceCategories.map((category, index) => (\r\n                        <option key={index} value={category.name}>\r\n                          {category.name}\r\n                        </option>\r\n                      ))}\r\n                    </Field>\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.category}</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField name=\"timings.from\" label=\"From\" type=\"time\" />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField name=\"timings.to\" label=\"To\" type=\"time\" />\r\n                </Col>\r\n              </Row>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"days\">Days</Form.Label>\r\n                <div>\r\n                  {days.map((opt, index) => (\r\n                    <Field\r\n                      name=\"days\"\r\n                      key={index}\r\n                      as={Form.Check}\r\n                      className=\"form-check-inline\"\r\n                      checked={values.days.includes(opt)}\r\n                      type=\"checkbox\"\r\n                      value={opt}\r\n                      label={opt}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"nameOfIncharge\"\r\n                    label=\"Name of Incharge\"\r\n                    placeholder=\"Enter the name of the incharge\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={6}>\r\n                  <TextField\r\n                    name=\"numberOfIncharge\"\r\n                    label=\"Number of Incharge\"\r\n                    placeholder=\"Enter the number of the incharge\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"petType\">Pet Type</Form.Label>\r\n                <div>\r\n                  {pets.map((pet, index) => (\r\n                    <Field\r\n                      name=\"petType\"\r\n                      key={index}\r\n                      as={Form.Check}\r\n                      className=\"form-check-inline\"\r\n                      checked={values.petType.includes(pet.name)}\r\n                      type=\"checkbox\"\r\n                      value={pet.name}\r\n                      label={pet.name}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"breedType\">Breed Type</Form.Label>\r\n                <Field name=\"breedType\" as={Form.Control} value={values.breedType} />\r\n                <Form.Control.Feedback type=\"invalid\">{errors.breedType}</Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col sm={12} md={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"ageRange.min\">Minimum Age (in yrs)</Form.Label>\r\n                    <Field name=\"ageRange.min\" as={Form.Control} type=\"number\" />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.ageRange?.min}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col sm={12} md={6}>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label htmlFor=\"max\">Maximum Age (in yrs)</Form.Label>\r\n                    <Field name=\"ageRange.max\" as={Form.Control} type=\"number\" />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.ageRange?.max}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              {error && (\r\n                <Alert className=\"my-3\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isUpdated && (\r\n                <Alert className=\"my-3\" variant=\"success\">\r\n                  Service successfully updated\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={loading}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                {loading ? \"Updating\" : \"Update\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ImageCard = ({ image, index, service }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.service);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <Card style={{ width: \"10rem\" }}>\r\n      <Card.Img variant=\"top\" src={image} />\r\n      <Card.Body className=\"d-flex justify-content-center align-items-center\">\r\n        <Button variant=\"danger\" onClick={handleShow}>\r\n          Delete\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Delete image</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Are you sure you want to delete this image?</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"success\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              disabled={loading}\r\n              onClick={(e) => {\r\n                const serviceImages = [...service?.serviceImages];\r\n                serviceImages.splice(index, 1);\r\n                const fd = new FormData();\r\n                fd.append(\"serviceImages\", serviceImages);\r\n                dispatch(editService(fd, service._id));\r\n                handleClose();\r\n              }}\r\n            >\r\n              Yes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EditService;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n// Actions\r\nimport { removeService } from \"redux/actions/service\";\r\n\r\nconst RemoveService = ({ show, onHide, serviceId, name }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.service);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Remove this service</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to remove {name}?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"success\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={loading}\r\n          variant=\"danger\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(removeService(serviceId));\r\n            onHide();\r\n          }}\r\n        >\r\n          {loading ? \"Deleting\" : \"Delete\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveService;\r\n","// Dependencies\r\nimport { useState, useEffect } from \"react\";\r\nimport { Form, Table, Button } from \"react-bootstrap\";\r\nimport { FaCheck, FaCopy, FaExternalLinkAlt, FaPencilAlt, FaTimes } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport AddService from \"./AddService.jsx\";\r\nimport ApproveService from \"./ApproveService.jsx\";\r\nimport EditService from \"./EditService.jsx\";\r\nimport RemoveService from \"./RemoveService.jsx\";\r\n\r\n// Helpers\r\nimport convertTime from \"helpers/convertTime\";\r\nimport { binaryToArray } from \"helpers/daysHandler.js\";\r\n\r\n// Actions\r\nimport { getAllServices } from \"redux/actions/service\";\r\n\r\nconst ServicesDashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const { services } = useSelector((state) => state.service);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllServices());\r\n  }, [dispatch]);\r\n\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const showAddDialog = () => setAddDialog(true);\r\n  const hideAddDialog = () => setAddDialog(false);\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"name\");\r\n\r\n  return (\r\n    <div className=\"services-dashboard\">\r\n      <div className=\"d-sm-flex justify-content-between mb-3\">\r\n        <Button onClick={showAddDialog} className=\"mb-3 mb-sm-0\">\r\n          Add a new service\r\n        </Button>\r\n        <div className=\"d-flex my-auto\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={searchValue}\r\n            placeholder=\"Search for...\"\r\n            onChange={(e) => setSearchValue(e.currentTarget.value)}\r\n            style={{ width: \"200px\", height: \"40px\" }}\r\n          />\r\n          <Form.Select\r\n            value={searchKey}\r\n            onChange={(e) => setSearchKey(e.currentTarget.value)}\r\n            style={{ width: \"100px\", height: \"40px\" }}\r\n          >\r\n            <option value=\"name\">Name</option>\r\n            <option value=\"description\">Description</option>\r\n            <option value=\"seller\">Seller ID</option>\r\n            <option value=\"nameOfIncharge\">Name of Incharge</option>\r\n            <option value=\"numberOfIncharge\">Number of Incharge</option>\r\n            <option value=\"category\">Category</option>\r\n          </Form.Select>\r\n        </div>\r\n      </div>\r\n      <AddService show={addDialog} onHide={hideAddDialog} />\r\n      {services?.length > 0 ? (\r\n        <Table responsive size=\"sm\" className=\"table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Actions</th>\r\n              <th>Service Images</th>\r\n              <th>Service Name</th>\r\n              <th>Description</th>\r\n              <th>Seller</th>\r\n              <th>Price</th>\r\n              <th>Days</th>\r\n              <th>Link</th>\r\n              <th>Category</th>\r\n              <th>Pet Type</th>\r\n              <th>Breed Type</th>\r\n              <th>Timings</th>\r\n              <th>Age Range</th>\r\n              <th>Date of Approval</th>\r\n              <th>Date of Creation</th>\r\n              <th>Date of Updation</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {services\r\n              .filter((service) =>\r\n                service[searchKey]?.toLowerCase().includes(searchValue.toLowerCase())\r\n              )\r\n              .map((service, index) => (\r\n                <ServiceRow key={index} service={service} index={index} />\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <h3>No services found</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ServiceRow = ({ service, index }) => {\r\n  const [approveDialog, setApproveDialog] = useState(false);\r\n  const [editDialog, setEditDialog] = useState(false);\r\n  const [removeDialog, setRemoveDialog] = useState(false);\r\n  const showApproveDialog = () => setApproveDialog(true);\r\n  const showEditDialog = () => setEditDialog(true);\r\n  const showRemoveDialog = () => setRemoveDialog(true);\r\n  const hideApproveDialog = () => setApproveDialog(false);\r\n  const hideEditDialog = () => setEditDialog(false);\r\n  const hideRemoveDialog = () => setRemoveDialog(false);\r\n\r\n  return (\r\n    <tr>\r\n      <td>{index}</td>\r\n      <td>\r\n        <div style={{ width: \"110px\" }}>\r\n          <p className=\"text-success\" style={{ cursor: \"pointer\" }} onClick={showEditDialog}>\r\n            <FaPencilAlt /> Edit\r\n          </p>\r\n          <EditService\r\n            show={editDialog}\r\n            onHide={hideEditDialog}\r\n            serviceId={service._id}\r\n            service={service}\r\n          />\r\n          <p className=\"text-danger\" style={{ cursor: \"pointer\" }} onClick={showRemoveDialog}>\r\n            <FaTimes /> Delete\r\n          </p>\r\n          <RemoveService\r\n            show={removeDialog}\r\n            onHide={hideRemoveDialog}\r\n            serviceId={service._id}\r\n            name={service.name}\r\n          />\r\n          <p\r\n            className=\"text-secondary\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => navigator.clipboard.writeText(service._id)}\r\n          >\r\n            <FaCopy /> Copy ID\r\n          </p>\r\n          {service.isApproved ? (\r\n            <div className=\"text-success\">\r\n              <FaCheck /> Approved\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div\r\n                onClick={showApproveDialog}\r\n                className=\"text-danger\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <FaTimes /> Approve\r\n              </div>\r\n              <ApproveService\r\n                show={approveDialog}\r\n                onHide={hideApproveDialog}\r\n                serviceId={service._id}\r\n                name={service.name}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <a href={service.serviceImages[0]}>\r\n          <img\r\n            src={service.serviceImages[0] || \"/assets/placeholders/service.png\"}\r\n            alt=\"Service\"\r\n            height=\"60px\"\r\n          />\r\n        </a>\r\n      </td>\r\n      <td>{service.name}</td>\r\n      <td>\r\n        {service.description.length > 60\r\n          ? `${service.description.substring(0, 60)}...`\r\n          : service.description}\r\n      </td>\r\n      <td>\r\n        {service.seller && (\r\n          <p\r\n            className=\"text-secondary\"\r\n            style={{ cursor: \"pointer\", width: \"90px\" }}\r\n            onClick={() => navigator.clipboard.writeText(service.seller._id)}\r\n          >\r\n            <FaCopy /> Copy ID\r\n          </p>\r\n        )}\r\n      </td>\r\n      <td>₹{service.price}</td>\r\n      <td style={{ width: \"150px\" }}>\r\n        {service.days === 127 ? \"Everyday\" : binaryToArray(service.days).join(\", \")}\r\n      </td>\r\n      <td>\r\n        {service.link && (\r\n          <a href={service.link} target=\"_blank\" rel=\"noreferrer\">\r\n            <FaExternalLinkAlt /> {service.link}\r\n          </a>\r\n        )}\r\n      </td>\r\n      <td>{service.category}</td>\r\n      <td style={{ minWidth: \"110px\" }}>{service.petType?.join(\", \")}</td>\r\n      <td>{service.breedType}</td>\r\n      <td style={{ minWidth: \"110px\" }}>\r\n        {service.timings.from === \"00:00\" && service.timings.to === \"00:00\"\r\n          ? \"All day\"\r\n          : `${service.timings?.from} to ${service.timings?.to}`}\r\n      </td>\r\n      <td>\r\n        {service.ageRange.min === 0 && service.ageRange.max === 0\r\n          ? \"All ages\"\r\n          : `${service.ageRange?.min}-${service.ageRange?.max} yrs`}\r\n      </td>\r\n      <td>{convertTime(service.approvedAt)}</td>\r\n      <td>{convertTime(service.createdAt)}</td>\r\n      <td>{convertTime(service.updatedAt)}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ServicesDashboard;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Modal, Alert, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Components\r\nimport { TextField, SelectField, CheckBoxOptions } from \"components/InputFields.jsx\";\r\n\r\n// Actions\r\nimport { addCategory } from \"redux/actions/category\";\r\n\r\nconst AddCategory = ({ show, onHide }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isAdded } = useSelector((state) => state.category);\r\n  const { pets } = useSelector((state) => state.pet);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Add a new category</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          description: \"\",\r\n          type: \"Product\",\r\n          pet: [],\r\n          image: \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          name: Yup.string().required(\"Category name is required\"),\r\n          type: Yup.string().required(\"Category type is required\"),\r\n          pet: Yup.array().min(1, \"Please pick atleast one pet type\"),\r\n        })}\r\n        onSubmit={(values) => dispatch(addCategory(values))}\r\n      >\r\n        {({ errors, handleSubmit }) => (\r\n          <Form>\r\n            <Modal.Body>\r\n              <TextField\r\n                name=\"image\"\r\n                label=\"Category image\"\r\n                placeholder=\"Enter the link to the image\"\r\n              />\r\n              <TextField name=\"name\" label=\"Category name\" placeholder=\"Enter the category name\" />\r\n              <TextField\r\n                name=\"description\"\r\n                label=\"Category description\"\r\n                placeholder=\"Enter the category description\"\r\n              />\r\n              <SelectField\r\n                name=\"type\"\r\n                label=\"Category type\"\r\n                options={[\"Product\", \"Service\", \"Directory\"]}\r\n                placeholder=\"Enter the category type\"\r\n              />\r\n              <CheckBoxOptions\r\n                name=\"pet\"\r\n                label=\"Pet type\"\r\n                options={pets?.map((pet) => pet.name)}\r\n                placeholder=\"Enter the pet type\"\r\n              />\r\n              {error && (\r\n                <Alert className=\"my-1\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isAdded && (\r\n                <Alert className=\"my-1\" variant=\"success\">\r\n                  Category has been added successfully\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={loading}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                {loading ? \"Adding\" : \"Add\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Modal, Alert, Button } from \"react-bootstrap\";\r\nimport { Formik, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Components\r\nimport { TextField, SelectField } from \"components/InputFields.jsx\";\r\n\r\n// Actions\r\nimport { editCategory } from \"redux/actions/category\";\r\n\r\nconst EditCategory = ({ show, onHide, categoryId, category }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isUpdated } = useSelector((state) => state.category);\r\n  const { pets } = useSelector((state) => state.pet);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Edit category</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={{\r\n          name: category.name,\r\n          description: category.description,\r\n          type: category.type,\r\n          pet: [...category.pet],\r\n          image: category.image,\r\n        }}\r\n        validationSchema={Yup.object({\r\n          name: Yup.string().required(\"Category name is required\"),\r\n          type: Yup.string().required(\"Category type is required\"),\r\n          pet: Yup.array().min(1, \"Please pick atleast one pet type\"),\r\n        })}\r\n        onSubmit={(values) => dispatch(editCategory(values, categoryId))}\r\n      >\r\n        {({ values, handleSubmit }) => (\r\n          <Form>\r\n            <Modal.Body>\r\n              <TextField\r\n                name=\"image\"\r\n                label=\"Category image\"\r\n                placeholder=\"Enter the link to the image\"\r\n              />\r\n              <TextField name=\"name\" label=\"Category name\" placeholder=\"Enter the category name\" />\r\n              <TextField\r\n                name=\"description\"\r\n                label=\"Category description\"\r\n                placeholder=\"Enter the category description\"\r\n              />\r\n              <SelectField\r\n                name=\"type\"\r\n                label=\"Category type\"\r\n                options={[\"Product\", \"Service\", \"Directory\"]}\r\n                placeholder=\"Enter the category type\"\r\n              />\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label htmlFor=\"pet\">Pet Type</Form.Label>\r\n                <div>\r\n                  {pets.map((pet, index) => (\r\n                    <Field\r\n                      name=\"pet\"\r\n                      key={index}\r\n                      as={Form.Check}\r\n                      className=\"form-check-inline\"\r\n                      checked={values.pet.includes(pet.name)}\r\n                      type=\"checkbox\"\r\n                      value={pet.name}\r\n                      label={pet.name}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </Form.Group>\r\n              {error && (\r\n                <Alert className=\"my-1\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isUpdated && (\r\n                <Alert className=\"my-1\" variant=\"success\">\r\n                  Category has been updated successfully\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={loading}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                {loading ? \"Updating\" : \"Update\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditCategory;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n// Actions\r\nimport { removeCategory } from \"redux/actions/category\";\r\n\r\nconst RemoveCategory = ({ show, onHide, categoryId, name }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.category);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Delete this category</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to remove {name}?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"success\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={loading}\r\n          variant=\"danger\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(removeCategory(categoryId));\r\n            onHide();\r\n          }}\r\n        >\r\n          {loading ? \"Deleting\" : \"Delete\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveCategory;\r\n","// Dependencies\r\nimport { useState } from \"react\";\r\nimport { Form, Table, Button } from \"react-bootstrap\";\r\nimport { FaCopy, FaPencilAlt, FaTimes } from \"react-icons/fa\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport AddCategory from \"./AddCategory.jsx\";\r\nimport EditCategory from \"./EditCategory.jsx\";\r\nimport RemoveCategory from \"./RemoveCategory.jsx\";\r\n\r\n// Helpers\r\nimport convertTime from \"helpers/convertTime\";\r\n\r\nconst CategoriesDashboard = () => {\r\n  const { categories } = useSelector((state) => state.category);\r\n\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const showAddDialog = () => setAddDialog(true);\r\n  const hideAddDialog = () => setAddDialog(false);\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"name\");\r\n\r\n  return (\r\n    <div className=\"categories-dashboard\">\r\n      <div className=\"d-sm-flex justify-content-between mb-3\">\r\n        <Button onClick={showAddDialog} className=\"mb-3 mb-sm-0\">\r\n          Add a new category\r\n        </Button>\r\n        <div className=\"d-flex my-auto\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={searchValue}\r\n            placeholder=\"Search for...\"\r\n            onChange={(e) => setSearchValue(e.currentTarget.value)}\r\n            style={{ width: \"200px\", height: \"40px\" }}\r\n          />\r\n          <Form.Select\r\n            value={searchKey}\r\n            onChange={(e) => setSearchKey(e.currentTarget.value)}\r\n            style={{ width: \"100px\", height: \"40px\" }}\r\n          >\r\n            <option value=\"name\">Name</option>\r\n            <option value=\"description\">Description</option>\r\n            <option value=\"type\">Type</option>\r\n            <option value=\"pet\">Pet</option>\r\n          </Form.Select>\r\n        </div>\r\n      </div>\r\n      <AddCategory show={addDialog} onHide={hideAddDialog} />\r\n      {categories?.length > 0 ? (\r\n        <Table responsive size=\"sm\" className=\"table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Actions</th>\r\n              <th>Image</th>\r\n              <th>Category Name</th>\r\n              <th>Description</th>\r\n              <th>Type</th>\r\n              <th>Pet</th>\r\n              <th>Documents</th>\r\n              <th>Date of Creation</th>\r\n              <th>Date of Updation</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {categories\r\n              .filter((category) =>\r\n                category[searchKey]?.toLowerCase().includes(searchValue.toLowerCase())\r\n              )\r\n              .map((category, index) => (\r\n                <CategoryRow key={index} category={category} index={index} />\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <h3>No categories found</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CategoryRow = ({ category, index }) => {\r\n  const [editDialog, setEditDialog] = useState(false);\r\n  const [removeDialog, setRemoveDialog] = useState(false);\r\n  const showEditDialog = () => setEditDialog(true);\r\n  const showRemoveDialog = () => setRemoveDialog(true);\r\n  const hideEditDialog = () => setEditDialog(false);\r\n  const hideRemoveDialog = () => setRemoveDialog(false);\r\n\r\n  return (\r\n    <tr>\r\n      <td>{index}</td>\r\n      <td>\r\n        <div style={{ width: \"90px\" }}>\r\n          <p className=\"text-success\" style={{ cursor: \"pointer\" }} onClick={showEditDialog}>\r\n            <FaPencilAlt /> Edit\r\n          </p>\r\n          <EditCategory\r\n            show={editDialog}\r\n            onHide={hideEditDialog}\r\n            categoryId={category._id}\r\n            category={category}\r\n          />\r\n          <p className=\"text-danger\" style={{ cursor: \"pointer\" }} onClick={showRemoveDialog}>\r\n            <FaTimes /> Delete\r\n          </p>\r\n          <RemoveCategory\r\n            show={removeDialog}\r\n            onHide={hideRemoveDialog}\r\n            categoryId={category._id}\r\n            name={category.name}\r\n          />\r\n          <p\r\n            className=\"text-secondary\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => navigator.clipboard.writeText(category._id)}\r\n          >\r\n            <FaCopy /> Copy ID\r\n          </p>\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <a href={category.image || null}>\r\n          <img\r\n            src={category.image || \"/assets/placeholders/category.png\"}\r\n            alt=\"Category\"\r\n            height=\"60px\"\r\n          />\r\n        </a>\r\n      </td>\r\n      <td>{category.name}</td>\r\n      <td>{category.description}</td>\r\n      <td>{category.type}</td>\r\n      <td>{category.pet.join(\", \")}</td>\r\n      <td>{category.docs?.map((doc) => doc.name || doc.storeName).join(\", \")}</td>\r\n      <td>{convertTime(category.createdAt)}</td>\r\n      <td>{convertTime(category.updatedAt)}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default CategoriesDashboard;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Modal, Row, Col, Alert, Button } from \"react-bootstrap\";\r\nimport { Formik, FieldArray, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Components\r\nimport { TextField } from \"components/InputFields.jsx\";\r\n\r\n// Actions\r\nimport { addPet } from \"redux/actions/pet\";\r\n\r\nconst AddPet = ({ show, onHide }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isAdded } = useSelector((state) => state.pet);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Add a new pet</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          description: \"\",\r\n          breeds: [],\r\n          image: \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          name: Yup.string().required(\"Pet name is required\"),\r\n        })}\r\n        onSubmit={(values) => dispatch(addPet(values))}\r\n      >\r\n        {({ values, touched, errors, handleSubmit }) => (\r\n          <Form>\r\n            <Modal.Body>\r\n              <TextField name=\"image\" label=\"Pet image\" placeholder=\"Enter the link to the image\" />\r\n              <TextField name=\"name\" label=\"Pet name\" placeholder=\"Enter the pet name\" />\r\n              <TextField\r\n                name=\"description\"\r\n                label=\"Pet description\"\r\n                placeholder=\"Enter the pet description\"\r\n              />\r\n              <Form.Group className=\"mb-3\">\r\n                <FieldArray name=\"breeds\">\r\n                  {({ push, remove }) => (\r\n                    <div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <h4>Breeds</h4>\r\n                        <button\r\n                          className=\"btn btn-success\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            push(\"\");\r\n                          }}\r\n                        >\r\n                          Add\r\n                        </button>\r\n                      </div>\r\n                      {values.breeds.map((_, index) => {\r\n                        return (\r\n                          <Row className=\"mt-3\" key={index}>\r\n                            <Col md={10}>\r\n                              <Form.Group>\r\n                                <Field\r\n                                  name={`breeds.${index}`}\r\n                                  placeholder=\"Breed name\"\r\n                                  className={`form-control ${\r\n                                    touched.breeds?.[index] && !!errors.breeds?.[index]\r\n                                      ? \"is-invalid\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                ></Field>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                  {errors.breeds?.[index]}\r\n                                </Form.Control.Feedback>\r\n                              </Form.Group>\r\n                            </Col>\r\n                            <Col md={2} className=\"d-flex flex-row-reverse\">\r\n                              <Form.Group>\r\n                                <button\r\n                                  className=\"btn btn-danger\"\r\n                                  onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    remove(index);\r\n                                  }}\r\n                                >\r\n                                  Remove\r\n                                </button>\r\n                              </Form.Group>\r\n                            </Col>\r\n                          </Row>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                </FieldArray>\r\n                {values.breeds.length === 0 && <p className=\"mt-3\">No breeds added!</p>}\r\n              </Form.Group>\r\n              {error && (\r\n                <Alert className=\"my-1\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isAdded && (\r\n                <Alert className=\"my-1\" variant=\"success\">\r\n                  Pet has been added successfully\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={loading}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                {loading ? \"Adding\" : \"Add\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddPet;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Modal, Row, Col, Alert, Button } from \"react-bootstrap\";\r\nimport { Formik, FieldArray, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Components\r\nimport { TextField } from \"components/InputFields.jsx\";\r\n\r\n// Actions\r\nimport { editPet } from \"redux/actions/pet\";\r\n\r\nconst EditPet = ({ show, onHide, petId, pet }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isUpdated } = useSelector((state) => state.pet);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Edit pet</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={{\r\n          name: pet.name,\r\n          description: pet.description,\r\n          breeds: [...pet.breeds],\r\n          image: pet.image,\r\n        }}\r\n        validationSchema={Yup.object({\r\n          name: Yup.string().required(\"Pet name is required\"),\r\n        })}\r\n        onSubmit={(values) => dispatch(editPet(values, petId))}\r\n      >\r\n        {({ values, touched, errors, handleSubmit }) => (\r\n          <Form>\r\n            <Modal.Body>\r\n              <TextField name=\"image\" label=\"Pet image\" placeholder=\"Enter the link to the image\" />\r\n              <TextField name=\"name\" label=\"Pet name\" placeholder=\"Enter the pet name\" />\r\n              <TextField\r\n                name=\"description\"\r\n                label=\"Pet description\"\r\n                placeholder=\"Enter the pet description\"\r\n              />\r\n              <Form.Group className=\"mb-3\">\r\n                <FieldArray name=\"breeds\">\r\n                  {({ push, remove }) => (\r\n                    <div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <h4>Breeds</h4>\r\n                        <button\r\n                          className=\"btn btn-success\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            push(\"\");\r\n                          }}\r\n                        >\r\n                          Add\r\n                        </button>\r\n                      </div>\r\n                      {values.breeds.map((_, index) => {\r\n                        return (\r\n                          <Row className=\"mt-3\" key={index}>\r\n                            <Col md={10}>\r\n                              <Form.Group>\r\n                                <Field\r\n                                  name={`breeds.${index}`}\r\n                                  placeholder=\"Breed name\"\r\n                                  className={`form-control ${\r\n                                    touched.breeds?.[index] && !!errors.breeds?.[index]\r\n                                      ? \"is-invalid\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                ></Field>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                  {errors.breeds?.[index]}\r\n                                </Form.Control.Feedback>\r\n                              </Form.Group>\r\n                            </Col>\r\n                            <Col md={2} className=\"d-flex flex-row-reverse\">\r\n                              <Form.Group>\r\n                                <button\r\n                                  className=\"btn btn-danger\"\r\n                                  onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    remove(index);\r\n                                  }}\r\n                                >\r\n                                  Remove\r\n                                </button>\r\n                              </Form.Group>\r\n                            </Col>\r\n                          </Row>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                </FieldArray>\r\n                {values.breeds.length === 0 && <p className=\"mt-3\">No breeds edited!</p>}\r\n              </Form.Group>\r\n              {error && (\r\n                <Alert className=\"my-1\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isUpdated && (\r\n                <Alert className=\"my-1\" variant=\"success\">\r\n                  Pet has been edited successfully\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={loading}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                {loading ? \"Updating\" : \"Update\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditPet;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n// Actions\r\nimport { removePet } from \"redux/actions/pet\";\r\n\r\nconst RemovePet = ({ show, onHide, petId, name }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.pet);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Delete this pet</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to remove {name}?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"success\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={loading}\r\n          variant=\"danger\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(removePet(petId));\r\n            onHide();\r\n          }}\r\n        >\r\n          {loading ? \"Deleting\" : \"Delete\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemovePet;\r\n","// Dependencies\r\nimport { useState } from \"react\";\r\nimport { Form, Table, Button } from \"react-bootstrap\";\r\nimport { FaCopy, FaPencilAlt, FaTimes } from \"react-icons/fa\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport AddPet from \"./AddPet.jsx\";\r\nimport EditPet from \"./EditPet.jsx\";\r\nimport RemovePet from \"./RemovePet.jsx\";\r\n\r\n// Helpers\r\nimport convertTime from \"helpers/convertTime\";\r\n\r\nconst PetsDashboard = () => {\r\n  const { pets } = useSelector((state) => state.pet);\r\n\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const showAddDialog = () => setAddDialog(true);\r\n  const hideAddDialog = () => setAddDialog(false);\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"name\");\r\n\r\n  return (\r\n    <div className=\"pets-dashboard\">\r\n      <div className=\"d-sm-flex justify-content-between mb-3\">\r\n        <Button onClick={showAddDialog} className=\"mb-3 mb-sm-0\">\r\n          Add a new pet\r\n        </Button>\r\n        <div className=\"d-flex my-auto\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={searchValue}\r\n            placeholder=\"Search for...\"\r\n            onChange={(e) => setSearchValue(e.currentTarget.value)}\r\n            style={{ width: \"200px\", height: \"40px\" }}\r\n          />\r\n          <Form.Select\r\n            value={searchKey}\r\n            onChange={(e) => setSearchKey(e.currentTarget.value)}\r\n            style={{ width: \"100px\", height: \"40px\" }}\r\n          >\r\n            <option value=\"name\">Name</option>\r\n            <option value=\"description\">Description</option>\r\n          </Form.Select>\r\n        </div>\r\n      </div>\r\n      <AddPet show={addDialog} onHide={hideAddDialog} />\r\n      {pets?.length > 0 ? (\r\n        <Table responsive size=\"sm\" className=\"table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Actions</th>\r\n              <th>Image</th>\r\n              <th>Pet Name</th>\r\n              <th>Description</th>\r\n              <th>Breeds</th>\r\n              <th>Categories</th>\r\n              <th>Date of Creation</th>\r\n              <th>Date of Updation</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {pets\r\n              .filter((pet) => pet[searchKey]?.toLowerCase().includes(searchValue.toLowerCase()))\r\n              .map((pet, index) => (\r\n                <PetRow key={index} pet={pet} index={index} />\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <h3>No pets found</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PetRow = ({ pet, index }) => {\r\n  const [editDialog, setEditDialog] = useState(false);\r\n  const [removeDialog, setRemoveDialog] = useState(false);\r\n  const showEditDialog = () => setEditDialog(true);\r\n  const showRemoveDialog = () => setRemoveDialog(true);\r\n  const hideEditDialog = () => setEditDialog(false);\r\n  const hideRemoveDialog = () => setRemoveDialog(false);\r\n\r\n  return (\r\n    <tr>\r\n      <td>{index}</td>\r\n      <td>\r\n        <div style={{ width: \"90px\" }}>\r\n          <p className=\"text-success\" style={{ cursor: \"pointer\" }} onClick={showEditDialog}>\r\n            <FaPencilAlt /> Edit\r\n          </p>\r\n          <EditPet show={editDialog} onHide={hideEditDialog} petId={pet._id} pet={pet} />\r\n          <p className=\"text-danger\" style={{ cursor: \"pointer\" }} onClick={showRemoveDialog}>\r\n            <FaTimes /> Delete\r\n          </p>\r\n          <RemovePet\r\n            show={removeDialog}\r\n            onHide={hideRemoveDialog}\r\n            petId={pet._id}\r\n            name={pet.name}\r\n          />\r\n          <p\r\n            className=\"text-secondary\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => navigator.clipboard.writeText(pet._id)}\r\n          >\r\n            <FaCopy /> Copy ID\r\n          </p>\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <a href={pet.image || null}>\r\n          <img src={pet.image || \"/assets/placeholders/pet.png\"} alt=\"Pet\" height=\"60px\" />\r\n        </a>\r\n      </td>\r\n      <td>{pet.name}</td>\r\n      <td>{pet.description}</td>\r\n      <td>{pet.breeds.join(\", \")}</td>\r\n      <td>{pet.categories?.map((category) => category.name).join(\", \")}</td>\r\n      <td>{convertTime(pet.createdAt)}</td>\r\n      <td>{convertTime(pet.updatedAt)}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default PetsDashboard;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Modal, Alert, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Components\r\nimport { TextField, TextArrayField } from \"components/InputFields.jsx\";\r\n\r\n// Actions\r\nimport { addBrand } from \"redux/actions/brand\";\r\n\r\nconst AddBrand = ({ show, onHide }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isAdded } = useSelector((state) => state.brand);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Add a new brand</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          description: \"\",\r\n          logo: \"\",\r\n          sellers: [],\r\n          images: [],\r\n        }}\r\n        validationSchema={Yup.object({\r\n          name: Yup.string().required(\"Brand name is required\"),\r\n          sellers: Yup.array().of(Yup.string().required(\"Seller ID is required\")),\r\n          images: Yup.array().of(Yup.string().required(\"Image link is required\")),\r\n        })}\r\n        onSubmit={(values) => dispatch(addBrand(values))}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <Form>\r\n            <Modal.Body>\r\n              <TextField name=\"logo\" label=\"Brand logo\" placeholder=\"Enter the link to the logo\" />\r\n              <TextField name=\"name\" label=\"Brand name\" placeholder=\"Enter the brand name\" />\r\n              <TextField\r\n                name=\"description\"\r\n                as=\"textarea\"\r\n                label=\"Brand description\"\r\n                placeholder=\"Enter the brand description\"\r\n              />\r\n              <TextArrayField\r\n                name=\"sellers\"\r\n                label=\"Sellers\"\r\n                placeholder=\"Enter Seller ID\"\r\n                message=\"No sellers added\"\r\n              />\r\n              <TextArrayField\r\n                name=\"images\"\r\n                label=\"Images\"\r\n                placeholder=\"Enter image link\"\r\n                message=\"No images added\"\r\n              />\r\n              {error && (\r\n                <Alert className=\"my-1\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isAdded && (\r\n                <Alert className=\"my-1\" variant=\"success\">\r\n                  Brand has been added successfully\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={loading}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                {loading ? \"Adding\" : \"Add\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddBrand;\r\n","import * as actionTypes from \"../constants/brand\";\r\nimport axios from \"axios\";\r\n\r\n// GET /api/brand/\r\nexport const getBrands = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_BRANDS_REQUEST });\r\n    const { data } = await axios.get(\"/api/brand\");\r\n    dispatch({ type: actionTypes.GET_BRANDS_SUCCESS, payload: data.brands });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_BRANDS_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// GET /api/brand/:id\r\nexport const getBrand = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_BRAND_REQUEST });\r\n    const { data } = await axios.get(`/api/brand/${id}`);\r\n    dispatch({ type: actionTypes.GET_BRAND_SUCCESS, payload: data.brand });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.GET_BRAND_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n/*\r\n * Admin routes\r\n */\r\n\r\n// POST /api/brand/add\r\nexport const addBrand = (brand) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.ADD_BRAND_REQUEST });\r\n    const { data } = await axios.post(\"/api/brand/add\", brand);\r\n    dispatch({ type: actionTypes.ADD_BRAND_SUCCESS, payload: data.brand });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.ADD_BRAND_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// PUT /api/brand/edit/:id\r\nexport const editBrand = (brand, id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.EDIT_BRAND_REQUEST });\r\n    const { data } = await axios.put(`/api/brand/edit/${id}`, brand);\r\n    dispatch({ type: actionTypes.EDIT_BRAND_SUCCESS, payload: data.brand });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.EDIT_BRAND_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\n// DEL /api/brand/remove/:id\r\nexport const removeBrand = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.REMOVE_BRAND_REQUEST });\r\n    const { data } = await axios.delete(`/api/brand/remove/${id}`);\r\n    dispatch({ type: actionTypes.REMOVE_BRAND_SUCCESS, payload: data.brand });\r\n  } catch (error) {\r\n    dispatch({ type: actionTypes.REMOVE_BRAND_FAIL, payload: error.response.data.error });\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.CLEAR_ERRORS });\r\n};\r\n\r\nexport const editBrandReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.EDIT_BRAND_RESET });\r\n};\r\n\r\nexport const addBrandReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.ADD_BRAND_RESET });\r\n};\r\n\r\nexport const removeBrandReset = () => async (dispatch) => {\r\n  dispatch({ type: actionTypes.REMOVE_BRAND_RESET });\r\n};\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Modal, Alert, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Components\r\nimport { TextField, TextArrayField } from \"components/InputFields.jsx\";\r\n\r\n// Actions\r\nimport { editBrand } from \"redux/actions/brand\";\r\n\r\nconst EditBrand = ({ show, onHide, brandId, brand }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, isUpdated } = useSelector((state) => state.brand);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Edit brand</Modal.Title>\r\n      </Modal.Header>\r\n      <Formik\r\n        initialValues={{\r\n          name: brand.name,\r\n          logo: brand.logo,\r\n          description: brand.description,\r\n          sellers: brand.sellers.map((brand) => brand._id),\r\n          images: [...brand.images],\r\n        }}\r\n        validationSchema={Yup.object({\r\n          name: Yup.string().required(\"Brand name is required\"),\r\n        })}\r\n        onSubmit={(values) => dispatch(editBrand(values, brandId))}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <Form>\r\n            <Modal.Body>\r\n              <TextField name=\"logo\" label=\"Brand logo\" placeholder=\"Enter the link to the logo\" />\r\n              <TextField name=\"name\" label=\"Brand name\" placeholder=\"Enter the brand name\" />\r\n              <TextField\r\n                name=\"description\"\r\n                label=\"Brand description\"\r\n                placeholder=\"Enter the brand description\"\r\n              />\r\n              <TextArrayField\r\n                name=\"sellers\"\r\n                label=\"Sellers\"\r\n                placeholder=\"Enter Seller ID\"\r\n                message=\"No sellers added\"\r\n              />\r\n              <TextArrayField\r\n                name=\"images\"\r\n                label=\"Images\"\r\n                placeholder=\"Enter image link\"\r\n                message=\"No images added\"\r\n              />\r\n              {error && (\r\n                <Alert className=\"my-1\" variant=\"danger\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              {isUpdated && (\r\n                <Alert className=\"my-1\" variant=\"success\">\r\n                  Brand has been edited successfully\r\n                </Alert>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={onHide}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={loading}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  handleSubmit();\r\n                }}\r\n              >\r\n                {loading ? \"Updating\" : \"Update\"}\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditBrand;\r\n","// Dependencies\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n// Actions\r\nimport { removeBrand } from \"redux/actions/brand\";\r\n\r\nconst RemoveBrand = ({ show, onHide, brandId, name }) => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.brand);\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide}>\r\n      <Modal.Header>\r\n        <Modal.Title>Delete this brand</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to remove {name}?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"success\" onClick={onHide}>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={loading}\r\n          variant=\"danger\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            dispatch(removeBrand(brandId));\r\n            onHide();\r\n          }}\r\n        >\r\n          {loading ? \"Deleting\" : \"Delete\"}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveBrand;\r\n","// Dependencies\r\nimport { useState } from \"react\";\r\nimport { Form, Table, Button } from \"react-bootstrap\";\r\nimport { FaCopy, FaPencilAlt, FaTimes } from \"react-icons/fa\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport AddBrand from \"./AddBrand.jsx\";\r\nimport EditBrand from \"./EditBrand.jsx\";\r\nimport RemoveBrand from \"./RemoveBrand.jsx\";\r\n\r\n// Helpers\r\nimport convertTime from \"helpers/convertTime\";\r\n\r\nconst BrandsDashboard = () => {\r\n  const { brands } = useSelector((state) => state.brand);\r\n\r\n  const [addDialog, setAddDialog] = useState(false);\r\n  const showAddDialog = () => setAddDialog(true);\r\n  const hideAddDialog = () => setAddDialog(false);\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchKey, setSearchKey] = useState(\"name\");\r\n\r\n  return (\r\n    <div className=\"brands-dashboard\">\r\n      <div className=\"d-sm-flex justify-content-between mb-3\">\r\n        <Button onClick={showAddDialog} className=\"mb-3 mb-sm-0\">\r\n          Add a new brand\r\n        </Button>\r\n        <div className=\"d-flex my-auto\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={searchValue}\r\n            placeholder=\"Search for...\"\r\n            onChange={(e) => setSearchValue(e.currentTarget.value)}\r\n            style={{ width: \"200px\", height: \"40px\" }}\r\n          />\r\n          <Form.Select\r\n            value={searchKey}\r\n            onChange={(e) => setSearchKey(e.currentTarget.value)}\r\n            style={{ width: \"100px\", height: \"40px\" }}\r\n          >\r\n            <option value=\"name\">Name</option>\r\n            <option value=\"description\">Description</option>\r\n          </Form.Select>\r\n        </div>\r\n      </div>\r\n      <AddBrand show={addDialog} onHide={hideAddDialog} />\r\n      {brands?.length > 0 ? (\r\n        <Table responsive size=\"sm\" className=\"table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Actions</th>\r\n              <th>Logo</th>\r\n              <th>Brand Name</th>\r\n              <th>Description</th>\r\n              <th>Sellers</th>\r\n              <th>Products</th>\r\n              <th>Date of Creation</th>\r\n              <th>Date of Updation</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {brands\r\n              .filter((brand) =>\r\n                brand[searchKey]?.toLowerCase().includes(searchValue.toLowerCase())\r\n              )\r\n              .map((brand, index) => (\r\n                <BrandRow key={index} brand={brand} index={index} />\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <h3>No brands found</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BrandRow = ({ brand, index }) => {\r\n  const [editDialog, setEditDialog] = useState(false);\r\n  const [removeDialog, setRemoveDialog] = useState(false);\r\n  const showEditDialog = () => setEditDialog(true);\r\n  const showRemoveDialog = () => setRemoveDialog(true);\r\n  const hideEditDialog = () => setEditDialog(false);\r\n  const hideRemoveDialog = () => setRemoveDialog(false);\r\n\r\n  return (\r\n    <tr>\r\n      <td>{index}</td>\r\n      <td>\r\n        <div style={{ width: \"90px\" }}>\r\n          <p className=\"text-success\" style={{ cursor: \"pointer\" }} onClick={showEditDialog}>\r\n            <FaPencilAlt /> Edit\r\n          </p>\r\n          <EditBrand show={editDialog} onHide={hideEditDialog} brandId={brand._id} brand={brand} />\r\n          <p className=\"text-danger\" style={{ cursor: \"pointer\" }} onClick={showRemoveDialog}>\r\n            <FaTimes /> Delete\r\n          </p>\r\n          <RemoveBrand\r\n            show={removeDialog}\r\n            onHide={hideRemoveDialog}\r\n            brandId={brand._id}\r\n            name={brand.name}\r\n          />\r\n          <p\r\n            className=\"text-secondary\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => navigator.clipboard.writeText(brand._id)}\r\n          >\r\n            <FaCopy /> Copy ID\r\n          </p>\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <a href={brand.logo || null}>\r\n          <img src={brand.logo || \"/assets/placeholders/brand.png\"} alt=\"Brand\" height=\"60px\" />\r\n        </a>\r\n      </td>\r\n      <td>{brand.name}</td>\r\n      <td>\r\n        {brand.description.length > 60\r\n          ? `${brand.description.substring(0, 60)}...`\r\n          : brand.description}\r\n      </td>\r\n      <td>{brand.sellers.map((seller) => seller.storeName).join(\", \")}</td>\r\n      <td>{brand.products?.map((product) => product.name).join(\", \")}</td>\r\n      <td>{convertTime(brand.createdAt)}</td>\r\n      <td>{convertTime(brand.updatedAt)}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default BrandsDashboard;\r\n","// Dependencies\r\nimport { Tab, Row, Col, Nav, Container } from \"react-bootstrap\";\r\nimport {\r\n  FaBars,\r\n  FaBoxOpen,\r\n  FaDna,\r\n  FaDog,\r\n  FaIcons,\r\n  FaMapMarkerAlt,\r\n  FaUsersCog,\r\n} from \"react-icons/fa\";\r\n\r\n// Screens\r\nimport UsersDashboard from \"./users/UsersDashboard.jsx\";\r\nimport DirectoriesDashboard from \"./directories/DirectoriesDashboard.jsx\";\r\nimport ProductsDashboard from \"./products/ProductsDashboard.jsx\";\r\nimport ServicesDashboard from \"./services/ServicesDashboard.jsx\";\r\nimport CategoriesDashboard from \"./categories/CategoriesDashboard.jsx\";\r\nimport PetsDashboard from \"./pets/PetsDashboard.jsx\";\r\nimport BrandsDashboard from \"./brands/BrandsDashboard.jsx\";\r\n\r\n// Custom CSS\r\nimport \"./AdminDashboard.css\";\r\n\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <Container fluid className=\"profile-container\">\r\n      <h2 className=\"my-1 pt-3\">Admin Dashboard</h2>\r\n      <Tab.Container id=\"profile-tabs\" defaultActiveKey=\"first\">\r\n        <Row>\r\n          <Col sm={3}>\r\n            <Nav variant=\"pills\" className=\"flex-column profile-sidebar py-2\">\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"first\">\r\n                  <FaUsersCog /> Users\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"second\">\r\n                  <FaBoxOpen /> Directories\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"third\">\r\n                  <FaDna /> Services\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"fourth\">\r\n                  <FaMapMarkerAlt /> Products\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"fifth\">\r\n                  <FaBars /> Categories\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"sixth\">\r\n                  <FaDog /> Pets\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"seventh\">\r\n                  <FaIcons /> Brands\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n            <Tab.Content className=\"py-2\">\r\n              <Tab.Pane eventKey=\"first\">\r\n                <UsersDashboard />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"second\">\r\n                <DirectoriesDashboard />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"third\">\r\n                <ServicesDashboard />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"fourth\">\r\n                <ProductsDashboard />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"fifth\">\r\n                <CategoriesDashboard />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"sixth\">\r\n                <PetsDashboard />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"seventh\">\r\n                <BrandsDashboard />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","// Libraries\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n// Actions\nimport { loadUser } from \"redux/actions/user.js\";\nimport {\n  getDirectoryCategories,\n  getProductCategories,\n  getServiceCategories,\n  getCategories,\n} from \"redux/actions/category.js\";\nimport { getPets } from \"redux/actions/pet.js\";\nimport { getBrands } from \"redux/actions/brand.js\";\n\n// Components\nimport PrivateRoute from \"components/PrivateRoute.jsx\";\nimport Navbar from \"components/Navbar.jsx\";\nimport Footer from \"components/Footer.jsx\";\n\n// Main Screens\nimport HomeScreen from \"screens/HomeScreen.jsx\";\nimport ShopScreen from \"screens/shop/ShopScreen.jsx\";\nimport ProductScreen from \"screens/shop/ProductScreen.jsx\";\nimport ServicesScreen from \"screens/services/ServicesScreen.jsx\";\nimport ServiceScreen from \"screens/services/ServiceScreen.jsx\";\nimport AboutScreen from \"screens/AboutScreen.jsx\";\nimport ContactScreen from \"screens/ContactScreen.jsx\";\n\n// Directory Screens\nimport DirectoriesScreen from \"screens/directory/DirectoriesScreen.jsx\";\nimport DirectoryProfileScreen from \"screens/directory/DirectoryProfileScreen.jsx\";\n\n// Auth Screens\nimport LoginScreen from \"screens/auth/LoginScreen.jsx\";\nimport RegisterScreen from \"screens/auth/RegisterScreen.jsx\";\nimport RegisterMemberScreen from \"screens/auth/RegisterMemberScreen.jsx\";\nimport VerifyAccountScreen from \"screens/auth/VerifyAccountScreen.jsx\";\nimport ForgotPasswordScreen from \"screens/auth/ForgotPasswordScreen.jsx\";\nimport ResetPasswordScreen from \"screens/auth/ResetPasswordScreen.jsx\";\n\n// Account Screens\nimport AccountScreen from \"screens/AccountScreen.jsx\";\nimport ProfileScreen from \"screens/profile/ProfileScreen.jsx\";\n\n// Dashboard Screens\nimport ProductDashboard from \"screens/dashboards/products/ProductDashboard.jsx\";\nimport ServiceDashboard from \"screens/dashboards/services/ServiceDashboard.jsx\";\nimport AdminDashboard from \"screens/dashboards/admin/AdminDashboard.jsx\";\n\nfunction App() {\n  // Checking for user token\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getDirectoryCategories());\n    dispatch(getServiceCategories());\n    dispatch(getProductCategories());\n    dispatch(getCategories());\n    dispatch(getPets());\n    dispatch(getBrands());\n    const listener = window.addEventListener(\"storage\", (() => dispatch(loadUser()))());\n    return () => window.removeEventListener(\"storage\", listener);\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        {/* Main Routes */}\n        <Route exact path=\"/\" component={HomeScreen} />\n        <Route exact path=\"/shop\" component={ShopScreen} />\n        <Route exact path=\"/shop/:productId\" component={ProductScreen} />\n        <Route exact path=\"/services\" component={ServicesScreen} />\n        <Route exact path=\"/services/:serviceId\" component={ServiceScreen} />\n        <Route exact path=\"/about\" component={AboutScreen} />\n        <Route exact path=\"/contact\" component={ContactScreen} />\n\n        {/* Auth Routes */}\n        <Route exact path=\"/login\" component={LoginScreen} />\n        <Route exact path=\"/register\" component={RegisterScreen} />\n        <Route exact path=\"/verify/:verifyToken\" component={VerifyAccountScreen} />\n        <Route exact path=\"/forgotpassword\" component={ForgotPasswordScreen} />\n        <Route exact path=\"/resetpassword/:resetToken\" component={ResetPasswordScreen} />\n        <Route exact path=\"/register/member\" component={RegisterMemberScreen} />\n\n        {/* Account Routes */}\n        <PrivateRoute exact path=\"/account\" component={AccountScreen} />\n        <PrivateRoute exact path=\"/account/profile\" component={ProfileScreen} />\n        <PrivateRoute exact path=\"/account/products\" component={ProductDashboard} />\n        <PrivateRoute exact path=\"/account/services\" component={ServiceDashboard} />\n        <PrivateRoute exact path=\"/admin\" isAdmin component={AdminDashboard} />\n\n        {/* Custom directory URL routes, must be at the end */}\n        <Route path=\"/directories\" component={DirectoriesScreen} />\n        <Route path=\"/:username\" component={DirectoryProfileScreen} />\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","// Dependencies\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// Reducers\r\nimport { forgotPasswordReducer, profileReducer, userReducer, adminReducer } from \"./reducers/user\";\r\nimport { productsReducer } from \"./reducers/product\";\r\nimport { servicesReducer } from \"./reducers/service\";\r\nimport { directoryReducer } from \"./reducers/directory\";\r\nimport { categoryReducer } from \"./reducers/category\";\r\nimport { petReducer } from \"./reducers/pet\";\r\nimport { brandReducer } from \"./reducers/brand\";\r\nimport { inquiryReducer } from \"./reducers/inquiry\";\r\n\r\n// Combining reducers\r\nconst reducer = combineReducers({\r\n  forgotPassword: forgotPasswordReducer,\r\n  profile: profileReducer,\r\n  user: userReducer,\r\n  admin: adminReducer,\r\n  product: productsReducer,\r\n  service: servicesReducer,\r\n  directory: directoryReducer,\r\n  category: categoryReducer,\r\n  pet: petReducer,\r\n  brand: brandReducer,\r\n  inquiry: inquiryReducer,\r\n});\r\n\r\n// Creating the store\r\nconst middleware = [thunk];\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n","import * as actionTypes from \"../constants/user\";\r\n\r\nexport const userReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    // Request actions\r\n    case actionTypes.LOGIN_REQUEST:\r\n    case actionTypes.REGISTER_REQUEST:\r\n    case actionTypes.LOAD_REQUEST:\r\n      return {\r\n        loading: true,\r\n        isAuthenticated: false,\r\n      };\r\n\r\n    case actionTypes.VERIFY_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        isVerified: false,\r\n      };\r\n    // Success actions\r\n    case actionTypes.LOGIN_SUCCESS:\r\n    case actionTypes.LOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        user: action.payload,\r\n      };\r\n    case actionTypes.VERIFY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isVerified: true,\r\n        user: action.payload,\r\n        isAuthenticated: true,\r\n      };\r\n    case actionTypes.LOGOUT_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        user: null,\r\n        isAuthenticated: false,\r\n      };\r\n    case actionTypes.REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        emailSent: true,\r\n        message: action.payload,\r\n      };\r\n\r\n    // Fail actions\r\n    case actionTypes.LOGIN_FAIL:\r\n    case actionTypes.VERIFY_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case actionTypes.REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        emailSent: false,\r\n        error: action.payload,\r\n      };\r\n    case actionTypes.LOAD_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n    case actionTypes.LOGOUT_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    // Clear errors\r\n    case actionTypes.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const profileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    // Request actions\r\n    case actionTypes.UPDATE_PROFILE_REQUEST:\r\n    case actionTypes.UPDATE_PASSWORD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    // Success actions\r\n    case actionTypes.UPDATE_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n        isUpdatedProfile: true,\r\n      };\r\n\r\n    case actionTypes.UPDATE_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n        isUpdatedPassword: true,\r\n      };\r\n    // Fail actions\r\n    case actionTypes.UPDATE_PROFILE_FAIL:\r\n    case actionTypes.UPDATE_PASSWORD_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        isUpdatedPassword: false,\r\n        isUpdatedProfile: false,\r\n      };\r\n\r\n    // Reset actions\r\n    case actionTypes.UPDATE_PASSWORD_RESET:\r\n      return {\r\n        ...state,\r\n        isUpdatedPassword: false,\r\n      };\r\n    case actionTypes.UPDATE_PROFILE_RESET:\r\n      return {\r\n        ...state,\r\n        isUpdatedProfile: false,\r\n      };\r\n\r\n    // Clear errors\r\n    case actionTypes.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        isUpdatedProfile: false,\r\n        isUpdatedPassword: false,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const forgotPasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    // Request actions\r\n    case actionTypes.FORGOT_PASSWORD_REQUEST:\r\n    case actionTypes.RESET_PASSWORD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n\r\n    // Success actions\r\n    case actionTypes.FORGOT_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        emailSent: action.payload,\r\n      };\r\n    case actionTypes.RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: action.payload,\r\n      };\r\n\r\n    // Fail actions\r\n    case actionTypes.FORGOT_PASSWORD_FAIL:\r\n    case actionTypes.RESET_PASSWORD_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    // Clear errors\r\n    case actionTypes.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const adminReducer = (state = { users: [], user: {} }, action) => {\r\n  switch (action.type) {\r\n    // Request actions\r\n    case actionTypes.GET_USER_REQUEST:\r\n    case actionTypes.GET_USERS_REQUEST:\r\n    case actionTypes.ADD_USER_REQUEST:\r\n    case actionTypes.EDIT_USER_REQUEST:\r\n    case actionTypes.REMOVE_USER_REQUEST:\r\n    case actionTypes.VERIFY_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    // Success actions\r\n    case actionTypes.GET_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        users: action.payload,\r\n      };\r\n    case actionTypes.GET_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        user: action.payload,\r\n      };\r\n    case actionTypes.ADD_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        error: null,\r\n        isAdded: true,\r\n        users: state.users.concat([action.payload]),\r\n      };\r\n    case actionTypes.REMOVE_USER_SUCCESS:\r\n      const removeIndex = state.users.findIndex((user) => user._id === action.payload._id);\r\n      state.users.splice(removeIndex, 1);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        isRemoved: true,\r\n        success: true,\r\n      };\r\n    case actionTypes.EDIT_USER_SUCCESS:\r\n    case actionTypes.VERIFY_USER_SUCCESS:\r\n      const editIndex = state.users.findIndex((user) => user._id === action.payload._id);\r\n      state.users[editIndex] = action.payload;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        isUpdated: true,\r\n        success: true,\r\n      };\r\n    // Fail actions\r\n    case actionTypes.GET_USER_FAIL:\r\n    case actionTypes.GET_USERS_FAIL:\r\n    case actionTypes.ADD_USER_FAIL:\r\n    case actionTypes.EDIT_USER_FAIL:\r\n    case actionTypes.REMOVE_USER_FAIL:\r\n    case actionTypes.VERIFY_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    // Clear errors\r\n    case actionTypes.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        success: null,\r\n      };\r\n    case actionTypes.ADD_USER_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isAdded: null,\r\n      };\r\n    case actionTypes.EDIT_USER_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isUpdated: null,\r\n      };\r\n    case actionTypes.REMOVE_USER_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isRemoved: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from \"../constants/product\";\r\n\r\nexport const productsReducer = (state = { products: [], product: {} }, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCTS_REQUEST:\r\n    case actionTypes.GET_OWN_PRODUCTS_REQUEST:\r\n    case actionTypes.GET_ALL_PRODUCTS_REQUEST:\r\n    case actionTypes.GET_OWN_PRODUCT_REQUEST:\r\n    case actionTypes.GET_ANY_PRODUCT_REQUEST:\r\n    case actionTypes.GET_PRODUCT_REQUEST:\r\n    case actionTypes.ADD_PRODUCT_REQUEST:\r\n    case actionTypes.EDIT_PRODUCT_REQUEST:\r\n    case actionTypes.APPROVE_PRODUCT_REQUEST:\r\n    case actionTypes.REMOVE_PRODUCT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case actionTypes.GET_PRODUCTS_SUCCESS:\r\n    case actionTypes.GET_OWN_PRODUCTS_SUCCESS:\r\n    case actionTypes.GET_ALL_PRODUCTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        error: null,\r\n        products: action.payload,\r\n      };\r\n    case actionTypes.GET_PRODUCT_SUCCESS:\r\n    case actionTypes.GET_OWN_PRODUCT_SUCCESS:\r\n    case actionTypes.GET_ANY_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        error: null,\r\n        product: action.payload,\r\n      };\r\n    case actionTypes.ADD_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        isAdded: true,\r\n        error: null,\r\n        products: state.products.concat([action.payload]),\r\n      };\r\n    case actionTypes.REMOVE_PRODUCT_SUCCESS:\r\n      const removeIndex = state.products.findIndex((product) => product._id === action.payload._id);\r\n      state.products.splice(removeIndex, 1);\r\n      return {\r\n        ...state,\r\n        isRemoved: true,\r\n        loading: false,\r\n        error: null,\r\n        success: true,\r\n      };\r\n    case actionTypes.EDIT_PRODUCT_SUCCESS:\r\n    case actionTypes.APPROVE_PRODUCT_SUCCESS:\r\n      const editIndex = state.products.findIndex((product) => product._id === action.payload._id);\r\n      state.products[editIndex] = action.payload;\r\n      return {\r\n        ...state,\r\n        isUpdated: true,\r\n        loading: false,\r\n        error: null,\r\n        success: true,\r\n      };\r\n    case actionTypes.GET_PRODUCTS_FAIL:\r\n    case actionTypes.GET_OWN_PRODUCTS_FAIL:\r\n    case actionTypes.GET_PRODUCT_FAIL:\r\n    case actionTypes.GET_OWN_PRODUCT_FAIL:\r\n    case actionTypes.ADD_PRODUCT_FAIL:\r\n    case actionTypes.EDIT_PRODUCT_FAIL:\r\n    case actionTypes.REMOVE_PRODUCT_FAIL:\r\n    case actionTypes.GET_ALL_PRODUCTS_FAIL:\r\n    case actionTypes.GET_ANY_PRODUCT_FAIL:\r\n    case actionTypes.APPROVE_PRODUCT_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        success: false,\r\n        loading: false,\r\n      };\r\n    case actionTypes.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        success: null,\r\n      };\r\n    case actionTypes.ADD_PRODUCT_RESET:\r\n      return {\r\n        ...state,\r\n        isAdded: null,\r\n      };\r\n    case actionTypes.EDIT_PRODUCT_RESET:\r\n      return {\r\n        ...state,\r\n        isUpdated: null,\r\n      };\r\n    case actionTypes.REMOVE_PRODUCT_RESET:\r\n      return {\r\n        ...state,\r\n        isRemoved: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from \"../constants/service\";\r\n\r\nexport const servicesReducer = (state = { services: [], service: {} }, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_SERVICES_REQUEST:\r\n    case actionTypes.GET_OWN_SERVICES_REQUEST:\r\n    case actionTypes.GET_ALL_SERVICES_REQUEST:\r\n    case actionTypes.GET_OWN_SERVICE_REQUEST:\r\n    case actionTypes.GET_SERVICE_REQUEST:\r\n    case actionTypes.GET_ANY_SERVICE_REQUEST:\r\n    case actionTypes.ADD_SERVICE_REQUEST:\r\n    case actionTypes.EDIT_SERVICE_REQUEST:\r\n    case actionTypes.APPROVE_SERVICE_REQUEST:\r\n    case actionTypes.REMOVE_SERVICE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case actionTypes.GET_SERVICES_SUCCESS:\r\n    case actionTypes.GET_OWN_SERVICES_SUCCESS:\r\n    case actionTypes.GET_ALL_SERVICES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        error: null,\r\n        services: action.payload,\r\n      };\r\n    case actionTypes.GET_SERVICE_SUCCESS:\r\n    case actionTypes.GET_OWN_SERVICE_SUCCESS:\r\n    case actionTypes.GET_ANY_SERVICE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        error: null,\r\n        service: action.payload,\r\n      };\r\n    case actionTypes.ADD_SERVICE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        isAdded: true,\r\n        error: null,\r\n        services: state.services.concat([action.payload]),\r\n      };\r\n    case actionTypes.REMOVE_SERVICE_SUCCESS:\r\n      const removeIndex = state.services.findIndex((service) => service._id === action.payload._id);\r\n      state.services.splice(removeIndex, 1);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isRemoved: true,\r\n        error: null,\r\n        success: true,\r\n      };\r\n    case actionTypes.EDIT_SERVICE_SUCCESS:\r\n    case actionTypes.APPROVE_SERVICE_SUCCESS:\r\n      const editIndex = state.services.findIndex((service) => service._id === action.payload._id);\r\n      state.services[editIndex] = action.payload;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isUpdated: true,\r\n        error: null,\r\n        success: true,\r\n      };\r\n    case actionTypes.GET_SERVICES_FAIL:\r\n    case actionTypes.GET_OWN_SERVICES_FAIL:\r\n    case actionTypes.GET_SERVICE_FAIL:\r\n    case actionTypes.GET_OWN_SERVICE_FAIL:\r\n    case actionTypes.ADD_SERVICE_FAIL:\r\n    case actionTypes.EDIT_SERVICE_FAIL:\r\n    case actionTypes.REMOVE_SERVICE_FAIL:\r\n    case actionTypes.GET_ALL_SERVICES_FAIL:\r\n    case actionTypes.GET_ANY_SERVICE_FAIL:\r\n    case actionTypes.APPROVE_SERVICE_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        success: false,\r\n        loading: false,\r\n      };\r\n    case actionTypes.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        success: null,\r\n      };\r\n    case actionTypes.ADD_SERVICE_RESET:\r\n      return {\r\n        ...state,\r\n        isAdded: null,\r\n      };\r\n    case actionTypes.EDIT_SERVICE_RESET:\r\n      return {\r\n        ...state,\r\n        isUpdated: null,\r\n      };\r\n    case actionTypes.REMOVE_SERVICE_RESET:\r\n      return {\r\n        ...state,\r\n        isRemoved: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from \"../constants/directory\";\r\n\r\nexport const directoryReducer = (\r\n  state = { directories: [], directory: {}, products: [], services: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    // Request actions\r\n    case actionTypes.REVIEW_DIRECTORY_REQUEST:\r\n    case actionTypes.REMOVE_DIRECTORY_REVIEW_REQUEST:\r\n      return {\r\n        ...state,\r\n        reviewLoading: true,\r\n      };\r\n    case actionTypes.GET_DIRECTORIES_REQUEST:\r\n    case actionTypes.GET_DIRECTORY_REQUEST:\r\n    case actionTypes.GET_DIRECTORY_PRODUCTS_REQUEST:\r\n    case actionTypes.GET_DIRECTORY_SERVICES_REQUEST:\r\n    case actionTypes.GET_ALL_DIRECTORIES_REQUEST:\r\n    case actionTypes.GET_ANY_DIRECTORY_REQUEST:\r\n    case actionTypes.ADD_DIRECTORY_REQUEST:\r\n    case actionTypes.EDIT_DIRECTORY_REQUEST:\r\n    case actionTypes.APPROVE_DIRECTORY_REQUEST:\r\n    case actionTypes.REMOVE_DIRECTORY_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    // Success actions\r\n    case actionTypes.GET_DIRECTORIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        directories: action.payload,\r\n      };\r\n    case actionTypes.GET_DIRECTORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        directory: action.payload,\r\n      };\r\n    case actionTypes.GET_DIRECTORY_PRODUCTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        products: action.payload,\r\n      };\r\n    case actionTypes.GET_DIRECTORY_SERVICES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        services: action.payload,\r\n      };\r\n    case actionTypes.GET_ALL_DIRECTORIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        directories: action.payload,\r\n      };\r\n    case actionTypes.GET_ANY_DIRECTORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        directory: action.payload,\r\n      };\r\n    case actionTypes.ADD_DIRECTORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        error: null,\r\n        isAdded: true,\r\n        directories: state.directories.concat([action.payload]),\r\n      };\r\n    case actionTypes.REMOVE_DIRECTORY_SUCCESS:\r\n      const removeIndex = state.directories.findIndex((user) => user._id === action.payload._id);\r\n      state.directories.splice(removeIndex, 1);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isRemoved: true,\r\n        error: null,\r\n        success: true,\r\n      };\r\n    case actionTypes.EDIT_DIRECTORY_SUCCESS:\r\n    case actionTypes.APPROVE_DIRECTORY_SUCCESS:\r\n      const editIndex = state.directories.findIndex((user) => user._id === action.payload._id);\r\n      state.directories[editIndex] = action.payload;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isUpdated: true,\r\n        error: null,\r\n        success: true,\r\n      };\r\n    case actionTypes.REVIEW_DIRECTORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        directory: {\r\n          ...state.directory,\r\n          reviews: state.directory.reviews.concat([action.payload]),\r\n        },\r\n        reviewLoading: false,\r\n        success: true,\r\n      };\r\n    case actionTypes.REMOVE_DIRECTORY_REVIEW_SUCCESS:\r\n      const index = state.directory.reviews.findIndex(\r\n        (review) => review._id === action.payload._id\r\n      );\r\n      state.directory.reviews.splice(index, 1);\r\n      return {\r\n        ...state,\r\n        reviewLoading: false,\r\n        success: true,\r\n      };\r\n    // Fail actions\r\n    case actionTypes.REVIEW_DIRECTORY_FAIL:\r\n    case actionTypes.REMOVE_DIRECTORY_REVIEW_FAIL:\r\n      return {\r\n        ...state,\r\n        reviewLoading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n    case actionTypes.GET_DIRECTORIES_FAIL:\r\n    case actionTypes.GET_DIRECTORY_FAIL:\r\n    case actionTypes.GET_ALL_DIRECTORIES_FAIL:\r\n    case actionTypes.GET_ANY_DIRECTORY_FAIL:\r\n    case actionTypes.GET_DIRECTORY_PRODUCTS_FAIL:\r\n    case actionTypes.GET_DIRECTORY_SERVICES_FAIL:\r\n    case actionTypes.ADD_DIRECTORY_FAIL:\r\n    case actionTypes.EDIT_DIRECTORY_FAIL:\r\n    case actionTypes.APPROVE_DIRECTORY_FAIL:\r\n    case actionTypes.REMOVE_DIRECTORY_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n    // Clear errors\r\n    case actionTypes.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        success: null,\r\n      };\r\n    case actionTypes.ADD_DIRECTORY_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isAdded: null,\r\n      };\r\n    case actionTypes.EDIT_DIRECTORY_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isUpdated: null,\r\n      };\r\n    case actionTypes.REMOVE_DIRECTORY_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isRemoved: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from \"../constants/category\";\r\n\r\nexport const categoryReducer = (\r\n  state = {\r\n    categories: [],\r\n    directoryCategories: [],\r\n    productCategories: [],\r\n    serviceCategories: [],\r\n    category: {},\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    // Request actions\r\n    case actionTypes.GET_CATEGORIES_REQUEST:\r\n    case actionTypes.GET_CATEGORY_REQUEST:\r\n    case actionTypes.GET_DIRECTORY_CATEGORIES_REQUEST:\r\n    case actionTypes.GET_PRODUCT_CATEGORIES_REQUEST:\r\n    case actionTypes.GET_SERVICE_CATEGORIES_REQUEST:\r\n    case actionTypes.ADD_CATEGORY_REQUEST:\r\n    case actionTypes.EDIT_CATEGORY_REQUEST:\r\n    case actionTypes.REMOVE_CATEGORY_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    // Success actions\r\n    case actionTypes.GET_DIRECTORY_CATEGORIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        directoryCategories: action.payload,\r\n      };\r\n    case actionTypes.GET_PRODUCT_CATEGORIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        productCategories: action.payload,\r\n      };\r\n    case actionTypes.GET_SERVICE_CATEGORIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        serviceCategories: action.payload,\r\n      };\r\n    case actionTypes.GET_CATEGORIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        categories: action.payload,\r\n      };\r\n    case actionTypes.GET_CATEGORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        category: action.payload,\r\n      };\r\n    case actionTypes.ADD_CATEGORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        error: null,\r\n        isAdded: true,\r\n        categories: state.categories.concat([action.payload]),\r\n        directoryCategories:\r\n          action.payload.type === \"Directory\"\r\n            ? state.directoryCategories.concat([action.payload])\r\n            : state.directoryCategories,\r\n        productCategories:\r\n          action.payload.type === \"Product\"\r\n            ? state.productCategories.concat([action.payload])\r\n            : state.productCategories,\r\n        serviceCategories:\r\n          action.payload.type === \"Service\"\r\n            ? state.serviceCategories.concat([action.payload])\r\n            : state.serviceCategories,\r\n      };\r\n    case actionTypes.REMOVE_CATEGORY_SUCCESS:\r\n      const removeIndex = state.categories.findIndex(\r\n        (category) => category._id === action.payload._id\r\n      );\r\n      state.categories.splice(removeIndex, 1);\r\n      if (action.payload.type === \"Directory\") {\r\n        const removeIndex = state.directoryCategories.findIndex(\r\n          (category) => category._id === action.payload._id\r\n        );\r\n        state.directoryCategories.splice(removeIndex, 1);\r\n      }\r\n      if (action.payload.type === \"Product\") {\r\n        const removeIndex = state.productCategories.findIndex(\r\n          (category) => category._id === action.payload._id\r\n        );\r\n        state.productCategories.splice(removeIndex, 1);\r\n      }\r\n      if (action.payload.type === \"Service\") {\r\n        const removeIndex = state.serviceCategories.findIndex(\r\n          (category) => category._id === action.payload._id\r\n        );\r\n        state.serviceCategories.splice(removeIndex, 1);\r\n      }\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isRemoved: true,\r\n        error: null,\r\n        success: true,\r\n      };\r\n    case actionTypes.EDIT_CATEGORY_SUCCESS:\r\n      const editIndex = state.categories.findIndex(\r\n        (category) => category._id === action.payload._id\r\n      );\r\n      state.categories[editIndex] = action.payload;\r\n      if (action.payload.type === \"Directory\") {\r\n        const editIndex = state.directoryCategories.findIndex(\r\n          (category) => category._id === action.payload._id\r\n        );\r\n        state.directoryCategories[editIndex] = action.payload;\r\n      }\r\n      if (action.payload.type === \"Product\") {\r\n        const editIndex = state.productCategories.findIndex(\r\n          (category) => category._id === action.payload._id\r\n        );\r\n        state.productCategories[editIndex] = action.payload;\r\n      }\r\n      if (action.payload.type === \"Service\") {\r\n        const editIndex = state.serviceCategories.findIndex(\r\n          (category) => category._id === action.payload._id\r\n        );\r\n        state.serviceCategories[editIndex] = action.payload;\r\n      }\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isUpdated: true,\r\n        error: null,\r\n        success: true,\r\n      };\r\n    // Fail actions\r\n    case actionTypes.GET_CATEGORIES_FAIL:\r\n    case actionTypes.GET_DIRECTORY_CATEGORIES_FAIL:\r\n    case actionTypes.GET_PRODUCT_CATEGORIES_FAIL:\r\n    case actionTypes.GET_SERVICE_CATEGORIES_FAIL:\r\n    case actionTypes.GET_CATEGORY_FAIL:\r\n    case actionTypes.ADD_CATEGORY_FAIL:\r\n    case actionTypes.EDIT_CATEGORY_FAIL:\r\n    case actionTypes.REMOVE_CATEGORY_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n    // Clear errors\r\n    case actionTypes.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        success: null,\r\n      };\r\n    case actionTypes.ADD_CATEGORY_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isAdded: null,\r\n      };\r\n    case actionTypes.EDIT_CATEGORY_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isUpdated: null,\r\n      };\r\n    case actionTypes.REMOVE_CATEGORY_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isRemoved: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from \"../constants/pet\";\r\n\r\nexport const petReducer = (state = { pets: [], pet: {} }, action) => {\r\n  switch (action.type) {\r\n    // Request actions\r\n    case actionTypes.GET_PETS_REQUEST:\r\n    case actionTypes.GET_PET_REQUEST:\r\n    case actionTypes.ADD_PET_REQUEST:\r\n    case actionTypes.EDIT_PET_REQUEST:\r\n    case actionTypes.REMOVE_PET_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    // Success actions\r\n    case actionTypes.GET_PETS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        pets: action.payload,\r\n      };\r\n    case actionTypes.GET_PET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        pet: action.payload,\r\n      };\r\n    case actionTypes.ADD_PET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        error: null,\r\n        isAdded: true,\r\n        pets: state.pets.concat([action.payload]),\r\n      };\r\n    case actionTypes.REMOVE_PET_SUCCESS:\r\n      const removeIndex = state.pets.findIndex((user) => user._id === action.payload._id);\r\n      state.pets.splice(removeIndex, 1);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isRemoved: true,\r\n        error: null,\r\n        success: true,\r\n      };\r\n    case actionTypes.EDIT_PET_SUCCESS:\r\n      const editIndex = state.pets.findIndex((user) => user._id === action.payload._id);\r\n      state.pets[editIndex] = action.payload;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isUpdated: true,\r\n        error: null,\r\n        success: true,\r\n      };\r\n    // Fail actions\r\n    case actionTypes.GET_PETS_FAIL:\r\n    case actionTypes.GET_PET_FAIL:\r\n    case actionTypes.ADD_PET_FAIL:\r\n    case actionTypes.EDIT_PET_FAIL:\r\n    case actionTypes.REMOVE_PET_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n    // Clear errors\r\n    case actionTypes.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        success: null,\r\n      };\r\n    case actionTypes.ADD_PET_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isAdded: null,\r\n      };\r\n    case actionTypes.EDIT_PET_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isUpdated: null,\r\n      };\r\n    case actionTypes.REMOVE_PET_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isRemoved: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from \"../constants/brand\";\r\n\r\nexport const brandReducer = (state = { brands: [], brand: {} }, action) => {\r\n  switch (action.type) {\r\n    // Request actions\r\n    case actionTypes.GET_BRANDS_REQUEST:\r\n    case actionTypes.GET_BRAND_REQUEST:\r\n    case actionTypes.ADD_BRAND_REQUEST:\r\n    case actionTypes.EDIT_BRAND_REQUEST:\r\n    case actionTypes.REMOVE_BRAND_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    // Success actions\r\n    case actionTypes.GET_BRANDS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        brands: action.payload,\r\n      };\r\n    case actionTypes.GET_BRAND_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        brand: action.payload,\r\n      };\r\n    case actionTypes.ADD_BRAND_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        error: null,\r\n        isAdded: true,\r\n        brands: state.brands.concat([action.payload]),\r\n      };\r\n    case actionTypes.REMOVE_BRAND_SUCCESS:\r\n      const removeIndex = state.brands.findIndex((brand) => brand._id === action.payload._id);\r\n      state.brands.splice(removeIndex, 1);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isRemoved: true,\r\n        error: null,\r\n        success: true,\r\n      };\r\n    case actionTypes.EDIT_BRAND_SUCCESS:\r\n      const editIndex = state.brands.findIndex((brand) => brand._id === action.payload._id);\r\n      state.brands[editIndex] = action.payload;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isUpdated: true,\r\n        error: null,\r\n        success: true,\r\n      };\r\n    // Fail actions\r\n    case actionTypes.GET_BRANDS_FAIL:\r\n    case actionTypes.GET_BRAND_FAIL:\r\n    case actionTypes.ADD_BRAND_FAIL:\r\n    case actionTypes.EDIT_BRAND_FAIL:\r\n    case actionTypes.REMOVE_BRAND_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n    // Clear errors\r\n    case actionTypes.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        success: null,\r\n      };\r\n    case actionTypes.ADD_BRAND_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isAdded: null,\r\n      };\r\n    case actionTypes.EDIT_BRAND_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isUpdated: null,\r\n      };\r\n    case actionTypes.REMOVE_BRAND_RESET:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        isRemoved: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as actionTypes from \"../constants/inquiry\";\r\n\r\nexport const inquiryReducer = (state = { inquiries: [], inquiry: {} }, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_INQUIRIES_REQUEST:\r\n    case actionTypes.GET_OWN_INQUIRIES_REQUEST:\r\n    case actionTypes.GET_OWN_INQUIRY_REQUEST:\r\n    case actionTypes.GET_INQUIRY_REQUEST:\r\n    case actionTypes.ADD_INQUIRY_REQUEST:\r\n    case actionTypes.EDIT_INQUIRY_REQUEST:\r\n    case actionTypes.REMOVE_INQUIRY_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case actionTypes.GET_INQUIRIES_SUCCESS:\r\n    case actionTypes.GET_OWN_INQUIRIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        inquiries: action.payload,\r\n      };\r\n    case actionTypes.GET_INQUIRY_SUCCESS:\r\n    case actionTypes.GET_OWN_INQUIRY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        inquiry: action.payload,\r\n      };\r\n    case actionTypes.ADD_INQUIRY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        isAdded: true,\r\n      };\r\n    case actionTypes.REMOVE_INQUIRY_SUCCESS:\r\n      const removeIndex = state.inquiries.findIndex(\r\n        (inquiry) => inquiry._id === action.payload._id\r\n      );\r\n      state.inquiries.splice(removeIndex, 1);\r\n      return {\r\n        ...state,\r\n        isRemoved: true,\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case actionTypes.EDIT_INQUIRY_SUCCESS:\r\n      const editIndex = state.inquiries.findIndex((inquiry) => inquiry._id === action.payload._id);\r\n      state.inquiries[editIndex] = action.payload;\r\n      return {\r\n        ...state,\r\n        isUpdated: true,\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case actionTypes.GET_INQUIRIES_FAIL:\r\n    case actionTypes.GET_OWN_INQUIRIES_FAIL:\r\n    case actionTypes.GET_INQUIRY_FAIL:\r\n    case actionTypes.GET_OWN_INQUIRY_FAIL:\r\n    case actionTypes.ADD_INQUIRY_FAIL:\r\n    case actionTypes.EDIT_INQUIRY_FAIL:\r\n    case actionTypes.REMOVE_INQUIRY_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        success: false,\r\n        loading: false,\r\n      };\r\n    case actionTypes.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        success: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// Dependencies\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// Main app component and css file\nimport App from \"./App\";\nimport \"./index.scss\";\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}